I0116 20:15:43.455054 23144 caffe.cpp:210] Use CPU.
I0116 20:15:43.455798 23144 solver.cpp:48] Initializing solver from parameters: 
test_iter: 0
test_interval: 1000
base_lr: 0.01
display: 20
max_iter: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 100000
snapshot: 10000
snapshot_prefix: "models/bvlc_alexnet/caffe_alexnet_train"
solver_mode: CPU
net: "models/bvlc_alexnet/train_val.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
I0116 20:15:43.455976 23144 solver.cpp:91] Creating training net from net file: models/bvlc_alexnet/train_val.prototxt
I0116 20:15:43.457484 23144 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I0116 20:15:43.457533 23144 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 20:15:43.458319 23144 net.cpp:58] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "/home/user/caffeOMP/original/caffe/data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "/home/user/caffeOMP/original/caffe/examples/imagenet/ilsvrc12_train_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0116 20:15:43.458520 23144 layer_factory.hpp:77] Creating layer data
I0116 20:15:43.459573 23144 net.cpp:100] Creating Layer data
I0116 20:15:43.459615 23144 net.cpp:408] data -> data
I0116 20:15:43.459887 23144 net.cpp:408] data -> label
I0116 20:15:43.459934 23144 data_transformer.cpp:25] Loading mean file from: /home/user/caffeOMP/original/caffe/data/ilsvrc12/imagenet_mean.binaryproto
I0116 20:15:43.460146 23145 db_lmdb.cpp:35] Opened lmdb /home/user/caffeOMP/original/caffe/examples/imagenet/ilsvrc12_train_lmdb
I0116 20:15:43.466070 23144 data_layer.cpp:41] output data size: 256,3,227,227
I0116 20:15:43.686537 23144 net.cpp:150] Setting up data
I0116 20:15:43.686669 23144 net.cpp:157] Top shape: 256 3 227 227 (39574272)
I0116 20:15:43.686700 23144 net.cpp:157] Top shape: 256 (256)
I0116 20:15:43.686708 23144 net.cpp:165] Memory required for data: 158298112
I0116 20:15:43.686725 23144 layer_factory.hpp:77] Creating layer conv1
I0116 20:15:43.686853 23144 net.cpp:100] Creating Layer conv1
I0116 20:15:43.686867 23144 net.cpp:434] conv1 <- data
I0116 20:15:43.686890 23144 net.cpp:408] conv1 -> conv1
I0116 20:15:43.688161 23144 net.cpp:150] Setting up conv1
I0116 20:15:43.688176 23144 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0116 20:15:43.688184 23144 net.cpp:165] Memory required for data: 455667712
I0116 20:15:43.688210 23144 layer_factory.hpp:77] Creating layer relu1
I0116 20:15:43.688225 23144 net.cpp:100] Creating Layer relu1
I0116 20:15:43.688231 23144 net.cpp:434] relu1 <- conv1
I0116 20:15:43.688241 23144 net.cpp:395] relu1 -> conv1 (in-place)
I0116 20:15:43.688256 23144 net.cpp:150] Setting up relu1
I0116 20:15:43.688266 23144 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0116 20:15:43.688271 23144 net.cpp:165] Memory required for data: 753037312
I0116 20:15:43.688278 23144 layer_factory.hpp:77] Creating layer norm1
I0116 20:15:43.688288 23144 net.cpp:100] Creating Layer norm1
I0116 20:15:43.688295 23144 net.cpp:434] norm1 <- conv1
I0116 20:15:43.688304 23144 net.cpp:408] norm1 -> norm1
I0116 20:15:43.688325 23144 net.cpp:150] Setting up norm1
I0116 20:15:43.688333 23144 net.cpp:157] Top shape: 256 96 55 55 (74342400)
I0116 20:15:43.688340 23144 net.cpp:165] Memory required for data: 1050406912
I0116 20:15:43.688361 23144 layer_factory.hpp:77] Creating layer pool1
I0116 20:15:43.688385 23144 net.cpp:100] Creating Layer pool1
I0116 20:15:43.688391 23144 net.cpp:434] pool1 <- norm1
I0116 20:15:43.688401 23144 net.cpp:408] pool1 -> pool1
I0116 20:15:43.688429 23144 net.cpp:150] Setting up pool1
I0116 20:15:43.688439 23144 net.cpp:157] Top shape: 256 96 27 27 (17915904)
I0116 20:15:43.688446 23144 net.cpp:165] Memory required for data: 1122070528
I0116 20:15:43.688453 23144 layer_factory.hpp:77] Creating layer conv2
I0116 20:15:43.688464 23144 net.cpp:100] Creating Layer conv2
I0116 20:15:43.688472 23144 net.cpp:434] conv2 <- pool1
I0116 20:15:43.688482 23144 net.cpp:408] conv2 -> conv2
I0116 20:15:43.699460 23144 net.cpp:150] Setting up conv2
I0116 20:15:43.699478 23144 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0116 20:15:43.699484 23144 net.cpp:165] Memory required for data: 1313173504
I0116 20:15:43.699499 23144 layer_factory.hpp:77] Creating layer relu2
I0116 20:15:43.699509 23144 net.cpp:100] Creating Layer relu2
I0116 20:15:43.699517 23144 net.cpp:434] relu2 <- conv2
I0116 20:15:43.699525 23144 net.cpp:395] relu2 -> conv2 (in-place)
I0116 20:15:43.699535 23144 net.cpp:150] Setting up relu2
I0116 20:15:43.699544 23144 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0116 20:15:43.699550 23144 net.cpp:165] Memory required for data: 1504276480
I0116 20:15:43.699558 23144 layer_factory.hpp:77] Creating layer norm2
I0116 20:15:43.699566 23144 net.cpp:100] Creating Layer norm2
I0116 20:15:43.699573 23144 net.cpp:434] norm2 <- conv2
I0116 20:15:43.699582 23144 net.cpp:408] norm2 -> norm2
I0116 20:15:43.699594 23144 net.cpp:150] Setting up norm2
I0116 20:15:43.699604 23144 net.cpp:157] Top shape: 256 256 27 27 (47775744)
I0116 20:15:43.699609 23144 net.cpp:165] Memory required for data: 1695379456
I0116 20:15:43.699616 23144 layer_factory.hpp:77] Creating layer pool2
I0116 20:15:43.699626 23144 net.cpp:100] Creating Layer pool2
I0116 20:15:43.699633 23144 net.cpp:434] pool2 <- norm2
I0116 20:15:43.699642 23144 net.cpp:408] pool2 -> pool2
I0116 20:15:43.699654 23144 net.cpp:150] Setting up pool2
I0116 20:15:43.699663 23144 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0116 20:15:43.699671 23144 net.cpp:165] Memory required for data: 1739681792
I0116 20:15:43.699676 23144 layer_factory.hpp:77] Creating layer conv3
I0116 20:15:43.699687 23144 net.cpp:100] Creating Layer conv3
I0116 20:15:43.699695 23144 net.cpp:434] conv3 <- pool2
I0116 20:15:43.699704 23144 net.cpp:408] conv3 -> conv3
I0116 20:15:43.731045 23144 net.cpp:150] Setting up conv3
I0116 20:15:43.731066 23144 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0116 20:15:43.731073 23144 net.cpp:165] Memory required for data: 1806135296
I0116 20:15:43.731086 23144 layer_factory.hpp:77] Creating layer relu3
I0116 20:15:43.731096 23144 net.cpp:100] Creating Layer relu3
I0116 20:15:43.731103 23144 net.cpp:434] relu3 <- conv3
I0116 20:15:43.731112 23144 net.cpp:395] relu3 -> conv3 (in-place)
I0116 20:15:43.731122 23144 net.cpp:150] Setting up relu3
I0116 20:15:43.731132 23144 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0116 20:15:43.731138 23144 net.cpp:165] Memory required for data: 1872588800
I0116 20:15:43.731145 23144 layer_factory.hpp:77] Creating layer conv4
I0116 20:15:43.731156 23144 net.cpp:100] Creating Layer conv4
I0116 20:15:43.731163 23144 net.cpp:434] conv4 <- conv3
I0116 20:15:43.731173 23144 net.cpp:408] conv4 -> conv4
I0116 20:15:43.754704 23144 net.cpp:150] Setting up conv4
I0116 20:15:43.754722 23144 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0116 20:15:43.754729 23144 net.cpp:165] Memory required for data: 1939042304
I0116 20:15:43.754740 23144 layer_factory.hpp:77] Creating layer relu4
I0116 20:15:43.754750 23144 net.cpp:100] Creating Layer relu4
I0116 20:15:43.754758 23144 net.cpp:434] relu4 <- conv4
I0116 20:15:43.754767 23144 net.cpp:395] relu4 -> conv4 (in-place)
I0116 20:15:43.754777 23144 net.cpp:150] Setting up relu4
I0116 20:15:43.754786 23144 net.cpp:157] Top shape: 256 384 13 13 (16613376)
I0116 20:15:43.754792 23144 net.cpp:165] Memory required for data: 2005495808
I0116 20:15:43.754818 23144 layer_factory.hpp:77] Creating layer conv5
I0116 20:15:43.754832 23144 net.cpp:100] Creating Layer conv5
I0116 20:15:43.754838 23144 net.cpp:434] conv5 <- conv4
I0116 20:15:43.754848 23144 net.cpp:408] conv5 -> conv5
I0116 20:15:43.770563 23144 net.cpp:150] Setting up conv5
I0116 20:15:43.770581 23144 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0116 20:15:43.770588 23144 net.cpp:165] Memory required for data: 2049798144
I0116 20:15:43.770602 23144 layer_factory.hpp:77] Creating layer relu5
I0116 20:15:43.770612 23144 net.cpp:100] Creating Layer relu5
I0116 20:15:43.770620 23144 net.cpp:434] relu5 <- conv5
I0116 20:15:43.770629 23144 net.cpp:395] relu5 -> conv5 (in-place)
I0116 20:15:43.770639 23144 net.cpp:150] Setting up relu5
I0116 20:15:43.770648 23144 net.cpp:157] Top shape: 256 256 13 13 (11075584)
I0116 20:15:43.770654 23144 net.cpp:165] Memory required for data: 2094100480
I0116 20:15:43.770660 23144 layer_factory.hpp:77] Creating layer pool5
I0116 20:15:43.770669 23144 net.cpp:100] Creating Layer pool5
I0116 20:15:43.770676 23144 net.cpp:434] pool5 <- conv5
I0116 20:15:43.770685 23144 net.cpp:408] pool5 -> pool5
I0116 20:15:43.770699 23144 net.cpp:150] Setting up pool5
I0116 20:15:43.770709 23144 net.cpp:157] Top shape: 256 256 6 6 (2359296)
I0116 20:15:43.770714 23144 net.cpp:165] Memory required for data: 2103537664
I0116 20:15:43.770722 23144 layer_factory.hpp:77] Creating layer fc6
I0116 20:15:43.770740 23144 net.cpp:100] Creating Layer fc6
I0116 20:15:43.770747 23144 net.cpp:434] fc6 <- pool5
I0116 20:15:43.770757 23144 net.cpp:408] fc6 -> fc6
I0116 20:15:45.128118 23144 net.cpp:150] Setting up fc6
I0116 20:15:45.128268 23144 net.cpp:157] Top shape: 256 4096 (1048576)
I0116 20:15:45.128278 23144 net.cpp:165] Memory required for data: 2107731968
I0116 20:15:45.128301 23144 layer_factory.hpp:77] Creating layer relu6
I0116 20:15:45.128329 23144 net.cpp:100] Creating Layer relu6
I0116 20:15:45.128340 23144 net.cpp:434] relu6 <- fc6
I0116 20:15:45.128360 23144 net.cpp:395] relu6 -> fc6 (in-place)
I0116 20:15:45.128384 23144 net.cpp:150] Setting up relu6
I0116 20:15:45.128393 23144 net.cpp:157] Top shape: 256 4096 (1048576)
I0116 20:15:45.128399 23144 net.cpp:165] Memory required for data: 2111926272
I0116 20:15:45.128407 23144 layer_factory.hpp:77] Creating layer drop6
I0116 20:15:45.128430 23144 net.cpp:100] Creating Layer drop6
I0116 20:15:45.128438 23144 net.cpp:434] drop6 <- fc6
I0116 20:15:45.128448 23144 net.cpp:395] drop6 -> fc6 (in-place)
I0116 20:15:45.128479 23144 net.cpp:150] Setting up drop6
I0116 20:15:45.128487 23144 net.cpp:157] Top shape: 256 4096 (1048576)
I0116 20:15:45.128494 23144 net.cpp:165] Memory required for data: 2116120576
I0116 20:15:45.128500 23144 layer_factory.hpp:77] Creating layer fc7
I0116 20:15:45.128516 23144 net.cpp:100] Creating Layer fc7
I0116 20:15:45.128523 23144 net.cpp:434] fc7 <- fc6
I0116 20:15:45.128533 23144 net.cpp:408] fc7 -> fc7
I0116 20:15:45.726328 23144 net.cpp:150] Setting up fc7
I0116 20:15:45.726481 23144 net.cpp:157] Top shape: 256 4096 (1048576)
I0116 20:15:45.726490 23144 net.cpp:165] Memory required for data: 2120314880
I0116 20:15:45.726511 23144 layer_factory.hpp:77] Creating layer relu7
I0116 20:15:45.726536 23144 net.cpp:100] Creating Layer relu7
I0116 20:15:45.726547 23144 net.cpp:434] relu7 <- fc7
I0116 20:15:45.726567 23144 net.cpp:395] relu7 -> fc7 (in-place)
I0116 20:15:45.726589 23144 net.cpp:150] Setting up relu7
I0116 20:15:45.726598 23144 net.cpp:157] Top shape: 256 4096 (1048576)
I0116 20:15:45.726605 23144 net.cpp:165] Memory required for data: 2124509184
I0116 20:15:45.726613 23144 layer_factory.hpp:77] Creating layer drop7
I0116 20:15:45.726625 23144 net.cpp:100] Creating Layer drop7
I0116 20:15:45.726634 23144 net.cpp:434] drop7 <- fc7
I0116 20:15:45.726642 23144 net.cpp:395] drop7 -> fc7 (in-place)
I0116 20:15:45.726656 23144 net.cpp:150] Setting up drop7
I0116 20:15:45.726665 23144 net.cpp:157] Top shape: 256 4096 (1048576)
I0116 20:15:45.726671 23144 net.cpp:165] Memory required for data: 2128703488
I0116 20:15:45.726732 23144 layer_factory.hpp:77] Creating layer fc8
I0116 20:15:45.726749 23144 net.cpp:100] Creating Layer fc8
I0116 20:15:45.726757 23144 net.cpp:434] fc8 <- fc7
I0116 20:15:45.726769 23144 net.cpp:408] fc8 -> fc8
I0116 20:15:45.873893 23144 net.cpp:150] Setting up fc8
I0116 20:15:45.873963 23144 net.cpp:157] Top shape: 256 1000 (256000)
I0116 20:15:45.873970 23144 net.cpp:165] Memory required for data: 2129727488
I0116 20:15:45.873994 23144 layer_factory.hpp:77] Creating layer loss
I0116 20:15:45.874017 23144 net.cpp:100] Creating Layer loss
I0116 20:15:45.874025 23144 net.cpp:434] loss <- fc8
I0116 20:15:45.874034 23144 net.cpp:434] loss <- label
I0116 20:15:45.874055 23144 net.cpp:408] loss -> loss
I0116 20:15:45.874100 23144 layer_factory.hpp:77] Creating layer loss
I0116 20:15:45.874667 23144 net.cpp:150] Setting up loss
I0116 20:15:45.874681 23144 net.cpp:157] Top shape: (1)
I0116 20:15:45.874688 23144 net.cpp:160]     with loss weight 1
I0116 20:15:45.874754 23144 net.cpp:165] Memory required for data: 2129727492
I0116 20:15:45.874763 23144 net.cpp:226] loss needs backward computation.
I0116 20:15:45.874770 23144 net.cpp:226] fc8 needs backward computation.
I0116 20:15:45.874778 23144 net.cpp:226] drop7 needs backward computation.
I0116 20:15:45.874785 23144 net.cpp:226] relu7 needs backward computation.
I0116 20:15:45.874791 23144 net.cpp:226] fc7 needs backward computation.
I0116 20:15:45.874799 23144 net.cpp:226] drop6 needs backward computation.
I0116 20:15:45.874805 23144 net.cpp:226] relu6 needs backward computation.
I0116 20:15:45.874812 23144 net.cpp:226] fc6 needs backward computation.
I0116 20:15:45.874819 23144 net.cpp:226] pool5 needs backward computation.
I0116 20:15:45.874827 23144 net.cpp:226] relu5 needs backward computation.
I0116 20:15:45.874835 23144 net.cpp:226] conv5 needs backward computation.
I0116 20:15:45.874841 23144 net.cpp:226] relu4 needs backward computation.
I0116 20:15:45.874848 23144 net.cpp:226] conv4 needs backward computation.
I0116 20:15:45.874856 23144 net.cpp:226] relu3 needs backward computation.
I0116 20:15:45.874863 23144 net.cpp:226] conv3 needs backward computation.
I0116 20:15:45.874871 23144 net.cpp:226] pool2 needs backward computation.
I0116 20:15:45.874877 23144 net.cpp:226] norm2 needs backward computation.
I0116 20:15:45.874886 23144 net.cpp:226] relu2 needs backward computation.
I0116 20:15:45.874891 23144 net.cpp:226] conv2 needs backward computation.
I0116 20:15:45.874898 23144 net.cpp:226] pool1 needs backward computation.
I0116 20:15:45.874905 23144 net.cpp:226] norm1 needs backward computation.
I0116 20:15:45.874913 23144 net.cpp:226] relu1 needs backward computation.
I0116 20:15:45.874920 23144 net.cpp:226] conv1 needs backward computation.
I0116 20:15:45.874927 23144 net.cpp:228] data does not need backward computation.
I0116 20:15:45.874934 23144 net.cpp:270] This network produces output loss
I0116 20:15:45.874958 23144 net.cpp:283] Network initialization done.
I0116 20:15:45.876080 23144 solver.cpp:181] Creating test net (#0) specified by net file: models/bvlc_alexnet/train_val.prototxt
I0116 20:15:45.876153 23144 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0116 20:15:45.876685 23144 net.cpp:58] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "/home/user/caffeOMP/original/caffe/data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "/home/user/caffeOMP/original/caffe/examples/imagenet/ilsvrc12_val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0116 20:15:45.876899 23144 layer_factory.hpp:77] Creating layer data
I0116 20:15:45.877120 23144 net.cpp:100] Creating Layer data
I0116 20:15:45.877136 23144 net.cpp:408] data -> data
I0116 20:15:45.877159 23144 net.cpp:408] data -> label
I0116 20:15:45.877174 23144 data_transformer.cpp:25] Loading mean file from: /home/user/caffeOMP/original/caffe/data/ilsvrc12/imagenet_mean.binaryproto
I0116 20:15:45.877521 23147 db_lmdb.cpp:35] Opened lmdb /home/user/caffeOMP/original/caffe/examples/imagenet/ilsvrc12_val_lmdb
I0116 20:15:45.881201 23144 data_layer.cpp:41] output data size: 50,3,227,227
I0116 20:15:45.935093 23144 net.cpp:150] Setting up data
I0116 20:15:45.935117 23144 net.cpp:157] Top shape: 50 3 227 227 (7729350)
I0116 20:15:45.935134 23144 net.cpp:157] Top shape: 50 (50)
I0116 20:15:45.935140 23144 net.cpp:165] Memory required for data: 30917600
I0116 20:15:45.935149 23144 layer_factory.hpp:77] Creating layer label_data_1_split
I0116 20:15:45.935256 23144 net.cpp:100] Creating Layer label_data_1_split
I0116 20:15:45.935266 23144 net.cpp:434] label_data_1_split <- label
I0116 20:15:45.935282 23144 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0116 20:15:45.935295 23144 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0116 20:15:45.935415 23144 net.cpp:150] Setting up label_data_1_split
I0116 20:15:45.935438 23144 net.cpp:157] Top shape: 50 (50)
I0116 20:15:45.935447 23144 net.cpp:157] Top shape: 50 (50)
I0116 20:15:45.935464 23144 net.cpp:165] Memory required for data: 30918000
I0116 20:15:45.935472 23144 layer_factory.hpp:77] Creating layer conv1
I0116 20:15:45.935494 23144 net.cpp:100] Creating Layer conv1
I0116 20:15:45.935503 23144 net.cpp:434] conv1 <- data
I0116 20:15:45.935513 23144 net.cpp:408] conv1 -> conv1
I0116 20:15:45.936702 23144 net.cpp:150] Setting up conv1
I0116 20:15:45.936717 23144 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0116 20:15:45.936723 23144 net.cpp:165] Memory required for data: 88998000
I0116 20:15:45.936738 23144 layer_factory.hpp:77] Creating layer relu1
I0116 20:15:45.936748 23144 net.cpp:100] Creating Layer relu1
I0116 20:15:45.936756 23144 net.cpp:434] relu1 <- conv1
I0116 20:15:45.936765 23144 net.cpp:395] relu1 -> conv1 (in-place)
I0116 20:15:45.936775 23144 net.cpp:150] Setting up relu1
I0116 20:15:45.936784 23144 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0116 20:15:45.936790 23144 net.cpp:165] Memory required for data: 147078000
I0116 20:15:45.936797 23144 layer_factory.hpp:77] Creating layer norm1
I0116 20:15:45.936808 23144 net.cpp:100] Creating Layer norm1
I0116 20:15:45.936815 23144 net.cpp:434] norm1 <- conv1
I0116 20:15:45.936823 23144 net.cpp:408] norm1 -> norm1
I0116 20:15:45.936837 23144 net.cpp:150] Setting up norm1
I0116 20:15:45.936846 23144 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0116 20:15:45.936852 23144 net.cpp:165] Memory required for data: 205158000
I0116 20:15:45.936859 23144 layer_factory.hpp:77] Creating layer pool1
I0116 20:15:45.936869 23144 net.cpp:100] Creating Layer pool1
I0116 20:15:45.936877 23144 net.cpp:434] pool1 <- norm1
I0116 20:15:45.936885 23144 net.cpp:408] pool1 -> pool1
I0116 20:15:45.936900 23144 net.cpp:150] Setting up pool1
I0116 20:15:45.936908 23144 net.cpp:157] Top shape: 50 96 27 27 (3499200)
I0116 20:15:45.936915 23144 net.cpp:165] Memory required for data: 219154800
I0116 20:15:45.936923 23144 layer_factory.hpp:77] Creating layer conv2
I0116 20:15:45.936933 23144 net.cpp:100] Creating Layer conv2
I0116 20:15:45.936940 23144 net.cpp:434] conv2 <- pool1
I0116 20:15:45.936949 23144 net.cpp:408] conv2 -> conv2
I0116 20:15:45.947304 23144 net.cpp:150] Setting up conv2
I0116 20:15:45.947319 23144 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0116 20:15:45.947325 23144 net.cpp:165] Memory required for data: 256479600
I0116 20:15:45.947348 23144 layer_factory.hpp:77] Creating layer relu2
I0116 20:15:45.947367 23144 net.cpp:100] Creating Layer relu2
I0116 20:15:45.947376 23144 net.cpp:434] relu2 <- conv2
I0116 20:15:45.947386 23144 net.cpp:395] relu2 -> conv2 (in-place)
I0116 20:15:45.947396 23144 net.cpp:150] Setting up relu2
I0116 20:15:45.947405 23144 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0116 20:15:45.947412 23144 net.cpp:165] Memory required for data: 293804400
I0116 20:15:45.947418 23144 layer_factory.hpp:77] Creating layer norm2
I0116 20:15:45.947432 23144 net.cpp:100] Creating Layer norm2
I0116 20:15:45.947439 23144 net.cpp:434] norm2 <- conv2
I0116 20:15:45.947448 23144 net.cpp:408] norm2 -> norm2
I0116 20:15:45.947463 23144 net.cpp:150] Setting up norm2
I0116 20:15:45.947471 23144 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0116 20:15:45.947477 23144 net.cpp:165] Memory required for data: 331129200
I0116 20:15:45.947484 23144 layer_factory.hpp:77] Creating layer pool2
I0116 20:15:45.947495 23144 net.cpp:100] Creating Layer pool2
I0116 20:15:45.947504 23144 net.cpp:434] pool2 <- norm2
I0116 20:15:45.947512 23144 net.cpp:408] pool2 -> pool2
I0116 20:15:45.947526 23144 net.cpp:150] Setting up pool2
I0116 20:15:45.947535 23144 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0116 20:15:45.947541 23144 net.cpp:165] Memory required for data: 339782000
I0116 20:15:45.947548 23144 layer_factory.hpp:77] Creating layer conv3
I0116 20:15:45.947582 23144 net.cpp:100] Creating Layer conv3
I0116 20:15:45.947592 23144 net.cpp:434] conv3 <- pool2
I0116 20:15:45.947602 23144 net.cpp:408] conv3 -> conv3
I0116 20:15:45.978772 23144 net.cpp:150] Setting up conv3
I0116 20:15:45.978791 23144 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0116 20:15:45.978798 23144 net.cpp:165] Memory required for data: 352761200
I0116 20:15:45.978811 23144 layer_factory.hpp:77] Creating layer relu3
I0116 20:15:45.978821 23144 net.cpp:100] Creating Layer relu3
I0116 20:15:45.978827 23144 net.cpp:434] relu3 <- conv3
I0116 20:15:45.978837 23144 net.cpp:395] relu3 -> conv3 (in-place)
I0116 20:15:45.978847 23144 net.cpp:150] Setting up relu3
I0116 20:15:45.978855 23144 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0116 20:15:45.978863 23144 net.cpp:165] Memory required for data: 365740400
I0116 20:15:45.978869 23144 layer_factory.hpp:77] Creating layer conv4
I0116 20:15:45.978883 23144 net.cpp:100] Creating Layer conv4
I0116 20:15:45.978890 23144 net.cpp:434] conv4 <- conv3
I0116 20:15:45.978902 23144 net.cpp:408] conv4 -> conv4
I0116 20:15:46.002586 23144 net.cpp:150] Setting up conv4
I0116 20:15:46.002604 23144 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0116 20:15:46.002610 23144 net.cpp:165] Memory required for data: 378719600
I0116 20:15:46.002621 23144 layer_factory.hpp:77] Creating layer relu4
I0116 20:15:46.002634 23144 net.cpp:100] Creating Layer relu4
I0116 20:15:46.002640 23144 net.cpp:434] relu4 <- conv4
I0116 20:15:46.002656 23144 net.cpp:395] relu4 -> conv4 (in-place)
I0116 20:15:46.002666 23144 net.cpp:150] Setting up relu4
I0116 20:15:46.002676 23144 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0116 20:15:46.002681 23144 net.cpp:165] Memory required for data: 391698800
I0116 20:15:46.002688 23144 layer_factory.hpp:77] Creating layer conv5
I0116 20:15:46.002699 23144 net.cpp:100] Creating Layer conv5
I0116 20:15:46.002707 23144 net.cpp:434] conv5 <- conv4
I0116 20:15:46.002718 23144 net.cpp:408] conv5 -> conv5
I0116 20:15:46.018268 23144 net.cpp:150] Setting up conv5
I0116 20:15:46.018283 23144 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0116 20:15:46.018290 23144 net.cpp:165] Memory required for data: 400351600
I0116 20:15:46.018303 23144 layer_factory.hpp:77] Creating layer relu5
I0116 20:15:46.018312 23144 net.cpp:100] Creating Layer relu5
I0116 20:15:46.018321 23144 net.cpp:434] relu5 <- conv5
I0116 20:15:46.018329 23144 net.cpp:395] relu5 -> conv5 (in-place)
I0116 20:15:46.018339 23144 net.cpp:150] Setting up relu5
I0116 20:15:46.018347 23144 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0116 20:15:46.018374 23144 net.cpp:165] Memory required for data: 409004400
I0116 20:15:46.018389 23144 layer_factory.hpp:77] Creating layer pool5
I0116 20:15:46.018400 23144 net.cpp:100] Creating Layer pool5
I0116 20:15:46.018409 23144 net.cpp:434] pool5 <- conv5
I0116 20:15:46.018419 23144 net.cpp:408] pool5 -> pool5
I0116 20:15:46.018432 23144 net.cpp:150] Setting up pool5
I0116 20:15:46.018441 23144 net.cpp:157] Top shape: 50 256 6 6 (460800)
I0116 20:15:46.018447 23144 net.cpp:165] Memory required for data: 410847600
I0116 20:15:46.018455 23144 layer_factory.hpp:77] Creating layer fc6
I0116 20:15:46.018465 23144 net.cpp:100] Creating Layer fc6
I0116 20:15:46.018471 23144 net.cpp:434] fc6 <- pool5
I0116 20:15:46.018481 23144 net.cpp:408] fc6 -> fc6
I0116 20:15:47.356202 23144 net.cpp:150] Setting up fc6
I0116 20:15:47.356361 23144 net.cpp:157] Top shape: 50 4096 (204800)
I0116 20:15:47.356369 23144 net.cpp:165] Memory required for data: 411666800
I0116 20:15:47.356390 23144 layer_factory.hpp:77] Creating layer relu6
I0116 20:15:47.356416 23144 net.cpp:100] Creating Layer relu6
I0116 20:15:47.356427 23144 net.cpp:434] relu6 <- fc6
I0116 20:15:47.356444 23144 net.cpp:395] relu6 -> fc6 (in-place)
I0116 20:15:47.356467 23144 net.cpp:150] Setting up relu6
I0116 20:15:47.356477 23144 net.cpp:157] Top shape: 50 4096 (204800)
I0116 20:15:47.356483 23144 net.cpp:165] Memory required for data: 412486000
I0116 20:15:47.356492 23144 layer_factory.hpp:77] Creating layer drop6
I0116 20:15:47.356506 23144 net.cpp:100] Creating Layer drop6
I0116 20:15:47.356513 23144 net.cpp:434] drop6 <- fc6
I0116 20:15:47.356523 23144 net.cpp:395] drop6 -> fc6 (in-place)
I0116 20:15:47.356537 23144 net.cpp:150] Setting up drop6
I0116 20:15:47.356546 23144 net.cpp:157] Top shape: 50 4096 (204800)
I0116 20:15:47.356554 23144 net.cpp:165] Memory required for data: 413305200
I0116 20:15:47.356559 23144 layer_factory.hpp:77] Creating layer fc7
I0116 20:15:47.356577 23144 net.cpp:100] Creating Layer fc7
I0116 20:15:47.356585 23144 net.cpp:434] fc7 <- fc6
I0116 20:15:47.356595 23144 net.cpp:408] fc7 -> fc7
I0116 20:15:47.948570 23144 net.cpp:150] Setting up fc7
I0116 20:15:47.948727 23144 net.cpp:157] Top shape: 50 4096 (204800)
I0116 20:15:47.948735 23144 net.cpp:165] Memory required for data: 414124400
I0116 20:15:47.948756 23144 layer_factory.hpp:77] Creating layer relu7
I0116 20:15:47.948786 23144 net.cpp:100] Creating Layer relu7
I0116 20:15:47.948797 23144 net.cpp:434] relu7 <- fc7
I0116 20:15:47.948814 23144 net.cpp:395] relu7 -> fc7 (in-place)
I0116 20:15:47.948837 23144 net.cpp:150] Setting up relu7
I0116 20:15:47.948846 23144 net.cpp:157] Top shape: 50 4096 (204800)
I0116 20:15:47.948853 23144 net.cpp:165] Memory required for data: 414943600
I0116 20:15:47.948860 23144 layer_factory.hpp:77] Creating layer drop7
I0116 20:15:47.948875 23144 net.cpp:100] Creating Layer drop7
I0116 20:15:47.948882 23144 net.cpp:434] drop7 <- fc7
I0116 20:15:47.948891 23144 net.cpp:395] drop7 -> fc7 (in-place)
I0116 20:15:47.948906 23144 net.cpp:150] Setting up drop7
I0116 20:15:47.948915 23144 net.cpp:157] Top shape: 50 4096 (204800)
I0116 20:15:47.948921 23144 net.cpp:165] Memory required for data: 415762800
I0116 20:15:47.948928 23144 layer_factory.hpp:77] Creating layer fc8
I0116 20:15:47.948942 23144 net.cpp:100] Creating Layer fc8
I0116 20:15:47.948951 23144 net.cpp:434] fc8 <- fc7
I0116 20:15:47.948962 23144 net.cpp:408] fc8 -> fc8
I0116 20:15:48.094698 23144 net.cpp:150] Setting up fc8
I0116 20:15:48.094753 23144 net.cpp:157] Top shape: 50 1000 (50000)
I0116 20:15:48.094760 23144 net.cpp:165] Memory required for data: 415962800
I0116 20:15:48.094774 23144 layer_factory.hpp:77] Creating layer fc8_fc8_0_split
I0116 20:15:48.094792 23144 net.cpp:100] Creating Layer fc8_fc8_0_split
I0116 20:15:48.094800 23144 net.cpp:434] fc8_fc8_0_split <- fc8
I0116 20:15:48.094815 23144 net.cpp:408] fc8_fc8_0_split -> fc8_fc8_0_split_0
I0116 20:15:48.094830 23144 net.cpp:408] fc8_fc8_0_split -> fc8_fc8_0_split_1
I0116 20:15:48.094842 23144 net.cpp:150] Setting up fc8_fc8_0_split
I0116 20:15:48.094888 23144 net.cpp:157] Top shape: 50 1000 (50000)
I0116 20:15:48.094915 23144 net.cpp:157] Top shape: 50 1000 (50000)
I0116 20:15:48.094923 23144 net.cpp:165] Memory required for data: 416362800
I0116 20:15:48.094929 23144 layer_factory.hpp:77] Creating layer accuracy
I0116 20:15:48.094955 23144 net.cpp:100] Creating Layer accuracy
I0116 20:15:48.094964 23144 net.cpp:434] accuracy <- fc8_fc8_0_split_0
I0116 20:15:48.094972 23144 net.cpp:434] accuracy <- label_data_1_split_0
I0116 20:15:48.094992 23144 net.cpp:408] accuracy -> accuracy
I0116 20:15:48.095016 23144 net.cpp:150] Setting up accuracy
I0116 20:15:48.095024 23144 net.cpp:157] Top shape: (1)
I0116 20:15:48.095031 23144 net.cpp:165] Memory required for data: 416362804
I0116 20:15:48.095038 23144 layer_factory.hpp:77] Creating layer loss
I0116 20:15:48.095052 23144 net.cpp:100] Creating Layer loss
I0116 20:15:48.095059 23144 net.cpp:434] loss <- fc8_fc8_0_split_1
I0116 20:15:48.095067 23144 net.cpp:434] loss <- label_data_1_split_1
I0116 20:15:48.095077 23144 net.cpp:408] loss -> loss
I0116 20:15:48.095099 23144 layer_factory.hpp:77] Creating layer loss
I0116 20:15:48.095237 23144 net.cpp:150] Setting up loss
I0116 20:15:48.095248 23144 net.cpp:157] Top shape: (1)
I0116 20:15:48.095255 23144 net.cpp:160]     with loss weight 1
I0116 20:15:48.095286 23144 net.cpp:165] Memory required for data: 416362808
I0116 20:15:48.095293 23144 net.cpp:226] loss needs backward computation.
I0116 20:15:48.095301 23144 net.cpp:228] accuracy does not need backward computation.
I0116 20:15:48.095309 23144 net.cpp:226] fc8_fc8_0_split needs backward computation.
I0116 20:15:48.095316 23144 net.cpp:226] fc8 needs backward computation.
I0116 20:15:48.095324 23144 net.cpp:226] drop7 needs backward computation.
I0116 20:15:48.095330 23144 net.cpp:226] relu7 needs backward computation.
I0116 20:15:48.095336 23144 net.cpp:226] fc7 needs backward computation.
I0116 20:15:48.095345 23144 net.cpp:226] drop6 needs backward computation.
I0116 20:15:48.095351 23144 net.cpp:226] relu6 needs backward computation.
I0116 20:15:48.095357 23144 net.cpp:226] fc6 needs backward computation.
I0116 20:15:48.095365 23144 net.cpp:226] pool5 needs backward computation.
I0116 20:15:48.095371 23144 net.cpp:226] relu5 needs backward computation.
I0116 20:15:48.095379 23144 net.cpp:226] conv5 needs backward computation.
I0116 20:15:48.095386 23144 net.cpp:226] relu4 needs backward computation.
I0116 20:15:48.095393 23144 net.cpp:226] conv4 needs backward computation.
I0116 20:15:48.095401 23144 net.cpp:226] relu3 needs backward computation.
I0116 20:15:48.095407 23144 net.cpp:226] conv3 needs backward computation.
I0116 20:15:48.095414 23144 net.cpp:226] pool2 needs backward computation.
I0116 20:15:48.095422 23144 net.cpp:226] norm2 needs backward computation.
I0116 20:15:48.095428 23144 net.cpp:226] relu2 needs backward computation.
I0116 20:15:48.095435 23144 net.cpp:226] conv2 needs backward computation.
I0116 20:15:48.095443 23144 net.cpp:226] pool1 needs backward computation.
I0116 20:15:48.095449 23144 net.cpp:226] norm1 needs backward computation.
I0116 20:15:48.095456 23144 net.cpp:226] relu1 needs backward computation.
I0116 20:15:48.095463 23144 net.cpp:226] conv1 needs backward computation.
I0116 20:15:48.095471 23144 net.cpp:228] label_data_1_split does not need backward computation.
I0116 20:15:48.095479 23144 net.cpp:228] data does not need backward computation.
I0116 20:15:48.095485 23144 net.cpp:270] This network produces output accuracy
I0116 20:15:48.095492 23144 net.cpp:270] This network produces output loss
I0116 20:15:48.095517 23144 net.cpp:283] Network initialization done.
I0116 20:15:48.095628 23144 solver.cpp:60] Solver scaffolding done.
I0116 20:15:48.095684 23144 caffe.cpp:251] Starting Optimization
I0116 20:15:48.095695 23144 solver.cpp:279] Solving AlexNet
I0116 20:15:48.095700 23144 solver.cpp:280] Learning Rate Policy: step
I0116 20:15:48.246433 23144 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63}
OMP: Info #156: KMP_AFFINITY: 64 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 4 packages x 8 cores/pkg x 2 threads/core (32 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 0 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 0 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 0 core 7 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 1 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 1 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 1 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 1 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 1 core 7 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 2 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 48 maps to package 2 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 2 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 49 maps to package 2 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 2 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 50 maps to package 2 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 2 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 51 maps to package 2 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 2 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 52 maps to package 2 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 2 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 53 maps to package 2 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 2 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 54 maps to package 2 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 2 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 55 maps to package 2 core 7 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 3 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 56 maps to package 3 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 3 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 57 maps to package 3 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 3 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 58 maps to package 3 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 3 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 59 maps to package 3 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 3 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 60 maps to package 3 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 3 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 61 maps to package 3 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 3 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 62 maps to package 3 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 3 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 63 maps to package 3 core 7 thread 1 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 0 bound to OS proc set {0,32}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 1 bound to OS proc set {8,40}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 2 bound to OS proc set {16,48}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 3 bound to OS proc set {24,56}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 4 bound to OS proc set {1,33}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 5 bound to OS proc set {9,41}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 7 bound to OS proc set {25,57}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 6 bound to OS proc set {17,49}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 8 bound to OS proc set {2,34}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 9 bound to OS proc set {10,42}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 10 bound to OS proc set {18,50}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 11 bound to OS proc set {26,58}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 12 bound to OS proc set {3,35}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 14 bound to OS proc set {19,51}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 13 bound to OS proc set {11,43}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 15 bound to OS proc set {27,59}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 16 bound to OS proc set {4,36}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 17 bound to OS proc set {12,44}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 18 bound to OS proc set {20,52}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 19 bound to OS proc set {28,60}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 21 bound to OS proc set {13,45}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 20 bound to OS proc set {5,37}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 22 bound to OS proc set {21,53}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 23 bound to OS proc set {29,61}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 24 bound to OS proc set {6,38}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 25 bound to OS proc set {14,46}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 26 bound to OS proc set {22,54}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 27 bound to OS proc set {30,62}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 28 bound to OS proc set {7,39}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 29 bound to OS proc set {15,47}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 30 bound to OS proc set {23,55}
OMP: Info #242: KMP_AFFINITY: pid 23144 thread 31 bound to OS proc set {31,63}
I0116 20:16:05.095211 23144 solver.cpp:228] Iteration 0, loss = 6.91263
I0116 20:16:05.095353 23144 solver.cpp:244]     Train net output #0: loss = 6.91263 (* 1 = 6.91263 loss)
I0116 20:16:05.095444 23144 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0116 20:21:17.686836 23144 solver.cpp:317] Iteration 20, loss = 4.89646
I0116 20:21:17.687136 23144 solver.cpp:322] Optimization Done.
I0116 20:21:17.687145 23144 caffe.cpp:254] Optimization Done.

 Performance counter stats for '/home/user/caffeOMP/original/caffe/build/tools/caffe.bin train --solver=models/bvlc_alexnet/solver_cust.prototxt':

    10,691,904,259      node-loads                                                  
     8,366,251,984      node-load-misses                                            

     334.365688222 seconds time elapsed


real	5m34.378s
user	165m14.921s
sys	3m51.216s
