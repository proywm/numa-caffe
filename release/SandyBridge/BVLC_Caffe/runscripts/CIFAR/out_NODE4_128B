I0116 18:53:31.502041 18926 caffe.cpp:210] Use CPU.
I0116 18:53:31.511512 18926 solver.cpp:48] Initializing solver from parameters: 
test_iter: 0
test_interval: 2000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize128.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0116 18:53:31.511713 18926 solver.cpp:91] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 18:53:31.519269 18926 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0116 18:53:31.519315 18926 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 18:53:31.519754 18926 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 18:53:31.519891 18926 layer_factory.hpp:77] Creating layer cifar
I0116 18:53:31.535106 18926 net.cpp:100] Creating Layer cifar
I0116 18:53:31.535245 18926 net.cpp:408] cifar -> data
I0116 18:53:31.535400 18926 net.cpp:408] cifar -> label
I0116 18:53:31.535466 18926 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 18:53:31.559520 18927 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0116 18:53:31.573788 18926 data_layer.cpp:41] output data size: 128,3,32,32
I0116 18:53:31.597041 18926 net.cpp:150] Setting up cifar
I0116 18:53:31.597110 18926 net.cpp:157] Top shape: 128 3 32 32 (393216)
I0116 18:53:31.597141 18926 net.cpp:157] Top shape: 128 (128)
I0116 18:53:31.597157 18926 net.cpp:165] Memory required for data: 1573376
I0116 18:53:31.597193 18926 layer_factory.hpp:77] Creating layer conv1
I0116 18:53:31.597265 18926 net.cpp:100] Creating Layer conv1
I0116 18:53:31.597287 18926 net.cpp:434] conv1 <- data
I0116 18:53:31.597332 18926 net.cpp:408] conv1 -> conv1
I0116 18:53:31.601327 18926 net.cpp:150] Setting up conv1
I0116 18:53:31.601529 18926 net.cpp:157] Top shape: 128 32 32 32 (4194304)
I0116 18:53:31.601550 18926 net.cpp:165] Memory required for data: 18350592
I0116 18:53:31.601608 18926 layer_factory.hpp:77] Creating layer pool1
I0116 18:53:31.601644 18926 net.cpp:100] Creating Layer pool1
I0116 18:53:31.601661 18926 net.cpp:434] pool1 <- conv1
I0116 18:53:31.601682 18926 net.cpp:408] pool1 -> pool1
I0116 18:53:31.601735 18926 net.cpp:150] Setting up pool1
I0116 18:53:31.601757 18926 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 18:53:31.601770 18926 net.cpp:165] Memory required for data: 22544896
I0116 18:53:31.601785 18926 layer_factory.hpp:77] Creating layer relu1
I0116 18:53:31.601806 18926 net.cpp:100] Creating Layer relu1
I0116 18:53:31.601821 18926 net.cpp:434] relu1 <- pool1
I0116 18:53:31.601847 18926 net.cpp:395] relu1 -> pool1 (in-place)
I0116 18:53:31.604446 18926 net.cpp:150] Setting up relu1
I0116 18:53:31.604480 18926 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 18:53:31.604493 18926 net.cpp:165] Memory required for data: 26739200
I0116 18:53:31.604509 18926 layer_factory.hpp:77] Creating layer norm1
I0116 18:53:31.604538 18926 net.cpp:100] Creating Layer norm1
I0116 18:53:31.604553 18926 net.cpp:434] norm1 <- pool1
I0116 18:53:31.604573 18926 net.cpp:408] norm1 -> norm1
I0116 18:53:31.611479 18926 net.cpp:150] Setting up norm1
I0116 18:53:31.611512 18926 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 18:53:31.611526 18926 net.cpp:165] Memory required for data: 30933504
I0116 18:53:31.611541 18926 layer_factory.hpp:77] Creating layer conv2
I0116 18:53:31.611575 18926 net.cpp:100] Creating Layer conv2
I0116 18:53:31.611591 18926 net.cpp:434] conv2 <- norm1
I0116 18:53:31.611616 18926 net.cpp:408] conv2 -> conv2
I0116 18:53:31.613664 18926 net.cpp:150] Setting up conv2
I0116 18:53:31.613703 18926 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 18:53:31.613718 18926 net.cpp:165] Memory required for data: 35127808
I0116 18:53:31.613746 18926 layer_factory.hpp:77] Creating layer relu2
I0116 18:53:31.613768 18926 net.cpp:100] Creating Layer relu2
I0116 18:53:31.613783 18926 net.cpp:434] relu2 <- conv2
I0116 18:53:31.613806 18926 net.cpp:395] relu2 -> conv2 (in-place)
I0116 18:53:31.613828 18926 net.cpp:150] Setting up relu2
I0116 18:53:31.613847 18926 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 18:53:31.613859 18926 net.cpp:165] Memory required for data: 39322112
I0116 18:53:31.613874 18926 layer_factory.hpp:77] Creating layer pool2
I0116 18:53:31.613894 18926 net.cpp:100] Creating Layer pool2
I0116 18:53:31.613909 18926 net.cpp:434] pool2 <- conv2
I0116 18:53:31.613931 18926 net.cpp:408] pool2 -> pool2
I0116 18:53:31.613957 18926 net.cpp:150] Setting up pool2
I0116 18:53:31.613976 18926 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 18:53:31.614004 18926 net.cpp:165] Memory required for data: 40370688
I0116 18:53:31.614027 18926 layer_factory.hpp:77] Creating layer norm2
I0116 18:53:31.614049 18926 net.cpp:100] Creating Layer norm2
I0116 18:53:31.614063 18926 net.cpp:434] norm2 <- pool2
I0116 18:53:31.614087 18926 net.cpp:408] norm2 -> norm2
I0116 18:53:31.614150 18926 net.cpp:150] Setting up norm2
I0116 18:53:31.614171 18926 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 18:53:31.614184 18926 net.cpp:165] Memory required for data: 41419264
I0116 18:53:31.614198 18926 layer_factory.hpp:77] Creating layer conv3
I0116 18:53:31.614253 18926 net.cpp:100] Creating Layer conv3
I0116 18:53:31.614302 18926 net.cpp:434] conv3 <- norm2
I0116 18:53:31.614323 18926 net.cpp:408] conv3 -> conv3
I0116 18:53:31.618314 18926 net.cpp:150] Setting up conv3
I0116 18:53:31.618345 18926 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 18:53:31.618357 18926 net.cpp:165] Memory required for data: 43516416
I0116 18:53:31.618386 18926 layer_factory.hpp:77] Creating layer relu3
I0116 18:53:31.618412 18926 net.cpp:100] Creating Layer relu3
I0116 18:53:31.618427 18926 net.cpp:434] relu3 <- conv3
I0116 18:53:31.618445 18926 net.cpp:395] relu3 -> conv3 (in-place)
I0116 18:53:31.618465 18926 net.cpp:150] Setting up relu3
I0116 18:53:31.618482 18926 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 18:53:31.618495 18926 net.cpp:165] Memory required for data: 45613568
I0116 18:53:31.618510 18926 layer_factory.hpp:77] Creating layer pool3
I0116 18:53:31.618531 18926 net.cpp:100] Creating Layer pool3
I0116 18:53:31.618546 18926 net.cpp:434] pool3 <- conv3
I0116 18:53:31.618563 18926 net.cpp:408] pool3 -> pool3
I0116 18:53:31.618587 18926 net.cpp:150] Setting up pool3
I0116 18:53:31.618604 18926 net.cpp:157] Top shape: 128 64 4 4 (131072)
I0116 18:53:31.618618 18926 net.cpp:165] Memory required for data: 46137856
I0116 18:53:31.618630 18926 layer_factory.hpp:77] Creating layer ip1
I0116 18:53:31.618664 18926 net.cpp:100] Creating Layer ip1
I0116 18:53:31.618679 18926 net.cpp:434] ip1 <- pool3
I0116 18:53:31.618697 18926 net.cpp:408] ip1 -> ip1
I0116 18:53:31.619545 18926 net.cpp:150] Setting up ip1
I0116 18:53:31.619572 18926 net.cpp:157] Top shape: 128 10 (1280)
I0116 18:53:31.619586 18926 net.cpp:165] Memory required for data: 46142976
I0116 18:53:31.619607 18926 layer_factory.hpp:77] Creating layer loss
I0116 18:53:31.619642 18926 net.cpp:100] Creating Layer loss
I0116 18:53:31.619658 18926 net.cpp:434] loss <- ip1
I0116 18:53:31.619675 18926 net.cpp:434] loss <- label
I0116 18:53:31.619696 18926 net.cpp:408] loss -> loss
I0116 18:53:31.619802 18926 layer_factory.hpp:77] Creating layer loss
I0116 18:53:31.619885 18926 net.cpp:150] Setting up loss
I0116 18:53:31.619906 18926 net.cpp:157] Top shape: (1)
I0116 18:53:31.619921 18926 net.cpp:160]     with loss weight 1
I0116 18:53:31.620018 18926 net.cpp:165] Memory required for data: 46142980
I0116 18:53:31.620035 18926 net.cpp:226] loss needs backward computation.
I0116 18:53:31.620050 18926 net.cpp:226] ip1 needs backward computation.
I0116 18:53:31.620116 18926 net.cpp:226] pool3 needs backward computation.
I0116 18:53:31.620132 18926 net.cpp:226] relu3 needs backward computation.
I0116 18:53:31.620146 18926 net.cpp:226] conv3 needs backward computation.
I0116 18:53:31.620160 18926 net.cpp:226] norm2 needs backward computation.
I0116 18:53:31.620174 18926 net.cpp:226] pool2 needs backward computation.
I0116 18:53:31.620188 18926 net.cpp:226] relu2 needs backward computation.
I0116 18:53:31.620201 18926 net.cpp:226] conv2 needs backward computation.
I0116 18:53:31.620215 18926 net.cpp:226] norm1 needs backward computation.
I0116 18:53:31.620229 18926 net.cpp:226] relu1 needs backward computation.
I0116 18:53:31.620244 18926 net.cpp:226] pool1 needs backward computation.
I0116 18:53:31.620257 18926 net.cpp:226] conv1 needs backward computation.
I0116 18:53:31.620273 18926 net.cpp:228] cifar does not need backward computation.
I0116 18:53:31.620287 18926 net.cpp:270] This network produces output loss
I0116 18:53:31.620326 18926 net.cpp:283] Network initialization done.
I0116 18:53:31.621783 18926 solver.cpp:181] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 18:53:31.621887 18926 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0116 18:53:31.622630 18926 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 18:53:31.622866 18926 layer_factory.hpp:77] Creating layer cifar
I0116 18:53:31.623141 18926 net.cpp:100] Creating Layer cifar
I0116 18:53:31.623178 18926 net.cpp:408] cifar -> data
I0116 18:53:31.623209 18926 net.cpp:408] cifar -> label
I0116 18:53:31.623234 18926 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 18:53:31.646744 18929 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0116 18:53:31.660616 18926 data_layer.cpp:41] output data size: 100,3,32,32
I0116 18:53:31.671967 18926 net.cpp:150] Setting up cifar
I0116 18:53:31.672049 18926 net.cpp:157] Top shape: 100 3 32 32 (307200)
I0116 18:53:31.672070 18926 net.cpp:157] Top shape: 100 (100)
I0116 18:53:31.672086 18926 net.cpp:165] Memory required for data: 1229200
I0116 18:53:31.672102 18926 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0116 18:53:31.672135 18926 net.cpp:100] Creating Layer label_cifar_1_split
I0116 18:53:31.672154 18926 net.cpp:434] label_cifar_1_split <- label
I0116 18:53:31.672176 18926 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_0
I0116 18:53:31.672210 18926 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_1
I0116 18:53:31.672238 18926 net.cpp:150] Setting up label_cifar_1_split
I0116 18:53:31.672258 18926 net.cpp:157] Top shape: 100 (100)
I0116 18:53:31.672273 18926 net.cpp:157] Top shape: 100 (100)
I0116 18:53:31.672287 18926 net.cpp:165] Memory required for data: 1230000
I0116 18:53:31.672334 18926 layer_factory.hpp:77] Creating layer conv1
I0116 18:53:31.672366 18926 net.cpp:100] Creating Layer conv1
I0116 18:53:31.672384 18926 net.cpp:434] conv1 <- data
I0116 18:53:31.672406 18926 net.cpp:408] conv1 -> conv1
I0116 18:53:31.672652 18926 net.cpp:150] Setting up conv1
I0116 18:53:31.672677 18926 net.cpp:157] Top shape: 100 32 32 32 (3276800)
I0116 18:53:31.672690 18926 net.cpp:165] Memory required for data: 14337200
I0116 18:53:31.672719 18926 layer_factory.hpp:77] Creating layer pool1
I0116 18:53:31.672740 18926 net.cpp:100] Creating Layer pool1
I0116 18:53:31.672755 18926 net.cpp:434] pool1 <- conv1
I0116 18:53:31.672775 18926 net.cpp:408] pool1 -> pool1
I0116 18:53:31.672802 18926 net.cpp:150] Setting up pool1
I0116 18:53:31.672821 18926 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 18:53:31.672833 18926 net.cpp:165] Memory required for data: 17614000
I0116 18:53:31.672847 18926 layer_factory.hpp:77] Creating layer relu1
I0116 18:53:31.672871 18926 net.cpp:100] Creating Layer relu1
I0116 18:53:31.672886 18926 net.cpp:434] relu1 <- pool1
I0116 18:53:31.672904 18926 net.cpp:395] relu1 -> pool1 (in-place)
I0116 18:53:31.672924 18926 net.cpp:150] Setting up relu1
I0116 18:53:31.672945 18926 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 18:53:31.672958 18926 net.cpp:165] Memory required for data: 20890800
I0116 18:53:31.672973 18926 layer_factory.hpp:77] Creating layer norm1
I0116 18:53:31.673008 18926 net.cpp:100] Creating Layer norm1
I0116 18:53:31.673025 18926 net.cpp:434] norm1 <- pool1
I0116 18:53:31.673044 18926 net.cpp:408] norm1 -> norm1
I0116 18:53:31.673104 18926 net.cpp:150] Setting up norm1
I0116 18:53:31.673127 18926 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 18:53:31.673141 18926 net.cpp:165] Memory required for data: 24167600
I0116 18:53:31.673156 18926 layer_factory.hpp:77] Creating layer conv2
I0116 18:53:31.673183 18926 net.cpp:100] Creating Layer conv2
I0116 18:53:31.673198 18926 net.cpp:434] conv2 <- norm1
I0116 18:53:31.673223 18926 net.cpp:408] conv2 -> conv2
I0116 18:53:31.675292 18926 net.cpp:150] Setting up conv2
I0116 18:53:31.675325 18926 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 18:53:31.675340 18926 net.cpp:165] Memory required for data: 27444400
I0116 18:53:31.675369 18926 layer_factory.hpp:77] Creating layer relu2
I0116 18:53:31.675395 18926 net.cpp:100] Creating Layer relu2
I0116 18:53:31.675410 18926 net.cpp:434] relu2 <- conv2
I0116 18:53:31.675428 18926 net.cpp:395] relu2 -> conv2 (in-place)
I0116 18:53:31.675477 18926 net.cpp:150] Setting up relu2
I0116 18:53:31.675498 18926 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 18:53:31.675513 18926 net.cpp:165] Memory required for data: 30721200
I0116 18:53:31.675528 18926 layer_factory.hpp:77] Creating layer pool2
I0116 18:53:31.675554 18926 net.cpp:100] Creating Layer pool2
I0116 18:53:31.675570 18926 net.cpp:434] pool2 <- conv2
I0116 18:53:31.675590 18926 net.cpp:408] pool2 -> pool2
I0116 18:53:31.675617 18926 net.cpp:150] Setting up pool2
I0116 18:53:31.675637 18926 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 18:53:31.675649 18926 net.cpp:165] Memory required for data: 31540400
I0116 18:53:31.675663 18926 layer_factory.hpp:77] Creating layer norm2
I0116 18:53:31.675686 18926 net.cpp:100] Creating Layer norm2
I0116 18:53:31.675703 18926 net.cpp:434] norm2 <- pool2
I0116 18:53:31.675721 18926 net.cpp:408] norm2 -> norm2
I0116 18:53:31.675777 18926 net.cpp:150] Setting up norm2
I0116 18:53:31.675799 18926 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 18:53:31.675812 18926 net.cpp:165] Memory required for data: 32359600
I0116 18:53:31.675827 18926 layer_factory.hpp:77] Creating layer conv3
I0116 18:53:31.675853 18926 net.cpp:100] Creating Layer conv3
I0116 18:53:31.675869 18926 net.cpp:434] conv3 <- norm2
I0116 18:53:31.675895 18926 net.cpp:408] conv3 -> conv3
I0116 18:53:31.679980 18926 net.cpp:150] Setting up conv3
I0116 18:53:31.680040 18926 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 18:53:31.680055 18926 net.cpp:165] Memory required for data: 33998000
I0116 18:53:31.680111 18926 layer_factory.hpp:77] Creating layer relu3
I0116 18:53:31.680133 18926 net.cpp:100] Creating Layer relu3
I0116 18:53:31.680150 18926 net.cpp:434] relu3 <- conv3
I0116 18:53:31.680169 18926 net.cpp:395] relu3 -> conv3 (in-place)
I0116 18:53:31.680191 18926 net.cpp:150] Setting up relu3
I0116 18:53:31.680209 18926 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 18:53:31.680223 18926 net.cpp:165] Memory required for data: 35636400
I0116 18:53:31.680238 18926 layer_factory.hpp:77] Creating layer pool3
I0116 18:53:31.680263 18926 net.cpp:100] Creating Layer pool3
I0116 18:53:31.680279 18926 net.cpp:434] pool3 <- conv3
I0116 18:53:31.680300 18926 net.cpp:408] pool3 -> pool3
I0116 18:53:31.680325 18926 net.cpp:150] Setting up pool3
I0116 18:53:31.680343 18926 net.cpp:157] Top shape: 100 64 4 4 (102400)
I0116 18:53:31.680357 18926 net.cpp:165] Memory required for data: 36046000
I0116 18:53:31.680371 18926 layer_factory.hpp:77] Creating layer ip1
I0116 18:53:31.680397 18926 net.cpp:100] Creating Layer ip1
I0116 18:53:31.680413 18926 net.cpp:434] ip1 <- pool3
I0116 18:53:31.680433 18926 net.cpp:408] ip1 -> ip1
I0116 18:53:31.681275 18926 net.cpp:150] Setting up ip1
I0116 18:53:31.681305 18926 net.cpp:157] Top shape: 100 10 (1000)
I0116 18:53:31.681319 18926 net.cpp:165] Memory required for data: 36050000
I0116 18:53:31.681340 18926 layer_factory.hpp:77] Creating layer ip1_ip1_0_split
I0116 18:53:31.681365 18926 net.cpp:100] Creating Layer ip1_ip1_0_split
I0116 18:53:31.681382 18926 net.cpp:434] ip1_ip1_0_split <- ip1
I0116 18:53:31.681401 18926 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0116 18:53:31.681424 18926 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0116 18:53:31.681448 18926 net.cpp:150] Setting up ip1_ip1_0_split
I0116 18:53:31.681493 18926 net.cpp:157] Top shape: 100 10 (1000)
I0116 18:53:31.681512 18926 net.cpp:157] Top shape: 100 10 (1000)
I0116 18:53:31.681526 18926 net.cpp:165] Memory required for data: 36058000
I0116 18:53:31.681540 18926 layer_factory.hpp:77] Creating layer accuracy
I0116 18:53:31.681571 18926 net.cpp:100] Creating Layer accuracy
I0116 18:53:31.681588 18926 net.cpp:434] accuracy <- ip1_ip1_0_split_0
I0116 18:53:31.681607 18926 net.cpp:434] accuracy <- label_cifar_1_split_0
I0116 18:53:31.681629 18926 net.cpp:408] accuracy -> accuracy
I0116 18:53:31.681660 18926 net.cpp:150] Setting up accuracy
I0116 18:53:31.681679 18926 net.cpp:157] Top shape: (1)
I0116 18:53:31.681691 18926 net.cpp:165] Memory required for data: 36058004
I0116 18:53:31.681705 18926 layer_factory.hpp:77] Creating layer loss
I0116 18:53:31.681725 18926 net.cpp:100] Creating Layer loss
I0116 18:53:31.681740 18926 net.cpp:434] loss <- ip1_ip1_0_split_1
I0116 18:53:31.681756 18926 net.cpp:434] loss <- label_cifar_1_split_1
I0116 18:53:31.681777 18926 net.cpp:408] loss -> loss
I0116 18:53:31.681804 18926 layer_factory.hpp:77] Creating layer loss
I0116 18:53:31.681849 18926 net.cpp:150] Setting up loss
I0116 18:53:31.681869 18926 net.cpp:157] Top shape: (1)
I0116 18:53:31.681882 18926 net.cpp:160]     with loss weight 1
I0116 18:53:31.681905 18926 net.cpp:165] Memory required for data: 36058008
I0116 18:53:31.681918 18926 net.cpp:226] loss needs backward computation.
I0116 18:53:31.681933 18926 net.cpp:228] accuracy does not need backward computation.
I0116 18:53:31.681947 18926 net.cpp:226] ip1_ip1_0_split needs backward computation.
I0116 18:53:31.681962 18926 net.cpp:226] ip1 needs backward computation.
I0116 18:53:31.681974 18926 net.cpp:226] pool3 needs backward computation.
I0116 18:53:31.682005 18926 net.cpp:226] relu3 needs backward computation.
I0116 18:53:31.682035 18926 net.cpp:226] conv3 needs backward computation.
I0116 18:53:31.682049 18926 net.cpp:226] norm2 needs backward computation.
I0116 18:53:31.682062 18926 net.cpp:226] pool2 needs backward computation.
I0116 18:53:31.682075 18926 net.cpp:226] relu2 needs backward computation.
I0116 18:53:31.682087 18926 net.cpp:226] conv2 needs backward computation.
I0116 18:53:31.682099 18926 net.cpp:226] norm1 needs backward computation.
I0116 18:53:31.682139 18926 net.cpp:226] relu1 needs backward computation.
I0116 18:53:31.682153 18926 net.cpp:226] pool1 needs backward computation.
I0116 18:53:31.682165 18926 net.cpp:226] conv1 needs backward computation.
I0116 18:53:31.682179 18926 net.cpp:228] label_cifar_1_split does not need backward computation.
I0116 18:53:31.682193 18926 net.cpp:228] cifar does not need backward computation.
I0116 18:53:31.682204 18926 net.cpp:270] This network produces output accuracy
I0116 18:53:31.682217 18926 net.cpp:270] This network produces output loss
I0116 18:53:31.682252 18926 net.cpp:283] Network initialization done.
I0116 18:53:31.682389 18926 solver.cpp:60] Solver scaffolding done.
I0116 18:53:31.682462 18926 caffe.cpp:251] Starting Optimization
I0116 18:53:31.682481 18926 solver.cpp:279] Solving CIFAR10_full
I0116 18:53:31.682492 18926 solver.cpp:280] Learning Rate Policy: fixed
I0116 18:53:31.682943 18926 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63}
OMP: Info #156: KMP_AFFINITY: 64 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 4 packages x 8 cores/pkg x 2 threads/core (32 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 0 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 0 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 0 core 7 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 1 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 1 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 1 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 1 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 1 core 7 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 2 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 48 maps to package 2 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 2 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 49 maps to package 2 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 2 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 50 maps to package 2 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 2 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 51 maps to package 2 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 2 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 52 maps to package 2 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 2 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 53 maps to package 2 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 2 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 54 maps to package 2 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 2 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 55 maps to package 2 core 7 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 3 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 56 maps to package 3 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 3 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 57 maps to package 3 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 3 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 58 maps to package 3 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 3 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 59 maps to package 3 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 3 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 60 maps to package 3 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 3 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 61 maps to package 3 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 3 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 62 maps to package 3 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 3 core 7 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 63 maps to package 3 core 7 thread 1 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 0 bound to OS proc set {0,32}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 1 bound to OS proc set {8,40}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 2 bound to OS proc set {16,48}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 3 bound to OS proc set {24,56}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 4 bound to OS proc set {1,33}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 5 bound to OS proc set {9,41}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 7 bound to OS proc set {25,57}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 6 bound to OS proc set {17,49}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 8 bound to OS proc set {2,34}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 9 bound to OS proc set {10,42}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 10 bound to OS proc set {18,50}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 11 bound to OS proc set {26,58}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 12 bound to OS proc set {3,35}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 14 bound to OS proc set {19,51}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 13 bound to OS proc set {11,43}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 15 bound to OS proc set {27,59}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 16 bound to OS proc set {4,36}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 17 bound to OS proc set {12,44}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 18 bound to OS proc set {20,52}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 19 bound to OS proc set {28,60}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 20 bound to OS proc set {5,37}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 21 bound to OS proc set {13,45}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 23 bound to OS proc set {29,61}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 22 bound to OS proc set {21,53}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 25 bound to OS proc set {14,46}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 24 bound to OS proc set {6,38}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 26 bound to OS proc set {22,54}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 27 bound to OS proc set {30,62}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 28 bound to OS proc set {7,39}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 29 bound to OS proc set {15,47}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 30 bound to OS proc set {23,55}
OMP: Info #242: KMP_AFFINITY: pid 18926 thread 31 bound to OS proc set {31,63}
I0116 18:53:32.374109 18926 solver.cpp:228] Iteration 0, loss = 2.30253
I0116 18:53:32.374366 18926 solver.cpp:244]     Train net output #0: loss = 2.30253 (* 1 = 2.30253 loss)
I0116 18:53:32.374392 18926 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0116 19:00:51.449503 18926 solver.cpp:317] Iteration 800, loss = 1.34716
I0116 19:00:51.449704 18926 solver.cpp:322] Optimization Done.
I0116 19:00:51.449714 18926 caffe.cpp:254] Optimization Done.

 Performance counter stats for '/home/user/caffeOMP/original/caffe/build/tools/caffe.bin train --solver=examples/cifar10/cifar10_full_solver_200_0T_bsize128.prototxt':

    13,775,987,694      node-loads                                                  
    11,847,392,469      node-load-misses                                            

     440.059467258 seconds time elapsed


real	7m20.076s
user	228m35.961s
sys	6m0.851s
