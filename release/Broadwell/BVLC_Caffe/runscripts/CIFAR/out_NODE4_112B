I0328 14:42:47.913108 162117 caffe.cpp:210] Use CPU.
I0328 14:42:47.913841 162117 solver.cpp:48] Initializing solver from parameters: 
test_iter: 0
test_interval: 2000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize112.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0328 14:42:47.914140 162117 solver.cpp:91] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize112.prototxt
I0328 14:42:47.915180 162117 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0328 14:42:47.915222 162117 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0328 14:42:47.915544 162117 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 112
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0328 14:42:47.916126 162117 layer_factory.hpp:77] Creating layer cifar
I0328 14:42:47.917294 162117 net.cpp:100] Creating Layer cifar
I0328 14:42:47.917341 162117 net.cpp:408] cifar -> data
I0328 14:42:47.917498 162117 net.cpp:408] cifar -> label
I0328 14:42:47.917554 162117 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0328 14:42:47.917606 162118 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0328 14:42:47.917922 162117 data_layer.cpp:41] output data size: 112,3,32,32
I0328 14:42:47.924635 162117 net.cpp:150] Setting up cifar
I0328 14:42:47.924681 162117 net.cpp:157] Top shape: 112 3 32 32 (344064)
I0328 14:42:47.924693 162117 net.cpp:157] Top shape: 112 (112)
I0328 14:42:47.924697 162117 net.cpp:165] Memory required for data: 1376704
I0328 14:42:47.924721 162117 layer_factory.hpp:77] Creating layer conv1
I0328 14:42:47.924774 162117 net.cpp:100] Creating Layer conv1
I0328 14:42:47.924795 162117 net.cpp:434] conv1 <- data
I0328 14:42:47.924840 162117 net.cpp:408] conv1 -> conv1
I0328 14:42:47.925647 162117 net.cpp:150] Setting up conv1
I0328 14:42:47.925669 162117 net.cpp:157] Top shape: 112 32 32 32 (3670016)
I0328 14:42:47.925674 162117 net.cpp:165] Memory required for data: 16056768
I0328 14:42:47.925736 162117 layer_factory.hpp:77] Creating layer pool1
I0328 14:42:47.925771 162117 net.cpp:100] Creating Layer pool1
I0328 14:42:47.925781 162117 net.cpp:434] pool1 <- conv1
I0328 14:42:47.925801 162117 net.cpp:408] pool1 -> pool1
I0328 14:42:47.925850 162117 net.cpp:150] Setting up pool1
I0328 14:42:47.925864 162117 net.cpp:157] Top shape: 112 32 16 16 (917504)
I0328 14:42:47.925869 162117 net.cpp:165] Memory required for data: 19726784
I0328 14:42:47.925876 162117 layer_factory.hpp:77] Creating layer relu1
I0328 14:42:47.925899 162117 net.cpp:100] Creating Layer relu1
I0328 14:42:47.925907 162117 net.cpp:434] relu1 <- pool1
I0328 14:42:47.925925 162117 net.cpp:395] relu1 -> pool1 (in-place)
I0328 14:42:47.925941 162117 net.cpp:150] Setting up relu1
I0328 14:42:47.925950 162117 net.cpp:157] Top shape: 112 32 16 16 (917504)
I0328 14:42:47.925954 162117 net.cpp:165] Memory required for data: 23396800
I0328 14:42:47.925961 162117 layer_factory.hpp:77] Creating layer norm1
I0328 14:42:47.925992 162117 net.cpp:100] Creating Layer norm1
I0328 14:42:47.926000 162117 net.cpp:434] norm1 <- pool1
I0328 14:42:47.926019 162117 net.cpp:408] norm1 -> norm1
I0328 14:42:47.926193 162117 net.cpp:150] Setting up norm1
I0328 14:42:47.926208 162117 net.cpp:157] Top shape: 112 32 16 16 (917504)
I0328 14:42:47.926213 162117 net.cpp:165] Memory required for data: 27066816
I0328 14:42:47.926220 162117 layer_factory.hpp:77] Creating layer conv2
I0328 14:42:47.926252 162117 net.cpp:100] Creating Layer conv2
I0328 14:42:47.926262 162117 net.cpp:434] conv2 <- norm1
I0328 14:42:47.926290 162117 net.cpp:408] conv2 -> conv2
I0328 14:42:47.932675 162117 net.cpp:150] Setting up conv2
I0328 14:42:47.932695 162117 net.cpp:157] Top shape: 112 32 16 16 (917504)
I0328 14:42:47.932703 162117 net.cpp:165] Memory required for data: 30736832
I0328 14:42:47.932734 162117 layer_factory.hpp:77] Creating layer relu2
I0328 14:42:47.932757 162117 net.cpp:100] Creating Layer relu2
I0328 14:42:47.932766 162117 net.cpp:434] relu2 <- conv2
I0328 14:42:47.932783 162117 net.cpp:395] relu2 -> conv2 (in-place)
I0328 14:42:47.932801 162117 net.cpp:150] Setting up relu2
I0328 14:42:47.932809 162117 net.cpp:157] Top shape: 112 32 16 16 (917504)
I0328 14:42:47.932813 162117 net.cpp:165] Memory required for data: 34406848
I0328 14:42:47.932821 162117 layer_factory.hpp:77] Creating layer pool2
I0328 14:42:47.932847 162117 net.cpp:100] Creating Layer pool2
I0328 14:42:47.932855 162117 net.cpp:434] pool2 <- conv2
I0328 14:42:47.932871 162117 net.cpp:408] pool2 -> pool2
I0328 14:42:47.932900 162117 net.cpp:150] Setting up pool2
I0328 14:42:47.932911 162117 net.cpp:157] Top shape: 112 32 8 8 (229376)
I0328 14:42:47.932915 162117 net.cpp:165] Memory required for data: 35324352
I0328 14:42:47.932922 162117 layer_factory.hpp:77] Creating layer norm2
I0328 14:42:47.932950 162117 net.cpp:100] Creating Layer norm2
I0328 14:42:47.932958 162117 net.cpp:434] norm2 <- pool2
I0328 14:42:47.932982 162117 net.cpp:408] norm2 -> norm2
I0328 14:42:47.933075 162117 net.cpp:150] Setting up norm2
I0328 14:42:47.933089 162117 net.cpp:157] Top shape: 112 32 8 8 (229376)
I0328 14:42:47.933094 162117 net.cpp:165] Memory required for data: 36241856
I0328 14:42:47.933109 162117 layer_factory.hpp:77] Creating layer conv3
I0328 14:42:47.933149 162117 net.cpp:100] Creating Layer conv3
I0328 14:42:47.933158 162117 net.cpp:434] conv3 <- norm2
I0328 14:42:47.933182 162117 net.cpp:408] conv3 -> conv3
I0328 14:42:47.945858 162117 net.cpp:150] Setting up conv3
I0328 14:42:47.945878 162117 net.cpp:157] Top shape: 112 64 8 8 (458752)
I0328 14:42:47.945883 162117 net.cpp:165] Memory required for data: 38076864
I0328 14:42:47.945911 162117 layer_factory.hpp:77] Creating layer relu3
I0328 14:42:47.945932 162117 net.cpp:100] Creating Layer relu3
I0328 14:42:47.945941 162117 net.cpp:434] relu3 <- conv3
I0328 14:42:47.945957 162117 net.cpp:395] relu3 -> conv3 (in-place)
I0328 14:42:47.945976 162117 net.cpp:150] Setting up relu3
I0328 14:42:47.945983 162117 net.cpp:157] Top shape: 112 64 8 8 (458752)
I0328 14:42:47.945987 162117 net.cpp:165] Memory required for data: 39911872
I0328 14:42:47.945993 162117 layer_factory.hpp:77] Creating layer pool3
I0328 14:42:47.946008 162117 net.cpp:100] Creating Layer pool3
I0328 14:42:47.946014 162117 net.cpp:434] pool3 <- conv3
I0328 14:42:47.946029 162117 net.cpp:408] pool3 -> pool3
I0328 14:42:47.946056 162117 net.cpp:150] Setting up pool3
I0328 14:42:47.946066 162117 net.cpp:157] Top shape: 112 64 4 4 (114688)
I0328 14:42:47.946070 162117 net.cpp:165] Memory required for data: 40370624
I0328 14:42:47.946077 162117 layer_factory.hpp:77] Creating layer ip1
I0328 14:42:47.946105 162117 net.cpp:100] Creating Layer ip1
I0328 14:42:47.946113 162117 net.cpp:434] ip1 <- pool3
I0328 14:42:47.946132 162117 net.cpp:408] ip1 -> ip1
I0328 14:42:47.948650 162117 net.cpp:150] Setting up ip1
I0328 14:42:47.948668 162117 net.cpp:157] Top shape: 112 10 (1120)
I0328 14:42:47.948671 162117 net.cpp:165] Memory required for data: 40375104
I0328 14:42:47.948688 162117 layer_factory.hpp:77] Creating layer loss
I0328 14:42:47.948714 162117 net.cpp:100] Creating Layer loss
I0328 14:42:47.948721 162117 net.cpp:434] loss <- ip1
I0328 14:42:47.948736 162117 net.cpp:434] loss <- label
I0328 14:42:47.948755 162117 net.cpp:408] loss -> loss
I0328 14:42:47.948779 162117 layer_factory.hpp:77] Creating layer loss
I0328 14:42:47.948849 162117 net.cpp:150] Setting up loss
I0328 14:42:47.948860 162117 net.cpp:157] Top shape: (1)
I0328 14:42:47.948864 162117 net.cpp:160]     with loss weight 1
I0328 14:42:47.948885 162117 net.cpp:165] Memory required for data: 40375108
I0328 14:42:47.948894 162117 net.cpp:226] loss needs backward computation.
I0328 14:42:47.948902 162117 net.cpp:226] ip1 needs backward computation.
I0328 14:42:47.948909 162117 net.cpp:226] pool3 needs backward computation.
I0328 14:42:47.948914 162117 net.cpp:226] relu3 needs backward computation.
I0328 14:42:47.948918 162117 net.cpp:226] conv3 needs backward computation.
I0328 14:42:47.948925 162117 net.cpp:226] norm2 needs backward computation.
I0328 14:42:47.948930 162117 net.cpp:226] pool2 needs backward computation.
I0328 14:42:47.948935 162117 net.cpp:226] relu2 needs backward computation.
I0328 14:42:47.948940 162117 net.cpp:226] conv2 needs backward computation.
I0328 14:42:47.948945 162117 net.cpp:226] norm1 needs backward computation.
I0328 14:42:47.948949 162117 net.cpp:226] relu1 needs backward computation.
I0328 14:42:47.948954 162117 net.cpp:226] pool1 needs backward computation.
I0328 14:42:47.948959 162117 net.cpp:226] conv1 needs backward computation.
I0328 14:42:47.948966 162117 net.cpp:228] cifar does not need backward computation.
I0328 14:42:47.948974 162117 net.cpp:270] This network produces output loss
I0328 14:42:47.949009 162117 net.cpp:283] Network initialization done.
I0328 14:42:47.949781 162117 solver.cpp:181] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize112.prototxt
I0328 14:42:47.949869 162117 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0328 14:42:47.950207 162117 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0328 14:42:47.950538 162117 layer_factory.hpp:77] Creating layer cifar
I0328 14:42:47.950806 162117 net.cpp:100] Creating Layer cifar
I0328 14:42:47.950834 162117 net.cpp:408] cifar -> data
I0328 14:42:47.950870 162117 net.cpp:408] cifar -> label
I0328 14:42:47.950891 162120 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0328 14:42:47.950896 162117 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0328 14:42:47.951187 162117 data_layer.cpp:41] output data size: 100,3,32,32
I0328 14:42:47.957022 162117 net.cpp:150] Setting up cifar
I0328 14:42:47.957046 162117 net.cpp:157] Top shape: 100 3 32 32 (307200)
I0328 14:42:47.957053 162117 net.cpp:157] Top shape: 100 (100)
I0328 14:42:47.957057 162117 net.cpp:165] Memory required for data: 1229200
I0328 14:42:47.957070 162117 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0328 14:42:47.957095 162117 net.cpp:100] Creating Layer label_cifar_1_split
I0328 14:42:47.957105 162117 net.cpp:434] label_cifar_1_split <- label
I0328 14:42:47.957125 162117 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_0
I0328 14:42:47.957159 162117 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_1
I0328 14:42:47.957185 162117 net.cpp:150] Setting up label_cifar_1_split
I0328 14:42:47.957203 162117 net.cpp:157] Top shape: 100 (100)
I0328 14:42:47.957221 162117 net.cpp:157] Top shape: 100 (100)
I0328 14:42:47.957226 162117 net.cpp:165] Memory required for data: 1230000
I0328 14:42:47.957231 162117 layer_factory.hpp:77] Creating layer conv1
I0328 14:42:47.957262 162117 net.cpp:100] Creating Layer conv1
I0328 14:42:47.957270 162117 net.cpp:434] conv1 <- data
I0328 14:42:47.957293 162117 net.cpp:408] conv1 -> conv1
I0328 14:42:47.957972 162117 net.cpp:150] Setting up conv1
I0328 14:42:47.957990 162117 net.cpp:157] Top shape: 100 32 32 32 (3276800)
I0328 14:42:47.957995 162117 net.cpp:165] Memory required for data: 14337200
I0328 14:42:47.958034 162117 layer_factory.hpp:77] Creating layer pool1
I0328 14:42:47.958056 162117 net.cpp:100] Creating Layer pool1
I0328 14:42:47.958065 162117 net.cpp:434] pool1 <- conv1
I0328 14:42:47.958083 162117 net.cpp:408] pool1 -> pool1
I0328 14:42:47.958118 162117 net.cpp:150] Setting up pool1
I0328 14:42:47.958129 162117 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0328 14:42:47.958134 162117 net.cpp:165] Memory required for data: 17614000
I0328 14:42:47.958140 162117 layer_factory.hpp:77] Creating layer relu1
I0328 14:42:47.958159 162117 net.cpp:100] Creating Layer relu1
I0328 14:42:47.958166 162117 net.cpp:434] relu1 <- pool1
I0328 14:42:47.958187 162117 net.cpp:395] relu1 -> pool1 (in-place)
I0328 14:42:47.958204 162117 net.cpp:150] Setting up relu1
I0328 14:42:47.958211 162117 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0328 14:42:47.958215 162117 net.cpp:165] Memory required for data: 20890800
I0328 14:42:47.958221 162117 layer_factory.hpp:77] Creating layer norm1
I0328 14:42:47.958238 162117 net.cpp:100] Creating Layer norm1
I0328 14:42:47.958245 162117 net.cpp:434] norm1 <- pool1
I0328 14:42:47.958259 162117 net.cpp:408] norm1 -> norm1
I0328 14:42:47.958348 162117 net.cpp:150] Setting up norm1
I0328 14:42:47.958360 162117 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0328 14:42:47.958365 162117 net.cpp:165] Memory required for data: 24167600
I0328 14:42:47.958372 162117 layer_factory.hpp:77] Creating layer conv2
I0328 14:42:47.958401 162117 net.cpp:100] Creating Layer conv2
I0328 14:42:47.958410 162117 net.cpp:434] conv2 <- norm1
I0328 14:42:47.958436 162117 net.cpp:408] conv2 -> conv2
I0328 14:42:47.964740 162117 net.cpp:150] Setting up conv2
I0328 14:42:47.964759 162117 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0328 14:42:47.964763 162117 net.cpp:165] Memory required for data: 27444400
I0328 14:42:47.964792 162117 layer_factory.hpp:77] Creating layer relu2
I0328 14:42:47.964814 162117 net.cpp:100] Creating Layer relu2
I0328 14:42:47.964823 162117 net.cpp:434] relu2 <- conv2
I0328 14:42:47.964841 162117 net.cpp:395] relu2 -> conv2 (in-place)
I0328 14:42:47.964859 162117 net.cpp:150] Setting up relu2
I0328 14:42:47.964866 162117 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0328 14:42:47.964870 162117 net.cpp:165] Memory required for data: 30721200
I0328 14:42:47.964876 162117 layer_factory.hpp:77] Creating layer pool2
I0328 14:42:47.964897 162117 net.cpp:100] Creating Layer pool2
I0328 14:42:47.964903 162117 net.cpp:434] pool2 <- conv2
I0328 14:42:47.964923 162117 net.cpp:408] pool2 -> pool2
I0328 14:42:47.964956 162117 net.cpp:150] Setting up pool2
I0328 14:42:47.964969 162117 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0328 14:42:47.964973 162117 net.cpp:165] Memory required for data: 31540400
I0328 14:42:47.964980 162117 layer_factory.hpp:77] Creating layer norm2
I0328 14:42:47.965001 162117 net.cpp:100] Creating Layer norm2
I0328 14:42:47.965009 162117 net.cpp:434] norm2 <- pool2
I0328 14:42:47.965028 162117 net.cpp:408] norm2 -> norm2
I0328 14:42:47.965116 162117 net.cpp:150] Setting up norm2
I0328 14:42:47.965131 162117 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0328 14:42:47.965134 162117 net.cpp:165] Memory required for data: 32359600
I0328 14:42:47.965142 162117 layer_factory.hpp:77] Creating layer conv3
I0328 14:42:47.965168 162117 net.cpp:100] Creating Layer conv3
I0328 14:42:47.965178 162117 net.cpp:434] conv3 <- norm2
I0328 14:42:47.965209 162117 net.cpp:408] conv3 -> conv3
I0328 14:42:47.977712 162117 net.cpp:150] Setting up conv3
I0328 14:42:47.977731 162117 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0328 14:42:47.977735 162117 net.cpp:165] Memory required for data: 33998000
I0328 14:42:47.977764 162117 layer_factory.hpp:77] Creating layer relu3
I0328 14:42:47.977782 162117 net.cpp:100] Creating Layer relu3
I0328 14:42:47.977790 162117 net.cpp:434] relu3 <- conv3
I0328 14:42:47.977810 162117 net.cpp:395] relu3 -> conv3 (in-place)
I0328 14:42:47.977828 162117 net.cpp:150] Setting up relu3
I0328 14:42:47.977836 162117 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0328 14:42:47.977840 162117 net.cpp:165] Memory required for data: 35636400
I0328 14:42:47.977846 162117 layer_factory.hpp:77] Creating layer pool3
I0328 14:42:47.977861 162117 net.cpp:100] Creating Layer pool3
I0328 14:42:47.977869 162117 net.cpp:434] pool3 <- conv3
I0328 14:42:47.977883 162117 net.cpp:408] pool3 -> pool3
I0328 14:42:47.977910 162117 net.cpp:150] Setting up pool3
I0328 14:42:47.977921 162117 net.cpp:157] Top shape: 100 64 4 4 (102400)
I0328 14:42:47.977926 162117 net.cpp:165] Memory required for data: 36046000
I0328 14:42:47.977931 162117 layer_factory.hpp:77] Creating layer ip1
I0328 14:42:47.977955 162117 net.cpp:100] Creating Layer ip1
I0328 14:42:47.977963 162117 net.cpp:434] ip1 <- pool3
I0328 14:42:47.977988 162117 net.cpp:408] ip1 -> ip1
I0328 14:42:47.980511 162117 net.cpp:150] Setting up ip1
I0328 14:42:47.980530 162117 net.cpp:157] Top shape: 100 10 (1000)
I0328 14:42:47.980533 162117 net.cpp:165] Memory required for data: 36050000
I0328 14:42:47.980550 162117 layer_factory.hpp:77] Creating layer ip1_ip1_0_split
I0328 14:42:47.980569 162117 net.cpp:100] Creating Layer ip1_ip1_0_split
I0328 14:42:47.980577 162117 net.cpp:434] ip1_ip1_0_split <- ip1
I0328 14:42:47.980595 162117 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0328 14:42:47.980613 162117 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0328 14:42:47.980638 162117 net.cpp:150] Setting up ip1_ip1_0_split
I0328 14:42:47.980651 162117 net.cpp:157] Top shape: 100 10 (1000)
I0328 14:42:47.980657 162117 net.cpp:157] Top shape: 100 10 (1000)
I0328 14:42:47.980661 162117 net.cpp:165] Memory required for data: 36058000
I0328 14:42:47.980667 162117 layer_factory.hpp:77] Creating layer accuracy
I0328 14:42:47.980692 162117 net.cpp:100] Creating Layer accuracy
I0328 14:42:47.980700 162117 net.cpp:434] accuracy <- ip1_ip1_0_split_0
I0328 14:42:47.980715 162117 net.cpp:434] accuracy <- label_cifar_1_split_0
I0328 14:42:47.980731 162117 net.cpp:408] accuracy -> accuracy
I0328 14:42:47.980756 162117 net.cpp:150] Setting up accuracy
I0328 14:42:47.980764 162117 net.cpp:157] Top shape: (1)
I0328 14:42:47.980768 162117 net.cpp:165] Memory required for data: 36058004
I0328 14:42:47.980775 162117 layer_factory.hpp:77] Creating layer loss
I0328 14:42:47.980795 162117 net.cpp:100] Creating Layer loss
I0328 14:42:47.980803 162117 net.cpp:434] loss <- ip1_ip1_0_split_1
I0328 14:42:47.980816 162117 net.cpp:434] loss <- label_cifar_1_split_1
I0328 14:42:47.980831 162117 net.cpp:408] loss -> loss
I0328 14:42:47.980855 162117 layer_factory.hpp:77] Creating layer loss
I0328 14:42:47.980911 162117 net.cpp:150] Setting up loss
I0328 14:42:47.980921 162117 net.cpp:157] Top shape: (1)
I0328 14:42:47.980926 162117 net.cpp:160]     with loss weight 1
I0328 14:42:47.980934 162117 net.cpp:165] Memory required for data: 36058008
I0328 14:42:47.980942 162117 net.cpp:226] loss needs backward computation.
I0328 14:42:47.980950 162117 net.cpp:228] accuracy does not need backward computation.
I0328 14:42:47.980957 162117 net.cpp:226] ip1_ip1_0_split needs backward computation.
I0328 14:42:47.980962 162117 net.cpp:226] ip1 needs backward computation.
I0328 14:42:47.980968 162117 net.cpp:226] pool3 needs backward computation.
I0328 14:42:47.980973 162117 net.cpp:226] relu3 needs backward computation.
I0328 14:42:47.980978 162117 net.cpp:226] conv3 needs backward computation.
I0328 14:42:47.980983 162117 net.cpp:226] norm2 needs backward computation.
I0328 14:42:47.980995 162117 net.cpp:226] pool2 needs backward computation.
I0328 14:42:47.981010 162117 net.cpp:226] relu2 needs backward computation.
I0328 14:42:47.981015 162117 net.cpp:226] conv2 needs backward computation.
I0328 14:42:47.981020 162117 net.cpp:226] norm1 needs backward computation.
I0328 14:42:47.981026 162117 net.cpp:226] relu1 needs backward computation.
I0328 14:42:47.981031 162117 net.cpp:226] pool1 needs backward computation.
I0328 14:42:47.981036 162117 net.cpp:226] conv1 needs backward computation.
I0328 14:42:47.981042 162117 net.cpp:228] label_cifar_1_split does not need backward computation.
I0328 14:42:47.981050 162117 net.cpp:228] cifar does not need backward computation.
I0328 14:42:47.981053 162117 net.cpp:270] This network produces output accuracy
I0328 14:42:47.981062 162117 net.cpp:270] This network produces output loss
I0328 14:42:47.981109 162117 net.cpp:283] Network initialization done.
I0328 14:42:47.981187 162117 solver.cpp:60] Solver scaffolding done.
I0328 14:42:47.981276 162117 caffe.cpp:251] Starting Optimization
I0328 14:42:47.981283 162117 solver.cpp:279] Solving CIFAR10_full
I0328 14:42:47.981287 162117 solver.cpp:280] Learning Rate Policy: fixed
I0328 14:42:47.981593 162117 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111}
OMP: Info #156: KMP_AFFINITY: 112 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 4 packages x 14 cores/pkg x 2 threads/core (56 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 56 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 60 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 64 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 68 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 72 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 0 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 76 maps to package 0 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 0 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 80 maps to package 0 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 0 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 84 maps to package 0 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 0 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 88 maps to package 0 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 0 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 92 maps to package 0 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 0 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 96 maps to package 0 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 0 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 100 maps to package 0 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 48 maps to package 0 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 104 maps to package 0 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 52 maps to package 0 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 108 maps to package 0 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 57 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 61 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 65 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 69 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 73 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 77 maps to package 1 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 1 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 81 maps to package 1 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 1 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 85 maps to package 1 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 1 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 89 maps to package 1 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 1 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 93 maps to package 1 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 1 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 97 maps to package 1 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 1 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 101 maps to package 1 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 49 maps to package 1 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 105 maps to package 1 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 53 maps to package 1 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 109 maps to package 1 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 2 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 58 maps to package 2 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 2 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 62 maps to package 2 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 2 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 66 maps to package 2 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 2 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 70 maps to package 2 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 2 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 74 maps to package 2 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 2 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 78 maps to package 2 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 2 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 82 maps to package 2 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 2 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 86 maps to package 2 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 2 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 90 maps to package 2 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 2 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 94 maps to package 2 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 2 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 98 maps to package 2 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 2 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 102 maps to package 2 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 50 maps to package 2 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 106 maps to package 2 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 54 maps to package 2 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 110 maps to package 2 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 3 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 59 maps to package 3 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 3 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 63 maps to package 3 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 3 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 67 maps to package 3 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 3 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 71 maps to package 3 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 3 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 75 maps to package 3 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 3 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 79 maps to package 3 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 3 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 83 maps to package 3 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 3 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 87 maps to package 3 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 3 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 91 maps to package 3 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 3 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 95 maps to package 3 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 3 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 99 maps to package 3 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 3 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 103 maps to package 3 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 51 maps to package 3 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 107 maps to package 3 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 55 maps to package 3 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 111 maps to package 3 core 14 thread 1 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 0 bound to OS proc set {0,56}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 2 bound to OS proc set {2,58}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 1 bound to OS proc set {1,57}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 4 bound to OS proc set {4,60}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 3 bound to OS proc set {3,59}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 5 bound to OS proc set {5,61}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 6 bound to OS proc set {6,62}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 7 bound to OS proc set {7,63}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 8 bound to OS proc set {8,64}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 9 bound to OS proc set {9,65}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 10 bound to OS proc set {10,66}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 11 bound to OS proc set {11,67}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 12 bound to OS proc set {12,68}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 13 bound to OS proc set {13,69}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 14 bound to OS proc set {14,70}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 15 bound to OS proc set {15,71}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 16 bound to OS proc set {16,72}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 17 bound to OS proc set {17,73}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 18 bound to OS proc set {18,74}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 19 bound to OS proc set {19,75}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 20 bound to OS proc set {20,76}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 21 bound to OS proc set {21,77}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 22 bound to OS proc set {22,78}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 23 bound to OS proc set {23,79}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 24 bound to OS proc set {24,80}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 25 bound to OS proc set {25,81}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 26 bound to OS proc set {26,82}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 27 bound to OS proc set {27,83}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 28 bound to OS proc set {28,84}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 29 bound to OS proc set {29,85}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 30 bound to OS proc set {30,86}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 31 bound to OS proc set {31,87}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 32 bound to OS proc set {32,88}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 33 bound to OS proc set {33,89}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 34 bound to OS proc set {34,90}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 35 bound to OS proc set {35,91}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 36 bound to OS proc set {36,92}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 37 bound to OS proc set {37,93}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 38 bound to OS proc set {38,94}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 39 bound to OS proc set {39,95}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 40 bound to OS proc set {40,96}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 41 bound to OS proc set {41,97}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 42 bound to OS proc set {42,98}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 43 bound to OS proc set {43,99}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 44 bound to OS proc set {44,100}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 45 bound to OS proc set {45,101}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 46 bound to OS proc set {46,102}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 47 bound to OS proc set {47,103}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 48 bound to OS proc set {48,104}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 49 bound to OS proc set {49,105}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 50 bound to OS proc set {50,106}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 51 bound to OS proc set {51,107}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 52 bound to OS proc set {52,108}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 53 bound to OS proc set {53,109}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 54 bound to OS proc set {54,110}
OMP: Info #242: KMP_AFFINITY: pid 162117 thread 55 bound to OS proc set {55,111}
I0328 14:42:49.685187 162117 solver.cpp:228] Iteration 0, loss = 2.3026
I0328 14:42:49.685286 162117 solver.cpp:244]     Train net output #0: loss = 2.3026 (* 1 = 2.3026 loss)
I0328 14:42:49.685303 162117 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0328 15:03:53.504345 162117 solver.cpp:317] Iteration 800, loss = 1.722
I0328 15:03:53.504490 162117 solver.cpp:322] Optimization Done.
I0328 15:03:53.504497 162117 caffe.cpp:254] Optimization Done.

 Performance counter stats for './build/tools/caffe.bin train --solver=examples/cifar10/cifar10_full_solver_200_0T_bsize112.prototxt':

        81,950,142      node-loads                                                  
     5,370,443,607      node-load-misses                                            

    1265.670790198 seconds time elapsed


real	21m5.679s
user	1148m7.060s
sys	32m34.411s
