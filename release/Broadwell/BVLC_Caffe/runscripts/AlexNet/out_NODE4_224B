I0115 20:02:33.554481 52394 caffe.cpp:210] Use CPU.
I0115 20:02:33.556181 52394 solver.cpp:48] Initializing solver from parameters: 
test_iter: 0
test_interval: 1000
base_lr: 0.01
display: 20
max_iter: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 100000
snapshot: 10000
snapshot_prefix: "models/bvlc_alexnet/caffe_alexnet_train"
solver_mode: CPU
net: "models/bvlc_alexnet/train_val.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
I0115 20:02:33.556427 52394 solver.cpp:91] Creating training net from net file: models/bvlc_alexnet/train_val.prototxt
I0115 20:02:33.557538 52394 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I0115 20:02:33.557569 52394 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0115 20:02:33.558078 52394 net.cpp:58] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "/home/user/LIBRARIES/caffeLibs/caffe/data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "/home/user/LIBRARIES/caffeLibs/caffe/examples/imagenet/ilsvrc12_train_lmdb"
    batch_size: 224
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0115 20:02:33.558228 52394 layer_factory.hpp:77] Creating layer data
I0115 20:02:33.559209 52394 net.cpp:100] Creating Layer data
I0115 20:02:33.559263 52394 net.cpp:408] data -> data
I0115 20:02:33.559319 52394 net.cpp:408] data -> label
I0115 20:02:33.559350 52394 data_transformer.cpp:25] Loading mean file from: /home/user/LIBRARIES/caffeLibs/caffe/data/ilsvrc12/imagenet_mean.binaryproto
I0115 20:02:33.559500 52395 db_lmdb.cpp:35] Opened lmdb /home/user/LIBRARIES/caffeLibs/caffe/examples/imagenet/ilsvrc12_train_lmdb
I0115 20:02:33.563767 52394 data_layer.cpp:41] output data size: 224,3,227,227
I0115 20:02:33.711448 52394 net.cpp:150] Setting up data
I0115 20:02:33.711475 52394 net.cpp:157] Top shape: 224 3 227 227 (34627488)
I0115 20:02:33.711483 52394 net.cpp:157] Top shape: 224 (224)
I0115 20:02:33.711488 52394 net.cpp:165] Memory required for data: 138510848
I0115 20:02:33.711498 52394 layer_factory.hpp:77] Creating layer conv1
I0115 20:02:33.711558 52394 net.cpp:100] Creating Layer conv1
I0115 20:02:33.711573 52394 net.cpp:434] conv1 <- data
I0115 20:02:33.711588 52394 net.cpp:408] conv1 -> conv1
I0115 20:02:33.712283 52394 net.cpp:150] Setting up conv1
I0115 20:02:33.712296 52394 net.cpp:157] Top shape: 224 96 55 55 (65049600)
I0115 20:02:33.712299 52394 net.cpp:165] Memory required for data: 398709248
I0115 20:02:33.712316 52394 layer_factory.hpp:77] Creating layer relu1
I0115 20:02:33.712326 52394 net.cpp:100] Creating Layer relu1
I0115 20:02:33.712330 52394 net.cpp:434] relu1 <- conv1
I0115 20:02:33.712337 52394 net.cpp:395] relu1 -> conv1 (in-place)
I0115 20:02:33.712347 52394 net.cpp:150] Setting up relu1
I0115 20:02:33.712352 52394 net.cpp:157] Top shape: 224 96 55 55 (65049600)
I0115 20:02:33.712355 52394 net.cpp:165] Memory required for data: 658907648
I0115 20:02:33.712359 52394 layer_factory.hpp:77] Creating layer norm1
I0115 20:02:33.712365 52394 net.cpp:100] Creating Layer norm1
I0115 20:02:33.712369 52394 net.cpp:434] norm1 <- conv1
I0115 20:02:33.712374 52394 net.cpp:408] norm1 -> norm1
I0115 20:02:33.712388 52394 net.cpp:150] Setting up norm1
I0115 20:02:33.712393 52394 net.cpp:157] Top shape: 224 96 55 55 (65049600)
I0115 20:02:33.712396 52394 net.cpp:165] Memory required for data: 919106048
I0115 20:02:33.712409 52394 layer_factory.hpp:77] Creating layer pool1
I0115 20:02:33.712424 52394 net.cpp:100] Creating Layer pool1
I0115 20:02:33.712430 52394 net.cpp:434] pool1 <- norm1
I0115 20:02:33.712435 52394 net.cpp:408] pool1 -> pool1
I0115 20:02:33.712457 52394 net.cpp:150] Setting up pool1
I0115 20:02:33.712463 52394 net.cpp:157] Top shape: 224 96 27 27 (15676416)
I0115 20:02:33.712467 52394 net.cpp:165] Memory required for data: 981811712
I0115 20:02:33.712471 52394 layer_factory.hpp:77] Creating layer conv2
I0115 20:02:33.712479 52394 net.cpp:100] Creating Layer conv2
I0115 20:02:33.712483 52394 net.cpp:434] conv2 <- pool1
I0115 20:02:33.712491 52394 net.cpp:408] conv2 -> conv2
I0115 20:02:33.718514 52394 net.cpp:150] Setting up conv2
I0115 20:02:33.718526 52394 net.cpp:157] Top shape: 224 256 27 27 (41803776)
I0115 20:02:33.718530 52394 net.cpp:165] Memory required for data: 1149026816
I0115 20:02:33.718541 52394 layer_factory.hpp:77] Creating layer relu2
I0115 20:02:33.718547 52394 net.cpp:100] Creating Layer relu2
I0115 20:02:33.718551 52394 net.cpp:434] relu2 <- conv2
I0115 20:02:33.718557 52394 net.cpp:395] relu2 -> conv2 (in-place)
I0115 20:02:33.718564 52394 net.cpp:150] Setting up relu2
I0115 20:02:33.718569 52394 net.cpp:157] Top shape: 224 256 27 27 (41803776)
I0115 20:02:33.718574 52394 net.cpp:165] Memory required for data: 1316241920
I0115 20:02:33.718577 52394 layer_factory.hpp:77] Creating layer norm2
I0115 20:02:33.718583 52394 net.cpp:100] Creating Layer norm2
I0115 20:02:33.718587 52394 net.cpp:434] norm2 <- conv2
I0115 20:02:33.718592 52394 net.cpp:408] norm2 -> norm2
I0115 20:02:33.718601 52394 net.cpp:150] Setting up norm2
I0115 20:02:33.718606 52394 net.cpp:157] Top shape: 224 256 27 27 (41803776)
I0115 20:02:33.718611 52394 net.cpp:165] Memory required for data: 1483457024
I0115 20:02:33.718614 52394 layer_factory.hpp:77] Creating layer pool2
I0115 20:02:33.718621 52394 net.cpp:100] Creating Layer pool2
I0115 20:02:33.718624 52394 net.cpp:434] pool2 <- norm2
I0115 20:02:33.718629 52394 net.cpp:408] pool2 -> pool2
I0115 20:02:33.718637 52394 net.cpp:150] Setting up pool2
I0115 20:02:33.718643 52394 net.cpp:157] Top shape: 224 256 13 13 (9691136)
I0115 20:02:33.718647 52394 net.cpp:165] Memory required for data: 1522221568
I0115 20:02:33.718650 52394 layer_factory.hpp:77] Creating layer conv3
I0115 20:02:33.718658 52394 net.cpp:100] Creating Layer conv3
I0115 20:02:33.718662 52394 net.cpp:434] conv3 <- pool2
I0115 20:02:33.718668 52394 net.cpp:408] conv3 -> conv3
I0115 20:02:33.736307 52394 net.cpp:150] Setting up conv3
I0115 20:02:33.736320 52394 net.cpp:157] Top shape: 224 384 13 13 (14536704)
I0115 20:02:33.736325 52394 net.cpp:165] Memory required for data: 1580368384
I0115 20:02:33.736335 52394 layer_factory.hpp:77] Creating layer relu3
I0115 20:02:33.736341 52394 net.cpp:100] Creating Layer relu3
I0115 20:02:33.736346 52394 net.cpp:434] relu3 <- conv3
I0115 20:02:33.736351 52394 net.cpp:395] relu3 -> conv3 (in-place)
I0115 20:02:33.736357 52394 net.cpp:150] Setting up relu3
I0115 20:02:33.736363 52394 net.cpp:157] Top shape: 224 384 13 13 (14536704)
I0115 20:02:33.736366 52394 net.cpp:165] Memory required for data: 1638515200
I0115 20:02:33.736371 52394 layer_factory.hpp:77] Creating layer conv4
I0115 20:02:33.736378 52394 net.cpp:100] Creating Layer conv4
I0115 20:02:33.736382 52394 net.cpp:434] conv4 <- conv3
I0115 20:02:33.736388 52394 net.cpp:408] conv4 -> conv4
I0115 20:02:33.750263 52394 net.cpp:150] Setting up conv4
I0115 20:02:33.750275 52394 net.cpp:157] Top shape: 224 384 13 13 (14536704)
I0115 20:02:33.750279 52394 net.cpp:165] Memory required for data: 1696662016
I0115 20:02:33.750288 52394 layer_factory.hpp:77] Creating layer relu4
I0115 20:02:33.750293 52394 net.cpp:100] Creating Layer relu4
I0115 20:02:33.750298 52394 net.cpp:434] relu4 <- conv4
I0115 20:02:33.750303 52394 net.cpp:395] relu4 -> conv4 (in-place)
I0115 20:02:33.750309 52394 net.cpp:150] Setting up relu4
I0115 20:02:33.750314 52394 net.cpp:157] Top shape: 224 384 13 13 (14536704)
I0115 20:02:33.750319 52394 net.cpp:165] Memory required for data: 1754808832
I0115 20:02:33.750336 52394 layer_factory.hpp:77] Creating layer conv5
I0115 20:02:33.750345 52394 net.cpp:100] Creating Layer conv5
I0115 20:02:33.750349 52394 net.cpp:434] conv5 <- conv4
I0115 20:02:33.750355 52394 net.cpp:408] conv5 -> conv5
I0115 20:02:33.759685 52394 net.cpp:150] Setting up conv5
I0115 20:02:33.759696 52394 net.cpp:157] Top shape: 224 256 13 13 (9691136)
I0115 20:02:33.759701 52394 net.cpp:165] Memory required for data: 1793573376
I0115 20:02:33.759711 52394 layer_factory.hpp:77] Creating layer relu5
I0115 20:02:33.759717 52394 net.cpp:100] Creating Layer relu5
I0115 20:02:33.759721 52394 net.cpp:434] relu5 <- conv5
I0115 20:02:33.759727 52394 net.cpp:395] relu5 -> conv5 (in-place)
I0115 20:02:33.759732 52394 net.cpp:150] Setting up relu5
I0115 20:02:33.759738 52394 net.cpp:157] Top shape: 224 256 13 13 (9691136)
I0115 20:02:33.759742 52394 net.cpp:165] Memory required for data: 1832337920
I0115 20:02:33.759745 52394 layer_factory.hpp:77] Creating layer pool5
I0115 20:02:33.759750 52394 net.cpp:100] Creating Layer pool5
I0115 20:02:33.759754 52394 net.cpp:434] pool5 <- conv5
I0115 20:02:33.759759 52394 net.cpp:408] pool5 -> pool5
I0115 20:02:33.759768 52394 net.cpp:150] Setting up pool5
I0115 20:02:33.759773 52394 net.cpp:157] Top shape: 224 256 6 6 (2064384)
I0115 20:02:33.759776 52394 net.cpp:165] Memory required for data: 1840595456
I0115 20:02:33.759780 52394 layer_factory.hpp:77] Creating layer fc6
I0115 20:02:33.759793 52394 net.cpp:100] Creating Layer fc6
I0115 20:02:33.759796 52394 net.cpp:434] fc6 <- pool5
I0115 20:02:33.759802 52394 net.cpp:408] fc6 -> fc6
I0115 20:02:34.483173 52394 net.cpp:150] Setting up fc6
I0115 20:02:34.483227 52394 net.cpp:157] Top shape: 224 4096 (917504)
I0115 20:02:34.483233 52394 net.cpp:165] Memory required for data: 1844265472
I0115 20:02:34.483247 52394 layer_factory.hpp:77] Creating layer relu6
I0115 20:02:34.483264 52394 net.cpp:100] Creating Layer relu6
I0115 20:02:34.483271 52394 net.cpp:434] relu6 <- fc6
I0115 20:02:34.483283 52394 net.cpp:395] relu6 -> fc6 (in-place)
I0115 20:02:34.483295 52394 net.cpp:150] Setting up relu6
I0115 20:02:34.483300 52394 net.cpp:157] Top shape: 224 4096 (917504)
I0115 20:02:34.483304 52394 net.cpp:165] Memory required for data: 1847935488
I0115 20:02:34.483309 52394 layer_factory.hpp:77] Creating layer drop6
I0115 20:02:34.483324 52394 net.cpp:100] Creating Layer drop6
I0115 20:02:34.483327 52394 net.cpp:434] drop6 <- fc6
I0115 20:02:34.483335 52394 net.cpp:395] drop6 -> fc6 (in-place)
I0115 20:02:34.483352 52394 net.cpp:150] Setting up drop6
I0115 20:02:34.483357 52394 net.cpp:157] Top shape: 224 4096 (917504)
I0115 20:02:34.483361 52394 net.cpp:165] Memory required for data: 1851605504
I0115 20:02:34.483366 52394 layer_factory.hpp:77] Creating layer fc7
I0115 20:02:34.483377 52394 net.cpp:100] Creating Layer fc7
I0115 20:02:34.483381 52394 net.cpp:434] fc7 <- fc6
I0115 20:02:34.483392 52394 net.cpp:408] fc7 -> fc7
I0115 20:02:34.804496 52394 net.cpp:150] Setting up fc7
I0115 20:02:34.804543 52394 net.cpp:157] Top shape: 224 4096 (917504)
I0115 20:02:34.804548 52394 net.cpp:165] Memory required for data: 1855275520
I0115 20:02:34.804563 52394 layer_factory.hpp:77] Creating layer relu7
I0115 20:02:34.804576 52394 net.cpp:100] Creating Layer relu7
I0115 20:02:34.804582 52394 net.cpp:434] relu7 <- fc7
I0115 20:02:34.804594 52394 net.cpp:395] relu7 -> fc7 (in-place)
I0115 20:02:34.804605 52394 net.cpp:150] Setting up relu7
I0115 20:02:34.804610 52394 net.cpp:157] Top shape: 224 4096 (917504)
I0115 20:02:34.804615 52394 net.cpp:165] Memory required for data: 1858945536
I0115 20:02:34.804618 52394 layer_factory.hpp:77] Creating layer drop7
I0115 20:02:34.804627 52394 net.cpp:100] Creating Layer drop7
I0115 20:02:34.804631 52394 net.cpp:434] drop7 <- fc7
I0115 20:02:34.804641 52394 net.cpp:395] drop7 -> fc7 (in-place)
I0115 20:02:34.804651 52394 net.cpp:150] Setting up drop7
I0115 20:02:34.804656 52394 net.cpp:157] Top shape: 224 4096 (917504)
I0115 20:02:34.804659 52394 net.cpp:165] Memory required for data: 1862615552
I0115 20:02:34.804697 52394 layer_factory.hpp:77] Creating layer fc8
I0115 20:02:34.804710 52394 net.cpp:100] Creating Layer fc8
I0115 20:02:34.804714 52394 net.cpp:434] fc8 <- fc7
I0115 20:02:34.804721 52394 net.cpp:408] fc8 -> fc8
I0115 20:02:34.883591 52394 net.cpp:150] Setting up fc8
I0115 20:02:34.883602 52394 net.cpp:157] Top shape: 224 1000 (224000)
I0115 20:02:34.883605 52394 net.cpp:165] Memory required for data: 1863511552
I0115 20:02:34.883613 52394 layer_factory.hpp:77] Creating layer loss
I0115 20:02:34.883626 52394 net.cpp:100] Creating Layer loss
I0115 20:02:34.883631 52394 net.cpp:434] loss <- fc8
I0115 20:02:34.883636 52394 net.cpp:434] loss <- label
I0115 20:02:34.883646 52394 net.cpp:408] loss -> loss
I0115 20:02:34.883678 52394 layer_factory.hpp:77] Creating layer loss
I0115 20:02:34.884305 52394 net.cpp:150] Setting up loss
I0115 20:02:34.884315 52394 net.cpp:157] Top shape: (1)
I0115 20:02:34.884320 52394 net.cpp:160]     with loss weight 1
I0115 20:02:34.884361 52394 net.cpp:165] Memory required for data: 1863511556
I0115 20:02:34.884366 52394 net.cpp:226] loss needs backward computation.
I0115 20:02:34.884371 52394 net.cpp:226] fc8 needs backward computation.
I0115 20:02:34.884374 52394 net.cpp:226] drop7 needs backward computation.
I0115 20:02:34.884378 52394 net.cpp:226] relu7 needs backward computation.
I0115 20:02:34.884382 52394 net.cpp:226] fc7 needs backward computation.
I0115 20:02:34.884385 52394 net.cpp:226] drop6 needs backward computation.
I0115 20:02:34.884390 52394 net.cpp:226] relu6 needs backward computation.
I0115 20:02:34.884393 52394 net.cpp:226] fc6 needs backward computation.
I0115 20:02:34.884398 52394 net.cpp:226] pool5 needs backward computation.
I0115 20:02:34.884403 52394 net.cpp:226] relu5 needs backward computation.
I0115 20:02:34.884407 52394 net.cpp:226] conv5 needs backward computation.
I0115 20:02:34.884414 52394 net.cpp:226] relu4 needs backward computation.
I0115 20:02:34.884419 52394 net.cpp:226] conv4 needs backward computation.
I0115 20:02:34.884423 52394 net.cpp:226] relu3 needs backward computation.
I0115 20:02:34.884428 52394 net.cpp:226] conv3 needs backward computation.
I0115 20:02:34.884433 52394 net.cpp:226] pool2 needs backward computation.
I0115 20:02:34.884436 52394 net.cpp:226] norm2 needs backward computation.
I0115 20:02:34.884441 52394 net.cpp:226] relu2 needs backward computation.
I0115 20:02:34.884445 52394 net.cpp:226] conv2 needs backward computation.
I0115 20:02:34.884449 52394 net.cpp:226] pool1 needs backward computation.
I0115 20:02:34.884454 52394 net.cpp:226] norm1 needs backward computation.
I0115 20:02:34.884457 52394 net.cpp:226] relu1 needs backward computation.
I0115 20:02:34.884461 52394 net.cpp:226] conv1 needs backward computation.
I0115 20:02:34.884466 52394 net.cpp:228] data does not need backward computation.
I0115 20:02:34.884470 52394 net.cpp:270] This network produces output loss
I0115 20:02:34.884491 52394 net.cpp:283] Network initialization done.
I0115 20:02:34.885740 52394 solver.cpp:181] Creating test net (#0) specified by net file: models/bvlc_alexnet/train_val.prototxt
I0115 20:02:34.885802 52394 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0115 20:02:34.886373 52394 net.cpp:58] Initializing net from parameters: 
name: "AlexNet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "/home/user/LIBRARIES/caffeLibs/caffe/data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "/home/user/LIBRARIES/caffeLibs/caffe/examples/imagenet/ilsvrc12_val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0115 20:02:34.886557 52394 layer_factory.hpp:77] Creating layer data
I0115 20:02:34.886687 52394 net.cpp:100] Creating Layer data
I0115 20:02:34.886698 52394 net.cpp:408] data -> data
I0115 20:02:34.886709 52394 net.cpp:408] data -> label
I0115 20:02:34.886720 52394 data_transformer.cpp:25] Loading mean file from: /home/user/LIBRARIES/caffeLibs/caffe/data/ilsvrc12/imagenet_mean.binaryproto
I0115 20:02:34.886958 52397 db_lmdb.cpp:35] Opened lmdb /home/user/LIBRARIES/caffeLibs/caffe/examples/imagenet/ilsvrc12_val_lmdb
I0115 20:02:34.890738 52394 data_layer.cpp:41] output data size: 50,3,227,227
I0115 20:02:34.927628 52394 net.cpp:150] Setting up data
I0115 20:02:34.927644 52394 net.cpp:157] Top shape: 50 3 227 227 (7729350)
I0115 20:02:34.927650 52394 net.cpp:157] Top shape: 50 (50)
I0115 20:02:34.927654 52394 net.cpp:165] Memory required for data: 30917600
I0115 20:02:34.927659 52394 layer_factory.hpp:77] Creating layer label_data_1_split
I0115 20:02:34.927671 52394 net.cpp:100] Creating Layer label_data_1_split
I0115 20:02:34.927676 52394 net.cpp:434] label_data_1_split <- label
I0115 20:02:34.927685 52394 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0115 20:02:34.927693 52394 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0115 20:02:34.927727 52394 net.cpp:150] Setting up label_data_1_split
I0115 20:02:34.927734 52394 net.cpp:157] Top shape: 50 (50)
I0115 20:02:34.927739 52394 net.cpp:157] Top shape: 50 (50)
I0115 20:02:34.927745 52394 net.cpp:165] Memory required for data: 30918000
I0115 20:02:34.927749 52394 layer_factory.hpp:77] Creating layer conv1
I0115 20:02:34.927760 52394 net.cpp:100] Creating Layer conv1
I0115 20:02:34.927768 52394 net.cpp:434] conv1 <- data
I0115 20:02:34.927775 52394 net.cpp:408] conv1 -> conv1
I0115 20:02:34.928418 52394 net.cpp:150] Setting up conv1
I0115 20:02:34.928429 52394 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0115 20:02:34.928433 52394 net.cpp:165] Memory required for data: 88998000
I0115 20:02:34.928447 52394 layer_factory.hpp:77] Creating layer relu1
I0115 20:02:34.928452 52394 net.cpp:100] Creating Layer relu1
I0115 20:02:34.928457 52394 net.cpp:434] relu1 <- conv1
I0115 20:02:34.928463 52394 net.cpp:395] relu1 -> conv1 (in-place)
I0115 20:02:34.928470 52394 net.cpp:150] Setting up relu1
I0115 20:02:34.928475 52394 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0115 20:02:34.928479 52394 net.cpp:165] Memory required for data: 147078000
I0115 20:02:34.928483 52394 layer_factory.hpp:77] Creating layer norm1
I0115 20:02:34.928490 52394 net.cpp:100] Creating Layer norm1
I0115 20:02:34.928494 52394 net.cpp:434] norm1 <- conv1
I0115 20:02:34.928499 52394 net.cpp:408] norm1 -> norm1
I0115 20:02:34.928508 52394 net.cpp:150] Setting up norm1
I0115 20:02:34.928514 52394 net.cpp:157] Top shape: 50 96 55 55 (14520000)
I0115 20:02:34.928517 52394 net.cpp:165] Memory required for data: 205158000
I0115 20:02:34.928520 52394 layer_factory.hpp:77] Creating layer pool1
I0115 20:02:34.928526 52394 net.cpp:100] Creating Layer pool1
I0115 20:02:34.928530 52394 net.cpp:434] pool1 <- norm1
I0115 20:02:34.928535 52394 net.cpp:408] pool1 -> pool1
I0115 20:02:34.928545 52394 net.cpp:150] Setting up pool1
I0115 20:02:34.928551 52394 net.cpp:157] Top shape: 50 96 27 27 (3499200)
I0115 20:02:34.928555 52394 net.cpp:165] Memory required for data: 219154800
I0115 20:02:34.928558 52394 layer_factory.hpp:77] Creating layer conv2
I0115 20:02:34.928566 52394 net.cpp:100] Creating Layer conv2
I0115 20:02:34.928570 52394 net.cpp:434] conv2 <- pool1
I0115 20:02:34.928575 52394 net.cpp:408] conv2 -> conv2
I0115 20:02:34.934248 52394 net.cpp:150] Setting up conv2
I0115 20:02:34.934260 52394 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0115 20:02:34.934264 52394 net.cpp:165] Memory required for data: 256479600
I0115 20:02:34.934280 52394 layer_factory.hpp:77] Creating layer relu2
I0115 20:02:34.934298 52394 net.cpp:100] Creating Layer relu2
I0115 20:02:34.934303 52394 net.cpp:434] relu2 <- conv2
I0115 20:02:34.934311 52394 net.cpp:395] relu2 -> conv2 (in-place)
I0115 20:02:34.934319 52394 net.cpp:150] Setting up relu2
I0115 20:02:34.934324 52394 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0115 20:02:34.934329 52394 net.cpp:165] Memory required for data: 293804400
I0115 20:02:34.934332 52394 layer_factory.hpp:77] Creating layer norm2
I0115 20:02:34.934340 52394 net.cpp:100] Creating Layer norm2
I0115 20:02:34.934342 52394 net.cpp:434] norm2 <- conv2
I0115 20:02:34.934351 52394 net.cpp:408] norm2 -> norm2
I0115 20:02:34.934360 52394 net.cpp:150] Setting up norm2
I0115 20:02:34.934366 52394 net.cpp:157] Top shape: 50 256 27 27 (9331200)
I0115 20:02:34.934370 52394 net.cpp:165] Memory required for data: 331129200
I0115 20:02:34.934373 52394 layer_factory.hpp:77] Creating layer pool2
I0115 20:02:34.934381 52394 net.cpp:100] Creating Layer pool2
I0115 20:02:34.934386 52394 net.cpp:434] pool2 <- norm2
I0115 20:02:34.934391 52394 net.cpp:408] pool2 -> pool2
I0115 20:02:34.934398 52394 net.cpp:150] Setting up pool2
I0115 20:02:34.934403 52394 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0115 20:02:34.934407 52394 net.cpp:165] Memory required for data: 339782000
I0115 20:02:34.934412 52394 layer_factory.hpp:77] Creating layer conv3
I0115 20:02:34.934435 52394 net.cpp:100] Creating Layer conv3
I0115 20:02:34.934440 52394 net.cpp:434] conv3 <- pool2
I0115 20:02:34.934450 52394 net.cpp:408] conv3 -> conv3
I0115 20:02:34.952580 52394 net.cpp:150] Setting up conv3
I0115 20:02:34.952594 52394 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0115 20:02:34.952597 52394 net.cpp:165] Memory required for data: 352761200
I0115 20:02:34.952608 52394 layer_factory.hpp:77] Creating layer relu3
I0115 20:02:34.952617 52394 net.cpp:100] Creating Layer relu3
I0115 20:02:34.952622 52394 net.cpp:434] relu3 <- conv3
I0115 20:02:34.952628 52394 net.cpp:395] relu3 -> conv3 (in-place)
I0115 20:02:34.952636 52394 net.cpp:150] Setting up relu3
I0115 20:02:34.952641 52394 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0115 20:02:34.952644 52394 net.cpp:165] Memory required for data: 365740400
I0115 20:02:34.952648 52394 layer_factory.hpp:77] Creating layer conv4
I0115 20:02:34.952659 52394 net.cpp:100] Creating Layer conv4
I0115 20:02:34.952663 52394 net.cpp:434] conv4 <- conv3
I0115 20:02:34.952672 52394 net.cpp:408] conv4 -> conv4
I0115 20:02:34.966003 52394 net.cpp:150] Setting up conv4
I0115 20:02:34.966015 52394 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0115 20:02:34.966019 52394 net.cpp:165] Memory required for data: 378719600
I0115 20:02:34.966027 52394 layer_factory.hpp:77] Creating layer relu4
I0115 20:02:34.966032 52394 net.cpp:100] Creating Layer relu4
I0115 20:02:34.966037 52394 net.cpp:434] relu4 <- conv4
I0115 20:02:34.966042 52394 net.cpp:395] relu4 -> conv4 (in-place)
I0115 20:02:34.966049 52394 net.cpp:150] Setting up relu4
I0115 20:02:34.966054 52394 net.cpp:157] Top shape: 50 384 13 13 (3244800)
I0115 20:02:34.966063 52394 net.cpp:165] Memory required for data: 391698800
I0115 20:02:34.966068 52394 layer_factory.hpp:77] Creating layer conv5
I0115 20:02:34.966080 52394 net.cpp:100] Creating Layer conv5
I0115 20:02:34.966084 52394 net.cpp:434] conv5 <- conv4
I0115 20:02:34.966091 52394 net.cpp:408] conv5 -> conv5
I0115 20:02:34.975567 52394 net.cpp:150] Setting up conv5
I0115 20:02:34.975579 52394 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0115 20:02:34.975582 52394 net.cpp:165] Memory required for data: 400351600
I0115 20:02:34.975594 52394 layer_factory.hpp:77] Creating layer relu5
I0115 20:02:34.975600 52394 net.cpp:100] Creating Layer relu5
I0115 20:02:34.975603 52394 net.cpp:434] relu5 <- conv5
I0115 20:02:34.975608 52394 net.cpp:395] relu5 -> conv5 (in-place)
I0115 20:02:34.975615 52394 net.cpp:150] Setting up relu5
I0115 20:02:34.975620 52394 net.cpp:157] Top shape: 50 256 13 13 (2163200)
I0115 20:02:34.975630 52394 net.cpp:165] Memory required for data: 409004400
I0115 20:02:34.975641 52394 layer_factory.hpp:77] Creating layer pool5
I0115 20:02:34.975657 52394 net.cpp:100] Creating Layer pool5
I0115 20:02:34.975661 52394 net.cpp:434] pool5 <- conv5
I0115 20:02:34.975667 52394 net.cpp:408] pool5 -> pool5
I0115 20:02:34.975677 52394 net.cpp:150] Setting up pool5
I0115 20:02:34.975682 52394 net.cpp:157] Top shape: 50 256 6 6 (460800)
I0115 20:02:34.975685 52394 net.cpp:165] Memory required for data: 410847600
I0115 20:02:34.975689 52394 layer_factory.hpp:77] Creating layer fc6
I0115 20:02:34.975697 52394 net.cpp:100] Creating Layer fc6
I0115 20:02:34.975700 52394 net.cpp:434] fc6 <- pool5
I0115 20:02:34.975709 52394 net.cpp:408] fc6 -> fc6
I0115 20:02:35.696424 52394 net.cpp:150] Setting up fc6
I0115 20:02:35.696482 52394 net.cpp:157] Top shape: 50 4096 (204800)
I0115 20:02:35.696487 52394 net.cpp:165] Memory required for data: 411666800
I0115 20:02:35.696501 52394 layer_factory.hpp:77] Creating layer relu6
I0115 20:02:35.696518 52394 net.cpp:100] Creating Layer relu6
I0115 20:02:35.696524 52394 net.cpp:434] relu6 <- fc6
I0115 20:02:35.696535 52394 net.cpp:395] relu6 -> fc6 (in-place)
I0115 20:02:35.696548 52394 net.cpp:150] Setting up relu6
I0115 20:02:35.696553 52394 net.cpp:157] Top shape: 50 4096 (204800)
I0115 20:02:35.696557 52394 net.cpp:165] Memory required for data: 412486000
I0115 20:02:35.696562 52394 layer_factory.hpp:77] Creating layer drop6
I0115 20:02:35.696573 52394 net.cpp:100] Creating Layer drop6
I0115 20:02:35.696576 52394 net.cpp:434] drop6 <- fc6
I0115 20:02:35.696586 52394 net.cpp:395] drop6 -> fc6 (in-place)
I0115 20:02:35.696597 52394 net.cpp:150] Setting up drop6
I0115 20:02:35.696602 52394 net.cpp:157] Top shape: 50 4096 (204800)
I0115 20:02:35.696606 52394 net.cpp:165] Memory required for data: 413305200
I0115 20:02:35.696610 52394 layer_factory.hpp:77] Creating layer fc7
I0115 20:02:35.696624 52394 net.cpp:100] Creating Layer fc7
I0115 20:02:35.696627 52394 net.cpp:434] fc7 <- fc6
I0115 20:02:35.696635 52394 net.cpp:408] fc7 -> fc7
I0115 20:02:36.017768 52394 net.cpp:150] Setting up fc7
I0115 20:02:36.017814 52394 net.cpp:157] Top shape: 50 4096 (204800)
I0115 20:02:36.017819 52394 net.cpp:165] Memory required for data: 414124400
I0115 20:02:36.017832 52394 layer_factory.hpp:77] Creating layer relu7
I0115 20:02:36.017845 52394 net.cpp:100] Creating Layer relu7
I0115 20:02:36.017851 52394 net.cpp:434] relu7 <- fc7
I0115 20:02:36.017864 52394 net.cpp:395] relu7 -> fc7 (in-place)
I0115 20:02:36.017875 52394 net.cpp:150] Setting up relu7
I0115 20:02:36.017881 52394 net.cpp:157] Top shape: 50 4096 (204800)
I0115 20:02:36.017885 52394 net.cpp:165] Memory required for data: 414943600
I0115 20:02:36.017890 52394 layer_factory.hpp:77] Creating layer drop7
I0115 20:02:36.017899 52394 net.cpp:100] Creating Layer drop7
I0115 20:02:36.017904 52394 net.cpp:434] drop7 <- fc7
I0115 20:02:36.017910 52394 net.cpp:395] drop7 -> fc7 (in-place)
I0115 20:02:36.017918 52394 net.cpp:150] Setting up drop7
I0115 20:02:36.017923 52394 net.cpp:157] Top shape: 50 4096 (204800)
I0115 20:02:36.017927 52394 net.cpp:165] Memory required for data: 415762800
I0115 20:02:36.017931 52394 layer_factory.hpp:77] Creating layer fc8
I0115 20:02:36.017946 52394 net.cpp:100] Creating Layer fc8
I0115 20:02:36.017949 52394 net.cpp:434] fc8 <- fc7
I0115 20:02:36.017957 52394 net.cpp:408] fc8 -> fc8
I0115 20:02:36.096860 52394 net.cpp:150] Setting up fc8
I0115 20:02:36.096875 52394 net.cpp:157] Top shape: 50 1000 (50000)
I0115 20:02:36.096879 52394 net.cpp:165] Memory required for data: 415962800
I0115 20:02:36.096887 52394 layer_factory.hpp:77] Creating layer fc8_fc8_0_split
I0115 20:02:36.096899 52394 net.cpp:100] Creating Layer fc8_fc8_0_split
I0115 20:02:36.096904 52394 net.cpp:434] fc8_fc8_0_split <- fc8
I0115 20:02:36.096911 52394 net.cpp:408] fc8_fc8_0_split -> fc8_fc8_0_split_0
I0115 20:02:36.096922 52394 net.cpp:408] fc8_fc8_0_split -> fc8_fc8_0_split_1
I0115 20:02:36.096931 52394 net.cpp:150] Setting up fc8_fc8_0_split
I0115 20:02:36.096957 52394 net.cpp:157] Top shape: 50 1000 (50000)
I0115 20:02:36.096979 52394 net.cpp:157] Top shape: 50 1000 (50000)
I0115 20:02:36.096983 52394 net.cpp:165] Memory required for data: 416362800
I0115 20:02:36.096987 52394 layer_factory.hpp:77] Creating layer accuracy
I0115 20:02:36.097003 52394 net.cpp:100] Creating Layer accuracy
I0115 20:02:36.097008 52394 net.cpp:434] accuracy <- fc8_fc8_0_split_0
I0115 20:02:36.097013 52394 net.cpp:434] accuracy <- label_data_1_split_0
I0115 20:02:36.097023 52394 net.cpp:408] accuracy -> accuracy
I0115 20:02:36.097036 52394 net.cpp:150] Setting up accuracy
I0115 20:02:36.097041 52394 net.cpp:157] Top shape: (1)
I0115 20:02:36.097045 52394 net.cpp:165] Memory required for data: 416362804
I0115 20:02:36.097049 52394 layer_factory.hpp:77] Creating layer loss
I0115 20:02:36.097061 52394 net.cpp:100] Creating Layer loss
I0115 20:02:36.097067 52394 net.cpp:434] loss <- fc8_fc8_0_split_1
I0115 20:02:36.097072 52394 net.cpp:434] loss <- label_data_1_split_1
I0115 20:02:36.097081 52394 net.cpp:408] loss -> loss
I0115 20:02:36.097092 52394 layer_factory.hpp:77] Creating layer loss
I0115 20:02:36.097239 52394 net.cpp:150] Setting up loss
I0115 20:02:36.097246 52394 net.cpp:157] Top shape: (1)
I0115 20:02:36.097250 52394 net.cpp:160]     with loss weight 1
I0115 20:02:36.097270 52394 net.cpp:165] Memory required for data: 416362808
I0115 20:02:36.097275 52394 net.cpp:226] loss needs backward computation.
I0115 20:02:36.097280 52394 net.cpp:228] accuracy does not need backward computation.
I0115 20:02:36.097285 52394 net.cpp:226] fc8_fc8_0_split needs backward computation.
I0115 20:02:36.097288 52394 net.cpp:226] fc8 needs backward computation.
I0115 20:02:36.097292 52394 net.cpp:226] drop7 needs backward computation.
I0115 20:02:36.097296 52394 net.cpp:226] relu7 needs backward computation.
I0115 20:02:36.097299 52394 net.cpp:226] fc7 needs backward computation.
I0115 20:02:36.097303 52394 net.cpp:226] drop6 needs backward computation.
I0115 20:02:36.097307 52394 net.cpp:226] relu6 needs backward computation.
I0115 20:02:36.097311 52394 net.cpp:226] fc6 needs backward computation.
I0115 20:02:36.097316 52394 net.cpp:226] pool5 needs backward computation.
I0115 20:02:36.097321 52394 net.cpp:226] relu5 needs backward computation.
I0115 20:02:36.097326 52394 net.cpp:226] conv5 needs backward computation.
I0115 20:02:36.097329 52394 net.cpp:226] relu4 needs backward computation.
I0115 20:02:36.097333 52394 net.cpp:226] conv4 needs backward computation.
I0115 20:02:36.097337 52394 net.cpp:226] relu3 needs backward computation.
I0115 20:02:36.097342 52394 net.cpp:226] conv3 needs backward computation.
I0115 20:02:36.097350 52394 net.cpp:226] pool2 needs backward computation.
I0115 20:02:36.097354 52394 net.cpp:226] norm2 needs backward computation.
I0115 20:02:36.097358 52394 net.cpp:226] relu2 needs backward computation.
I0115 20:02:36.097363 52394 net.cpp:226] conv2 needs backward computation.
I0115 20:02:36.097368 52394 net.cpp:226] pool1 needs backward computation.
I0115 20:02:36.097371 52394 net.cpp:226] norm1 needs backward computation.
I0115 20:02:36.097376 52394 net.cpp:226] relu1 needs backward computation.
I0115 20:02:36.097380 52394 net.cpp:226] conv1 needs backward computation.
I0115 20:02:36.097385 52394 net.cpp:228] label_data_1_split does not need backward computation.
I0115 20:02:36.097390 52394 net.cpp:228] data does not need backward computation.
I0115 20:02:36.097394 52394 net.cpp:270] This network produces output accuracy
I0115 20:02:36.097398 52394 net.cpp:270] This network produces output loss
I0115 20:02:36.097420 52394 net.cpp:283] Network initialization done.
I0115 20:02:36.097551 52394 solver.cpp:60] Solver scaffolding done.
I0115 20:02:36.097605 52394 caffe.cpp:251] Starting Optimization
I0115 20:02:36.097614 52394 solver.cpp:279] Solving AlexNet
I0115 20:02:36.097617 52394 solver.cpp:280] Learning Rate Policy: step
I0115 20:02:36.208778 52394 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111}
OMP: Info #156: KMP_AFFINITY: 112 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 4 packages x 14 cores/pkg x 2 threads/core (56 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 56 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 60 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 64 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 68 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 72 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 0 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 76 maps to package 0 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 0 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 80 maps to package 0 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 0 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 84 maps to package 0 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 0 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 88 maps to package 0 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 0 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 92 maps to package 0 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 0 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 96 maps to package 0 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 0 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 100 maps to package 0 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 48 maps to package 0 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 104 maps to package 0 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 52 maps to package 0 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 108 maps to package 0 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 57 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 61 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 65 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 69 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 73 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 77 maps to package 1 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 1 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 81 maps to package 1 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 1 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 85 maps to package 1 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 1 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 89 maps to package 1 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 1 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 93 maps to package 1 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 1 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 97 maps to package 1 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 1 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 101 maps to package 1 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 49 maps to package 1 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 105 maps to package 1 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 53 maps to package 1 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 109 maps to package 1 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 2 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 58 maps to package 2 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 2 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 62 maps to package 2 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 2 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 66 maps to package 2 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 2 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 70 maps to package 2 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 2 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 74 maps to package 2 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 2 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 78 maps to package 2 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 2 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 82 maps to package 2 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 2 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 86 maps to package 2 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 2 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 90 maps to package 2 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 2 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 94 maps to package 2 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 2 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 98 maps to package 2 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 2 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 102 maps to package 2 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 50 maps to package 2 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 106 maps to package 2 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 54 maps to package 2 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 110 maps to package 2 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 3 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 59 maps to package 3 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 3 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 63 maps to package 3 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 3 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 67 maps to package 3 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 3 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 71 maps to package 3 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 3 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 75 maps to package 3 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 3 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 79 maps to package 3 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 3 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 83 maps to package 3 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 3 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 87 maps to package 3 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 3 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 91 maps to package 3 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 3 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 95 maps to package 3 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 3 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 99 maps to package 3 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 3 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 103 maps to package 3 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 51 maps to package 3 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 107 maps to package 3 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 55 maps to package 3 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 111 maps to package 3 core 14 thread 1 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 0 bound to OS proc set {0,56}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 2 bound to OS proc set {2,58}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 1 bound to OS proc set {1,57}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 3 bound to OS proc set {3,59}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 4 bound to OS proc set {4,60}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 5 bound to OS proc set {5,61}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 6 bound to OS proc set {6,62}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 7 bound to OS proc set {7,63}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 8 bound to OS proc set {8,64}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 10 bound to OS proc set {10,66}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 9 bound to OS proc set {9,65}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 11 bound to OS proc set {11,67}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 12 bound to OS proc set {12,68}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 13 bound to OS proc set {13,69}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 14 bound to OS proc set {14,70}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 15 bound to OS proc set {15,71}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 16 bound to OS proc set {16,72}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 17 bound to OS proc set {17,73}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 18 bound to OS proc set {18,74}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 20 bound to OS proc set {20,76}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 19 bound to OS proc set {19,75}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 21 bound to OS proc set {21,77}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 22 bound to OS proc set {22,78}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 24 bound to OS proc set {24,80}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 23 bound to OS proc set {23,79}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 25 bound to OS proc set {25,81}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 27 bound to OS proc set {27,83}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 26 bound to OS proc set {26,82}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 28 bound to OS proc set {28,84}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 29 bound to OS proc set {29,85}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 30 bound to OS proc set {30,86}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 31 bound to OS proc set {31,87}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 32 bound to OS proc set {32,88}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 33 bound to OS proc set {33,89}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 34 bound to OS proc set {34,90}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 35 bound to OS proc set {35,91}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 36 bound to OS proc set {36,92}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 38 bound to OS proc set {38,94}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 37 bound to OS proc set {37,93}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 39 bound to OS proc set {39,95}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 41 bound to OS proc set {41,97}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 40 bound to OS proc set {40,96}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 42 bound to OS proc set {42,98}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 43 bound to OS proc set {43,99}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 44 bound to OS proc set {44,100}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 45 bound to OS proc set {45,101}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 46 bound to OS proc set {46,102}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 47 bound to OS proc set {47,103}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 48 bound to OS proc set {48,104}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 50 bound to OS proc set {50,106}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 49 bound to OS proc set {49,105}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 51 bound to OS proc set {51,107}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 52 bound to OS proc set {52,108}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 53 bound to OS proc set {53,109}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 54 bound to OS proc set {54,110}
OMP: Info #242: KMP_AFFINITY: pid 52394 thread 55 bound to OS proc set {55,111}
I0115 20:02:46.895191 52394 solver.cpp:228] Iteration 0, loss = 6.89965
I0115 20:02:46.895285 52394 solver.cpp:244]     Train net output #0: loss = 6.89965 (* 1 = 6.89965 loss)
I0115 20:02:46.895357 52394 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0115 20:05:52.702886 52394 solver.cpp:317] Iteration 20, loss = 5.00063
I0115 20:05:52.703038 52394 solver.cpp:322] Optimization Done.
I0115 20:05:52.703044 52394 caffe.cpp:254] Optimization Done.

real	3m19.312s
user	183m17.419s
sys	0m4.852s
