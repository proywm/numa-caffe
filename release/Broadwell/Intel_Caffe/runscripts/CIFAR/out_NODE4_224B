I0331 18:00:30.403599 132358 caffe.cpp:259] Use CPU.
I0331 18:00:30.405174 132358 solver.cpp:90] Initializing solver from parameters: 
test_iter: 0
test_interval: 2000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize224.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0331 18:00:30.405490 132358 solver.cpp:135] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize224.prototxt
I0331 18:00:30.409669 132358 cpu_info.cpp:452] Processor speed [MHz]: 2000
I0331 18:00:30.409684 132358 cpu_info.cpp:455] Total number of sockets: 4
I0331 18:00:30.409688 132358 cpu_info.cpp:458] Total number of CPU cores: 56
I0331 18:00:30.409692 132358 cpu_info.cpp:461] Total number of processors: 112
I0331 18:00:30.409694 132358 cpu_info.cpp:464] GPU is used: no
I0331 18:00:30.409698 132358 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0331 18:00:30.409701 132358 cpu_info.cpp:470] OpenMP thread bind allowed: no
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111}
OMP: Info #156: KMP_AFFINITY: 112 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 4 packages x 14 cores/pkg x 2 threads/core (56 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 56 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 60 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 64 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 68 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 72 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 0 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 76 maps to package 0 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 0 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 80 maps to package 0 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 0 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 84 maps to package 0 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 0 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 88 maps to package 0 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 0 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 92 maps to package 0 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 0 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 96 maps to package 0 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 0 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 100 maps to package 0 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 48 maps to package 0 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 104 maps to package 0 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 52 maps to package 0 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 108 maps to package 0 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 57 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 61 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 65 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 69 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 73 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 77 maps to package 1 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 1 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 81 maps to package 1 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 1 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 85 maps to package 1 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 1 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 89 maps to package 1 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 1 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 93 maps to package 1 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 1 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 97 maps to package 1 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 1 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 101 maps to package 1 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 49 maps to package 1 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 105 maps to package 1 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 53 maps to package 1 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 109 maps to package 1 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 2 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 58 maps to package 2 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 2 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 62 maps to package 2 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 2 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 66 maps to package 2 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 2 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 70 maps to package 2 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 2 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 74 maps to package 2 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 2 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 78 maps to package 2 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 2 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 82 maps to package 2 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 2 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 86 maps to package 2 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 2 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 90 maps to package 2 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 2 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 94 maps to package 2 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 2 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 98 maps to package 2 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 2 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 102 maps to package 2 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 50 maps to package 2 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 106 maps to package 2 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 54 maps to package 2 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 110 maps to package 2 core 14 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 3 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 59 maps to package 3 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 3 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 63 maps to package 3 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 3 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 67 maps to package 3 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 3 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 71 maps to package 3 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 3 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 75 maps to package 3 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 3 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 79 maps to package 3 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 3 core 6 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 83 maps to package 3 core 6 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 3 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 87 maps to package 3 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 3 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 91 maps to package 3 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 3 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 95 maps to package 3 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 3 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 99 maps to package 3 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 3 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 103 maps to package 3 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 51 maps to package 3 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 107 maps to package 3 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 55 maps to package 3 core 14 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 111 maps to package 3 core 14 thread 1 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 0 bound to OS proc set {0,56}
I0331 18:00:30.417173 132358 cpu_info.cpp:473] Number of OpenMP threads: 56
I0331 18:00:30.417276 132358 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0331 18:00:30.417295 132358 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0331 18:00:30.417829 132358 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 224
    backend: LMDB
    shuffle: true
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0331 18:00:30.417882 132358 layer_factory.hpp:114] Creating layer cifar
I0331 18:00:30.418776 132358 net.cpp:160] Creating Layer cifar
I0331 18:00:30.418800 132358 net.cpp:570] cifar -> data
I0331 18:00:30.418828 132358 net.cpp:570] cifar -> label
I0331 18:00:30.418848 132358 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0331 18:00:30.418980 132359 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0331 18:00:30.422475 132359 data_reader.cpp:177] Shuffling data
I0331 18:00:30.423540 132358 data_layer.cpp:80] output data size: 224,3,32,32
I0331 18:00:30.432880 132358 net.cpp:210] Setting up cifar
I0331 18:00:30.432903 132358 net.cpp:217] Top shape: 224 3 32 32 (688128)
I0331 18:00:30.432909 132358 net.cpp:217] Top shape: 224 (224)
I0331 18:00:30.432912 132358 net.cpp:225] Memory required for data: 2753408
I0331 18:00:30.432919 132358 layer_factory.hpp:114] Creating layer conv1
I0331 18:00:30.432938 132358 net.cpp:160] Creating Layer conv1
I0331 18:00:30.432945 132358 net.cpp:596] conv1 <- data
I0331 18:00:30.432953 132358 net.cpp:570] conv1 -> conv1
I0331 18:00:30.439357 132358 net.cpp:210] Setting up conv1
I0331 18:00:30.439373 132358 net.cpp:217] Top shape: 224 32 32 32 (7340032)
I0331 18:00:30.439376 132358 net.cpp:225] Memory required for data: 32113536
I0331 18:00:30.439395 132358 layer_factory.hpp:114] Creating layer pool1
I0331 18:00:30.439445 132358 net.cpp:160] Creating Layer pool1
I0331 18:00:30.439451 132358 net.cpp:596] pool1 <- conv1
I0331 18:00:30.439460 132358 net.cpp:570] pool1 -> pool1
I0331 18:00:30.439474 132358 net.cpp:210] Setting up pool1
I0331 18:00:30.439481 132358 net.cpp:217] Top shape: 224 32 16 16 (1835008)
I0331 18:00:30.439484 132358 net.cpp:225] Memory required for data: 39453568
I0331 18:00:30.439488 132358 layer_factory.hpp:114] Creating layer relu1
I0331 18:00:30.439497 132358 net.cpp:160] Creating Layer relu1
I0331 18:00:30.439502 132358 net.cpp:596] relu1 <- pool1
I0331 18:00:30.439507 132358 net.cpp:557] relu1 -> pool1 (in-place)
I0331 18:00:30.439514 132358 net.cpp:210] Setting up relu1
I0331 18:00:30.439519 132358 net.cpp:217] Top shape: 224 32 16 16 (1835008)
I0331 18:00:30.439523 132358 net.cpp:225] Memory required for data: 46793600
I0331 18:00:30.439527 132358 layer_factory.hpp:114] Creating layer norm1
I0331 18:00:30.439538 132358 net.cpp:160] Creating Layer norm1
I0331 18:00:30.439541 132358 net.cpp:596] norm1 <- pool1
I0331 18:00:30.439548 132358 net.cpp:570] norm1 -> norm1
I0331 18:00:30.439605 132358 net.cpp:210] Setting up norm1
I0331 18:00:30.439613 132358 net.cpp:217] Top shape: 224 32 16 16 (1835008)
I0331 18:00:30.439617 132358 net.cpp:225] Memory required for data: 54133632
I0331 18:00:30.439621 132358 layer_factory.hpp:114] Creating layer conv2
I0331 18:00:30.439640 132358 net.cpp:160] Creating Layer conv2
I0331 18:00:30.439644 132358 net.cpp:596] conv2 <- norm1
I0331 18:00:30.439651 132358 net.cpp:570] conv2 -> conv2
I0331 18:00:30.457538 132358 net.cpp:210] Setting up conv2
I0331 18:00:30.457584 132358 net.cpp:217] Top shape: 224 32 16 16 (1835008)
I0331 18:00:30.457589 132358 net.cpp:225] Memory required for data: 61473664
I0331 18:00:30.457609 132358 layer_factory.hpp:114] Creating layer relu2
I0331 18:00:30.457630 132358 net.cpp:160] Creating Layer relu2
I0331 18:00:30.457638 132358 net.cpp:596] relu2 <- conv2
I0331 18:00:30.457648 132358 net.cpp:557] relu2 -> conv2 (in-place)
I0331 18:00:30.457660 132358 net.cpp:210] Setting up relu2
I0331 18:00:30.457666 132358 net.cpp:217] Top shape: 224 32 16 16 (1835008)
I0331 18:00:30.457670 132358 net.cpp:225] Memory required for data: 68813696
I0331 18:00:30.457674 132358 layer_factory.hpp:114] Creating layer pool2
I0331 18:00:30.457705 132358 net.cpp:160] Creating Layer pool2
I0331 18:00:30.457710 132358 net.cpp:596] pool2 <- conv2
I0331 18:00:30.457716 132358 net.cpp:570] pool2 -> pool2
I0331 18:00:30.457754 132358 net.cpp:210] Setting up pool2
I0331 18:00:30.457762 132358 net.cpp:217] Top shape: 224 32 8 8 (458752)
I0331 18:00:30.457765 132358 net.cpp:225] Memory required for data: 70648704
I0331 18:00:30.457769 132358 layer_factory.hpp:114] Creating layer norm2
I0331 18:00:30.457782 132358 net.cpp:160] Creating Layer norm2
I0331 18:00:30.457785 132358 net.cpp:596] norm2 <- pool2
I0331 18:00:30.457792 132358 net.cpp:570] norm2 -> norm2
I0331 18:00:30.457833 132358 net.cpp:210] Setting up norm2
I0331 18:00:30.457839 132358 net.cpp:217] Top shape: 224 32 8 8 (458752)
I0331 18:00:30.457844 132358 net.cpp:225] Memory required for data: 72483712
I0331 18:00:30.457847 132358 layer_factory.hpp:114] Creating layer conv3
I0331 18:00:30.457862 132358 net.cpp:160] Creating Layer conv3
I0331 18:00:30.457866 132358 net.cpp:596] conv3 <- norm2
I0331 18:00:30.457873 132358 net.cpp:570] conv3 -> conv3
I0331 18:00:30.467301 132358 net.cpp:210] Setting up conv3
I0331 18:00:30.467322 132358 net.cpp:217] Top shape: 224 64 8 8 (917504)
I0331 18:00:30.467326 132358 net.cpp:225] Memory required for data: 76153728
I0331 18:00:30.467342 132358 layer_factory.hpp:114] Creating layer relu3
I0331 18:00:30.467353 132358 net.cpp:160] Creating Layer relu3
I0331 18:00:30.467358 132358 net.cpp:596] relu3 <- conv3
I0331 18:00:30.467365 132358 net.cpp:557] relu3 -> conv3 (in-place)
I0331 18:00:30.467373 132358 net.cpp:210] Setting up relu3
I0331 18:00:30.467380 132358 net.cpp:217] Top shape: 224 64 8 8 (917504)
I0331 18:00:30.467383 132358 net.cpp:225] Memory required for data: 79823744
I0331 18:00:30.467387 132358 layer_factory.hpp:114] Creating layer pool3
I0331 18:00:30.467408 132358 net.cpp:160] Creating Layer pool3
I0331 18:00:30.467413 132358 net.cpp:596] pool3 <- conv3
I0331 18:00:30.467419 132358 net.cpp:570] pool3 -> pool3
I0331 18:00:30.467428 132358 net.cpp:210] Setting up pool3
I0331 18:00:30.467434 132358 net.cpp:217] Top shape: 224 64 4 4 (229376)
I0331 18:00:30.467438 132358 net.cpp:225] Memory required for data: 80741248
I0331 18:00:30.467442 132358 layer_factory.hpp:114] Creating layer ip1
I0331 18:00:30.467456 132358 net.cpp:160] Creating Layer ip1
I0331 18:00:30.467461 132358 net.cpp:596] ip1 <- pool3
I0331 18:00:30.467469 132358 net.cpp:570] ip1 -> ip1
I0331 18:00:30.467689 132358 net.cpp:210] Setting up ip1
I0331 18:00:30.467700 132358 net.cpp:217] Top shape: 224 10 (2240)
I0331 18:00:30.467705 132358 net.cpp:225] Memory required for data: 80750208
I0331 18:00:30.467712 132358 layer_factory.hpp:114] Creating layer loss
I0331 18:00:30.467723 132358 net.cpp:160] Creating Layer loss
I0331 18:00:30.467728 132358 net.cpp:596] loss <- ip1
I0331 18:00:30.467733 132358 net.cpp:596] loss <- label
I0331 18:00:30.467751 132358 net.cpp:570] loss -> loss
I0331 18:00:30.467769 132358 layer_factory.hpp:114] Creating layer loss
I0331 18:00:30.467797 132358 net.cpp:210] Setting up loss
I0331 18:00:30.467803 132358 net.cpp:217] Top shape: (1)
I0331 18:00:30.467808 132358 net.cpp:220]     with loss weight 1
I0331 18:00:30.467856 132358 net.cpp:225] Memory required for data: 80750212
I0331 18:00:30.467860 132358 net.cpp:287] loss needs backward computation.
I0331 18:00:30.467865 132358 net.cpp:287] ip1 needs backward computation.
I0331 18:00:30.467869 132358 net.cpp:287] pool3 needs backward computation.
I0331 18:00:30.467874 132358 net.cpp:287] relu3 needs backward computation.
I0331 18:00:30.467876 132358 net.cpp:287] conv3 needs backward computation.
I0331 18:00:30.467880 132358 net.cpp:287] norm2 needs backward computation.
I0331 18:00:30.467885 132358 net.cpp:287] pool2 needs backward computation.
I0331 18:00:30.467888 132358 net.cpp:287] relu2 needs backward computation.
I0331 18:00:30.467891 132358 net.cpp:287] conv2 needs backward computation.
I0331 18:00:30.467896 132358 net.cpp:287] norm1 needs backward computation.
I0331 18:00:30.467900 132358 net.cpp:287] relu1 needs backward computation.
I0331 18:00:30.467905 132358 net.cpp:287] pool1 needs backward computation.
I0331 18:00:30.467910 132358 net.cpp:287] conv1 needs backward computation.
I0331 18:00:30.467927 132358 net.cpp:289] cifar does not need backward computation.
I0331 18:00:30.467931 132358 net.cpp:331] This network produces output loss
I0331 18:00:30.467947 132358 net.cpp:345] Network initialization done.
I0331 18:00:30.468782 132358 solver.cpp:225] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize224.prototxt
I0331 18:00:30.468798 132358 cpu_info.cpp:452] Processor speed [MHz]: 2000
I0331 18:00:30.468802 132358 cpu_info.cpp:455] Total number of sockets: 4
I0331 18:00:30.468806 132358 cpu_info.cpp:458] Total number of CPU cores: 56
I0331 18:00:30.468809 132358 cpu_info.cpp:461] Total number of processors: 112
I0331 18:00:30.468813 132358 cpu_info.cpp:464] GPU is used: no
I0331 18:00:30.468816 132358 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0331 18:00:30.468819 132358 cpu_info.cpp:470] OpenMP thread bind allowed: no
I0331 18:00:30.468823 132358 cpu_info.cpp:473] Number of OpenMP threads: 56
I0331 18:00:30.468860 132358 net.cpp:484] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0331 18:00:30.469374 132358 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "label_cifar_1_split"
  type: "Split"
  bottom: "label"
  top: "label_cifar_1_split_0"
  top: "label_cifar_1_split_1"
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip1_ip1_0_split"
  type: "Split"
  bottom: "ip1"
  top: "ip1_ip1_0_split_0"
  top: "ip1_ip1_0_split_1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1_ip1_0_split_0"
  bottom: "label_cifar_1_split_0"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1_ip1_0_split_1"
  bottom: "label_cifar_1_split_1"
  top: "loss"
}
I0331 18:00:30.469410 132358 layer_factory.hpp:114] Creating layer cifar
I0331 18:00:30.469594 132358 net.cpp:160] Creating Layer cifar
I0331 18:00:30.469609 132358 net.cpp:570] cifar -> data
I0331 18:00:30.469631 132358 net.cpp:570] cifar -> label
I0331 18:00:30.469651 132358 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0331 18:00:30.469779 132360 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0331 18:00:30.469846 132358 data_layer.cpp:80] output data size: 100,3,32,32
I0331 18:00:30.474202 132358 net.cpp:210] Setting up cifar
I0331 18:00:30.474217 132358 net.cpp:217] Top shape: 100 3 32 32 (307200)
I0331 18:00:30.474223 132358 net.cpp:217] Top shape: 100 (100)
I0331 18:00:30.474226 132358 net.cpp:225] Memory required for data: 1229200
I0331 18:00:30.474231 132358 layer_factory.hpp:114] Creating layer label_cifar_1_split
I0331 18:00:30.474241 132358 net.cpp:160] Creating Layer label_cifar_1_split
I0331 18:00:30.474246 132358 net.cpp:596] label_cifar_1_split <- label
I0331 18:00:30.474252 132358 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_0
I0331 18:00:30.474261 132358 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_1
I0331 18:00:30.474269 132358 net.cpp:210] Setting up label_cifar_1_split
I0331 18:00:30.474274 132358 net.cpp:217] Top shape: 100 (100)
I0331 18:00:30.474279 132358 net.cpp:217] Top shape: 100 (100)
I0331 18:00:30.474282 132358 net.cpp:225] Memory required for data: 1230000
I0331 18:00:30.474287 132358 layer_factory.hpp:114] Creating layer conv1
I0331 18:00:30.474298 132358 net.cpp:160] Creating Layer conv1
I0331 18:00:30.474301 132358 net.cpp:596] conv1 <- data
I0331 18:00:30.474308 132358 net.cpp:570] conv1 -> conv1
I0331 18:00:30.480805 132358 net.cpp:210] Setting up conv1
I0331 18:00:30.480819 132358 net.cpp:217] Top shape: 100 32 32 32 (3276800)
I0331 18:00:30.480823 132358 net.cpp:225] Memory required for data: 14337200
I0331 18:00:30.480834 132358 layer_factory.hpp:114] Creating layer pool1
I0331 18:00:30.480859 132358 net.cpp:160] Creating Layer pool1
I0331 18:00:30.480865 132358 net.cpp:596] pool1 <- conv1
I0331 18:00:30.480870 132358 net.cpp:570] pool1 -> pool1
I0331 18:00:30.480880 132358 net.cpp:210] Setting up pool1
I0331 18:00:30.480888 132358 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 18:00:30.480892 132358 net.cpp:225] Memory required for data: 17614000
I0331 18:00:30.480903 132358 layer_factory.hpp:114] Creating layer relu1
I0331 18:00:30.480911 132358 net.cpp:160] Creating Layer relu1
I0331 18:00:30.480916 132358 net.cpp:596] relu1 <- pool1
I0331 18:00:30.480921 132358 net.cpp:557] relu1 -> pool1 (in-place)
I0331 18:00:30.480926 132358 net.cpp:210] Setting up relu1
I0331 18:00:30.480931 132358 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 18:00:30.480934 132358 net.cpp:225] Memory required for data: 20890800
I0331 18:00:30.480937 132358 layer_factory.hpp:114] Creating layer norm1
I0331 18:00:30.480947 132358 net.cpp:160] Creating Layer norm1
I0331 18:00:30.480952 132358 net.cpp:596] norm1 <- pool1
I0331 18:00:30.480957 132358 net.cpp:570] norm1 -> norm1
I0331 18:00:30.480998 132358 net.cpp:210] Setting up norm1
I0331 18:00:30.481004 132358 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 18:00:30.481009 132358 net.cpp:225] Memory required for data: 24167600
I0331 18:00:30.481011 132358 layer_factory.hpp:114] Creating layer conv2
I0331 18:00:30.481022 132358 net.cpp:160] Creating Layer conv2
I0331 18:00:30.481026 132358 net.cpp:596] conv2 <- norm1
I0331 18:00:30.481034 132358 net.cpp:570] conv2 -> conv2
I0331 18:00:30.499267 132358 net.cpp:210] Setting up conv2
I0331 18:00:30.499311 132358 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 18:00:30.499315 132358 net.cpp:225] Memory required for data: 27444400
I0331 18:00:30.499361 132358 layer_factory.hpp:114] Creating layer relu2
I0331 18:00:30.499375 132358 net.cpp:160] Creating Layer relu2
I0331 18:00:30.499382 132358 net.cpp:596] relu2 <- conv2
I0331 18:00:30.499392 132358 net.cpp:557] relu2 -> conv2 (in-place)
I0331 18:00:30.499403 132358 net.cpp:210] Setting up relu2
I0331 18:00:30.499408 132358 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 18:00:30.499413 132358 net.cpp:225] Memory required for data: 30721200
I0331 18:00:30.499416 132358 layer_factory.hpp:114] Creating layer pool2
I0331 18:00:30.499452 132358 net.cpp:160] Creating Layer pool2
I0331 18:00:30.499456 132358 net.cpp:596] pool2 <- conv2
I0331 18:00:30.499464 132358 net.cpp:570] pool2 -> pool2
I0331 18:00:30.499475 132358 net.cpp:210] Setting up pool2
I0331 18:00:30.499482 132358 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0331 18:00:30.499486 132358 net.cpp:225] Memory required for data: 31540400
I0331 18:00:30.499490 132358 layer_factory.hpp:114] Creating layer norm2
I0331 18:00:30.499502 132358 net.cpp:160] Creating Layer norm2
I0331 18:00:30.499505 132358 net.cpp:596] norm2 <- pool2
I0331 18:00:30.499512 132358 net.cpp:570] norm2 -> norm2
I0331 18:00:30.499567 132358 net.cpp:210] Setting up norm2
I0331 18:00:30.499575 132358 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0331 18:00:30.499579 132358 net.cpp:225] Memory required for data: 32359600
I0331 18:00:30.499583 132358 layer_factory.hpp:114] Creating layer conv3
I0331 18:00:30.499595 132358 net.cpp:160] Creating Layer conv3
I0331 18:00:30.499599 132358 net.cpp:596] conv3 <- norm2
I0331 18:00:30.499611 132358 net.cpp:570] conv3 -> conv3
I0331 18:00:30.508936 132358 net.cpp:210] Setting up conv3
I0331 18:00:30.508958 132358 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0331 18:00:30.508962 132358 net.cpp:225] Memory required for data: 33998000
I0331 18:00:30.508980 132358 layer_factory.hpp:114] Creating layer relu3
I0331 18:00:30.508990 132358 net.cpp:160] Creating Layer relu3
I0331 18:00:30.508994 132358 net.cpp:596] relu3 <- conv3
I0331 18:00:30.509003 132358 net.cpp:557] relu3 -> conv3 (in-place)
I0331 18:00:30.509011 132358 net.cpp:210] Setting up relu3
I0331 18:00:30.509016 132358 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0331 18:00:30.509019 132358 net.cpp:225] Memory required for data: 35636400
I0331 18:00:30.509023 132358 layer_factory.hpp:114] Creating layer pool3
I0331 18:00:30.509047 132358 net.cpp:160] Creating Layer pool3
I0331 18:00:30.509052 132358 net.cpp:596] pool3 <- conv3
I0331 18:00:30.509057 132358 net.cpp:570] pool3 -> pool3
I0331 18:00:30.509066 132358 net.cpp:210] Setting up pool3
I0331 18:00:30.509071 132358 net.cpp:217] Top shape: 100 64 4 4 (102400)
I0331 18:00:30.509088 132358 net.cpp:225] Memory required for data: 36046000
I0331 18:00:30.509093 132358 layer_factory.hpp:114] Creating layer ip1
I0331 18:00:30.509109 132358 net.cpp:160] Creating Layer ip1
I0331 18:00:30.509112 132358 net.cpp:596] ip1 <- pool3
I0331 18:00:30.509119 132358 net.cpp:570] ip1 -> ip1
I0331 18:00:30.509330 132358 net.cpp:210] Setting up ip1
I0331 18:00:30.509335 132358 net.cpp:217] Top shape: 100 10 (1000)
I0331 18:00:30.509340 132358 net.cpp:225] Memory required for data: 36050000
I0331 18:00:30.509346 132358 layer_factory.hpp:114] Creating layer ip1_ip1_0_split
I0331 18:00:30.509356 132358 net.cpp:160] Creating Layer ip1_ip1_0_split
I0331 18:00:30.509359 132358 net.cpp:596] ip1_ip1_0_split <- ip1
I0331 18:00:30.509367 132358 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0331 18:00:30.509374 132358 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0331 18:00:30.509382 132358 net.cpp:210] Setting up ip1_ip1_0_split
I0331 18:00:30.509387 132358 net.cpp:217] Top shape: 100 10 (1000)
I0331 18:00:30.509392 132358 net.cpp:217] Top shape: 100 10 (1000)
I0331 18:00:30.509395 132358 net.cpp:225] Memory required for data: 36058000
I0331 18:00:30.509399 132358 layer_factory.hpp:114] Creating layer accuracy
I0331 18:00:30.509413 132358 net.cpp:160] Creating Layer accuracy
I0331 18:00:30.509418 132358 net.cpp:596] accuracy <- ip1_ip1_0_split_0
I0331 18:00:30.509435 132358 net.cpp:596] accuracy <- label_cifar_1_split_0
I0331 18:00:30.509443 132358 net.cpp:570] accuracy -> accuracy
I0331 18:00:30.509454 132358 net.cpp:210] Setting up accuracy
I0331 18:00:30.509459 132358 net.cpp:217] Top shape: (1)
I0331 18:00:30.509464 132358 net.cpp:225] Memory required for data: 36058004
I0331 18:00:30.509466 132358 layer_factory.hpp:114] Creating layer loss
I0331 18:00:30.509475 132358 net.cpp:160] Creating Layer loss
I0331 18:00:30.509479 132358 net.cpp:596] loss <- ip1_ip1_0_split_1
I0331 18:00:30.509485 132358 net.cpp:596] loss <- label_cifar_1_split_1
I0331 18:00:30.509497 132358 net.cpp:570] loss -> loss
I0331 18:00:30.509508 132358 layer_factory.hpp:114] Creating layer loss
I0331 18:00:30.509532 132358 net.cpp:210] Setting up loss
I0331 18:00:30.509538 132358 net.cpp:217] Top shape: (1)
I0331 18:00:30.509541 132358 net.cpp:220]     with loss weight 1
I0331 18:00:30.509560 132358 net.cpp:225] Memory required for data: 36058008
I0331 18:00:30.509564 132358 net.cpp:287] loss needs backward computation.
I0331 18:00:30.509569 132358 net.cpp:289] accuracy does not need backward computation.
I0331 18:00:30.509574 132358 net.cpp:287] ip1_ip1_0_split needs backward computation.
I0331 18:00:30.509578 132358 net.cpp:287] ip1 needs backward computation.
I0331 18:00:30.509582 132358 net.cpp:287] pool3 needs backward computation.
I0331 18:00:30.509587 132358 net.cpp:287] relu3 needs backward computation.
I0331 18:00:30.509589 132358 net.cpp:287] conv3 needs backward computation.
I0331 18:00:30.509593 132358 net.cpp:287] norm2 needs backward computation.
I0331 18:00:30.509598 132358 net.cpp:287] pool2 needs backward computation.
I0331 18:00:30.509601 132358 net.cpp:287] relu2 needs backward computation.
I0331 18:00:30.509605 132358 net.cpp:287] conv2 needs backward computation.
I0331 18:00:30.509609 132358 net.cpp:287] norm1 needs backward computation.
I0331 18:00:30.509614 132358 net.cpp:287] relu1 needs backward computation.
I0331 18:00:30.509618 132358 net.cpp:287] pool1 needs backward computation.
I0331 18:00:30.509623 132358 net.cpp:287] conv1 needs backward computation.
I0331 18:00:30.509634 132358 net.cpp:289] label_cifar_1_split does not need backward computation.
I0331 18:00:30.509639 132358 net.cpp:289] cifar does not need backward computation.
I0331 18:00:30.509644 132358 net.cpp:331] This network produces output accuracy
I0331 18:00:30.509649 132358 net.cpp:331] This network produces output loss
I0331 18:00:30.509667 132358 net.cpp:345] Network initialization done.
I0331 18:00:30.509785 132358 solver.cpp:104] Solver scaffolding done.
I0331 18:00:30.509815 132358 caffe.cpp:310] Starting Optimization
I0331 18:00:30.509826 132358 solver.cpp:340] Solving CIFAR10_full
I0331 18:00:30.509830 132358 solver.cpp:341] Learning Rate Policy: fixed
I0331 18:00:30.509835 132358 solver.cpp:406] Iteration 0, Testing net (#0)
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 1 bound to OS proc set {1,57}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 2 bound to OS proc set {2,58}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 4 bound to OS proc set {4,60}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 3 bound to OS proc set {3,59}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 5 bound to OS proc set {5,61}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 6 bound to OS proc set {6,62}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 7 bound to OS proc set {7,63}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 8 bound to OS proc set {8,64}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 9 bound to OS proc set {9,65}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 10 bound to OS proc set {10,66}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 12 bound to OS proc set {12,68}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 11 bound to OS proc set {11,67}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 13 bound to OS proc set {13,69}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 14 bound to OS proc set {14,70}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 15 bound to OS proc set {15,71}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 16 bound to OS proc set {16,72}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 17 bound to OS proc set {17,73}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 19 bound to OS proc set {19,75}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 18 bound to OS proc set {18,74}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 20 bound to OS proc set {20,76}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 21 bound to OS proc set {21,77}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 22 bound to OS proc set {22,78}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 23 bound to OS proc set {23,79}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 24 bound to OS proc set {24,80}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 25 bound to OS proc set {25,81}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 26 bound to OS proc set {26,82}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 27 bound to OS proc set {27,83}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 28 bound to OS proc set {28,84}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 29 bound to OS proc set {29,85}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 30 bound to OS proc set {30,86}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 31 bound to OS proc set {31,87}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 32 bound to OS proc set {32,88}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 33 bound to OS proc set {33,89}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 34 bound to OS proc set {34,90}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 35 bound to OS proc set {35,91}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 36 bound to OS proc set {36,92}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 37 bound to OS proc set {37,93}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 38 bound to OS proc set {38,94}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 39 bound to OS proc set {39,95}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 40 bound to OS proc set {40,96}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 41 bound to OS proc set {41,97}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 42 bound to OS proc set {42,98}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 43 bound to OS proc set {43,99}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 44 bound to OS proc set {44,100}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 45 bound to OS proc set {45,101}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 46 bound to OS proc set {46,102}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 47 bound to OS proc set {47,103}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 48 bound to OS proc set {48,104}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 49 bound to OS proc set {49,105}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 50 bound to OS proc set {50,106}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 51 bound to OS proc set {51,107}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 52 bound to OS proc set {52,108}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 53 bound to OS proc set {53,109}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 54 bound to OS proc set {54,110}
OMP: Info #242: KMP_AFFINITY: pid 132358 thread 55 bound to OS proc set {55,111}
I0331 18:00:30.680672 132358 solver.cpp:286] Iteration 0, loss = 2.30252
I0331 18:00:30.680763 132358 solver.cpp:303]     Train net output #0: loss = 2.30252 (* 1 = 2.30252 loss)
I0331 18:00:30.680778 132358 sgd_solver.cpp:143] Iteration 0, lr = 0.001
I0331 18:01:21.985179 132358 solver.cpp:382] Iteration 800, loss = 1.23761
I0331 18:01:21.985329 132358 solver.cpp:391] Optimization Done.
I0331 18:01:21.985335 132358 caffe.cpp:313] Optimization Done.

 Performance counter stats for './build/tools/caffe.bin train --solver=examples/cifar10/cifar10_full_solver_200_0T_bsize224.prototxt':

       209,345,758      node-loads                                                  
     1,613,212,193      node-load-misses                                            

      51.660328373 seconds time elapsed


real	0m51.669s
user	46m43.792s
sys	1m18.786s
