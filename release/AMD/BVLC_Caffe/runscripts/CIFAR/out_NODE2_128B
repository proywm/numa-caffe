I0116 19:34:54.879941 13486 caffe.cpp:210] Use CPU.
I0116 19:34:54.881268 13486 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize128.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0116 19:34:54.881572 13486 solver.cpp:91] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 19:34:54.883705 13486 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0116 19:34:54.883777 13486 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 19:34:54.884796 13486 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 19:34:54.885058 13486 layer_factory.hpp:77] Creating layer cifar
I0116 19:34:54.886464 13486 net.cpp:100] Creating Layer cifar
I0116 19:34:54.886610 13486 net.cpp:408] cifar -> data
I0116 19:34:54.886725 13486 net.cpp:408] cifar -> label
I0116 19:34:54.886844 13486 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 19:34:54.886876 13487 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0116 19:34:54.887274 13486 data_layer.cpp:41] output data size: 128,3,32,32
I0116 19:34:54.908629 13486 net.cpp:150] Setting up cifar
I0116 19:34:54.908720 13486 net.cpp:157] Top shape: 128 3 32 32 (393216)
I0116 19:34:54.908746 13486 net.cpp:157] Top shape: 128 (128)
I0116 19:34:54.908764 13486 net.cpp:165] Memory required for data: 1573376
I0116 19:34:54.908807 13486 layer_factory.hpp:77] Creating layer conv1
I0116 19:34:54.908871 13486 net.cpp:100] Creating Layer conv1
I0116 19:34:54.908896 13486 net.cpp:434] conv1 <- data
I0116 19:34:54.908944 13486 net.cpp:408] conv1 -> conv1
I0116 19:34:54.909567 13486 net.cpp:150] Setting up conv1
I0116 19:34:54.909644 13486 net.cpp:157] Top shape: 128 32 32 32 (4194304)
I0116 19:34:54.909663 13486 net.cpp:165] Memory required for data: 18350592
I0116 19:34:54.909723 13486 layer_factory.hpp:77] Creating layer pool1
I0116 19:34:54.909759 13486 net.cpp:100] Creating Layer pool1
I0116 19:34:54.909785 13486 net.cpp:434] pool1 <- conv1
I0116 19:34:54.909818 13486 net.cpp:408] pool1 -> pool1
I0116 19:34:54.909881 13486 net.cpp:150] Setting up pool1
I0116 19:34:54.909906 13486 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:34:54.909924 13486 net.cpp:165] Memory required for data: 22544896
I0116 19:34:54.909940 13486 layer_factory.hpp:77] Creating layer relu1
I0116 19:34:54.909968 13486 net.cpp:100] Creating Layer relu1
I0116 19:34:54.909989 13486 net.cpp:434] relu1 <- pool1
I0116 19:34:54.910012 13486 net.cpp:395] relu1 -> pool1 (in-place)
I0116 19:34:54.910046 13486 net.cpp:150] Setting up relu1
I0116 19:34:54.910069 13486 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:34:54.910094 13486 net.cpp:165] Memory required for data: 26739200
I0116 19:34:54.910110 13486 layer_factory.hpp:77] Creating layer norm1
I0116 19:34:54.910142 13486 net.cpp:100] Creating Layer norm1
I0116 19:34:54.910161 13486 net.cpp:434] norm1 <- pool1
I0116 19:34:54.910192 13486 net.cpp:408] norm1 -> norm1
I0116 19:34:54.910331 13486 net.cpp:150] Setting up norm1
I0116 19:34:54.910362 13486 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:34:54.910378 13486 net.cpp:165] Memory required for data: 30933504
I0116 19:34:54.910395 13486 layer_factory.hpp:77] Creating layer conv2
I0116 19:34:54.910432 13486 net.cpp:100] Creating Layer conv2
I0116 19:34:54.910451 13486 net.cpp:434] conv2 <- norm1
I0116 19:34:54.910483 13486 net.cpp:408] conv2 -> conv2
I0116 19:34:54.914768 13486 net.cpp:150] Setting up conv2
I0116 19:34:54.914813 13486 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:34:54.914829 13486 net.cpp:165] Memory required for data: 35127808
I0116 19:34:54.914861 13486 layer_factory.hpp:77] Creating layer relu2
I0116 19:34:54.914892 13486 net.cpp:100] Creating Layer relu2
I0116 19:34:54.914911 13486 net.cpp:434] relu2 <- conv2
I0116 19:34:54.914933 13486 net.cpp:395] relu2 -> conv2 (in-place)
I0116 19:34:54.914958 13486 net.cpp:150] Setting up relu2
I0116 19:34:54.914981 13486 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:34:54.914999 13486 net.cpp:165] Memory required for data: 39322112
I0116 19:34:54.915017 13486 layer_factory.hpp:77] Creating layer pool2
I0116 19:34:54.915047 13486 net.cpp:100] Creating Layer pool2
I0116 19:34:54.915066 13486 net.cpp:434] pool2 <- conv2
I0116 19:34:54.915091 13486 net.cpp:408] pool2 -> pool2
I0116 19:34:54.915120 13486 net.cpp:150] Setting up pool2
I0116 19:34:54.915143 13486 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 19:34:54.915160 13486 net.cpp:165] Memory required for data: 40370688
I0116 19:34:54.915184 13486 layer_factory.hpp:77] Creating layer norm2
I0116 19:34:54.915216 13486 net.cpp:100] Creating Layer norm2
I0116 19:34:54.915235 13486 net.cpp:434] norm2 <- pool2
I0116 19:34:54.915269 13486 net.cpp:408] norm2 -> norm2
I0116 19:34:54.915350 13486 net.cpp:150] Setting up norm2
I0116 19:34:54.915376 13486 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 19:34:54.915392 13486 net.cpp:165] Memory required for data: 41419264
I0116 19:34:54.915410 13486 layer_factory.hpp:77] Creating layer conv3
I0116 19:34:54.915473 13486 net.cpp:100] Creating Layer conv3
I0116 19:34:54.915522 13486 net.cpp:434] conv3 <- norm2
I0116 19:34:54.915555 13486 net.cpp:408] conv3 -> conv3
I0116 19:34:54.923959 13486 net.cpp:150] Setting up conv3
I0116 19:34:54.923990 13486 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 19:34:54.924003 13486 net.cpp:165] Memory required for data: 43516416
I0116 19:34:54.924036 13486 layer_factory.hpp:77] Creating layer relu3
I0116 19:34:54.924055 13486 net.cpp:100] Creating Layer relu3
I0116 19:34:54.924069 13486 net.cpp:434] relu3 <- conv3
I0116 19:34:54.924093 13486 net.cpp:395] relu3 -> conv3 (in-place)
I0116 19:34:54.924114 13486 net.cpp:150] Setting up relu3
I0116 19:34:54.924131 13486 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 19:34:54.924144 13486 net.cpp:165] Memory required for data: 45613568
I0116 19:34:54.924156 13486 layer_factory.hpp:77] Creating layer pool3
I0116 19:34:54.924173 13486 net.cpp:100] Creating Layer pool3
I0116 19:34:54.924187 13486 net.cpp:434] pool3 <- conv3
I0116 19:34:54.924204 13486 net.cpp:408] pool3 -> pool3
I0116 19:34:54.924226 13486 net.cpp:150] Setting up pool3
I0116 19:34:54.924250 13486 net.cpp:157] Top shape: 128 64 4 4 (131072)
I0116 19:34:54.924265 13486 net.cpp:165] Memory required for data: 46137856
I0116 19:34:54.924279 13486 layer_factory.hpp:77] Creating layer ip1
I0116 19:34:54.924310 13486 net.cpp:100] Creating Layer ip1
I0116 19:34:54.924325 13486 net.cpp:434] ip1 <- pool3
I0116 19:34:54.924345 13486 net.cpp:408] ip1 -> ip1
I0116 19:34:54.925673 13486 net.cpp:150] Setting up ip1
I0116 19:34:54.925695 13486 net.cpp:157] Top shape: 128 10 (1280)
I0116 19:34:54.925707 13486 net.cpp:165] Memory required for data: 46142976
I0116 19:34:54.925727 13486 layer_factory.hpp:77] Creating layer loss
I0116 19:34:54.925757 13486 net.cpp:100] Creating Layer loss
I0116 19:34:54.925771 13486 net.cpp:434] loss <- ip1
I0116 19:34:54.925786 13486 net.cpp:434] loss <- label
I0116 19:34:54.925810 13486 net.cpp:408] loss -> loss
I0116 19:34:54.925848 13486 layer_factory.hpp:77] Creating layer loss
I0116 19:34:54.925905 13486 net.cpp:150] Setting up loss
I0116 19:34:54.925925 13486 net.cpp:157] Top shape: (1)
I0116 19:34:54.925936 13486 net.cpp:160]     with loss weight 1
I0116 19:34:54.925982 13486 net.cpp:165] Memory required for data: 46142980
I0116 19:34:54.925997 13486 net.cpp:226] loss needs backward computation.
I0116 19:34:54.926012 13486 net.cpp:226] ip1 needs backward computation.
I0116 19:34:54.926024 13486 net.cpp:226] pool3 needs backward computation.
I0116 19:34:54.926038 13486 net.cpp:226] relu3 needs backward computation.
I0116 19:34:54.926049 13486 net.cpp:226] conv3 needs backward computation.
I0116 19:34:54.926062 13486 net.cpp:226] norm2 needs backward computation.
I0116 19:34:54.926075 13486 net.cpp:226] pool2 needs backward computation.
I0116 19:34:54.926089 13486 net.cpp:226] relu2 needs backward computation.
I0116 19:34:54.926100 13486 net.cpp:226] conv2 needs backward computation.
I0116 19:34:54.926113 13486 net.cpp:226] norm1 needs backward computation.
I0116 19:34:54.926126 13486 net.cpp:226] relu1 needs backward computation.
I0116 19:34:54.926138 13486 net.cpp:226] pool1 needs backward computation.
I0116 19:34:54.926151 13486 net.cpp:226] conv1 needs backward computation.
I0116 19:34:54.926165 13486 net.cpp:228] cifar does not need backward computation.
I0116 19:34:54.926178 13486 net.cpp:270] This network produces output loss
I0116 19:34:54.926218 13486 net.cpp:283] Network initialization done.
I0116 19:34:54.927753 13486 solver.cpp:181] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 19:34:54.927840 13486 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0116 19:34:54.928629 13486 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 19:34:54.928879 13486 layer_factory.hpp:77] Creating layer cifar
I0116 19:34:54.929157 13486 net.cpp:100] Creating Layer cifar
I0116 19:34:54.929181 13486 net.cpp:408] cifar -> data
I0116 19:34:54.929210 13486 net.cpp:408] cifar -> label
I0116 19:34:54.929234 13486 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 19:34:54.929355 13489 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0116 19:34:54.929569 13486 data_layer.cpp:41] output data size: 100,3,32,32
I0116 19:34:54.950671 13486 net.cpp:150] Setting up cifar
I0116 19:34:54.950783 13486 net.cpp:157] Top shape: 100 3 32 32 (307200)
I0116 19:34:54.950812 13486 net.cpp:157] Top shape: 100 (100)
I0116 19:34:54.950834 13486 net.cpp:165] Memory required for data: 1229200
I0116 19:34:54.950865 13486 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0116 19:34:54.950927 13486 net.cpp:100] Creating Layer label_cifar_1_split
I0116 19:34:54.950963 13486 net.cpp:434] label_cifar_1_split <- label
I0116 19:34:54.950999 13486 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_0
I0116 19:34:54.951050 13486 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_1
I0116 19:34:54.951093 13486 net.cpp:150] Setting up label_cifar_1_split
I0116 19:34:54.951122 13486 net.cpp:157] Top shape: 100 (100)
I0116 19:34:54.951148 13486 net.cpp:157] Top shape: 100 (100)
I0116 19:34:54.951169 13486 net.cpp:165] Memory required for data: 1230000
I0116 19:34:54.951273 13486 layer_factory.hpp:77] Creating layer conv1
I0116 19:34:54.951342 13486 net.cpp:100] Creating Layer conv1
I0116 19:34:54.951367 13486 net.cpp:434] conv1 <- data
I0116 19:34:54.951400 13486 net.cpp:408] conv1 -> conv1
I0116 19:34:54.952020 13486 net.cpp:150] Setting up conv1
I0116 19:34:54.952056 13486 net.cpp:157] Top shape: 100 32 32 32 (3276800)
I0116 19:34:54.952077 13486 net.cpp:165] Memory required for data: 14337200
I0116 19:34:54.952134 13486 layer_factory.hpp:77] Creating layer pool1
I0116 19:34:54.952173 13486 net.cpp:100] Creating Layer pool1
I0116 19:34:54.952198 13486 net.cpp:434] pool1 <- conv1
I0116 19:34:54.952229 13486 net.cpp:408] pool1 -> pool1
I0116 19:34:54.952289 13486 net.cpp:150] Setting up pool1
I0116 19:34:54.952322 13486 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:34:54.952343 13486 net.cpp:165] Memory required for data: 17614000
I0116 19:34:54.952365 13486 layer_factory.hpp:77] Creating layer relu1
I0116 19:34:54.952395 13486 net.cpp:100] Creating Layer relu1
I0116 19:34:54.952417 13486 net.cpp:434] relu1 <- pool1
I0116 19:34:54.952462 13486 net.cpp:395] relu1 -> pool1 (in-place)
I0116 19:34:54.952497 13486 net.cpp:150] Setting up relu1
I0116 19:34:54.952524 13486 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:34:54.952545 13486 net.cpp:165] Memory required for data: 20890800
I0116 19:34:54.952567 13486 layer_factory.hpp:77] Creating layer norm1
I0116 19:34:54.952605 13486 net.cpp:100] Creating Layer norm1
I0116 19:34:54.952635 13486 net.cpp:434] norm1 <- pool1
I0116 19:34:54.952666 13486 net.cpp:408] norm1 -> norm1
I0116 19:34:54.952769 13486 net.cpp:150] Setting up norm1
I0116 19:34:54.952805 13486 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:34:54.952827 13486 net.cpp:165] Memory required for data: 24167600
I0116 19:34:54.952848 13486 layer_factory.hpp:77] Creating layer conv2
I0116 19:34:54.952894 13486 net.cpp:100] Creating Layer conv2
I0116 19:34:54.952924 13486 net.cpp:434] conv2 <- norm1
I0116 19:34:54.952965 13486 net.cpp:408] conv2 -> conv2
I0116 19:34:54.958350 13486 net.cpp:150] Setting up conv2
I0116 19:34:54.958389 13486 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:34:54.958410 13486 net.cpp:165] Memory required for data: 27444400
I0116 19:34:54.958449 13486 layer_factory.hpp:77] Creating layer relu2
I0116 19:34:54.958488 13486 net.cpp:100] Creating Layer relu2
I0116 19:34:54.958516 13486 net.cpp:434] relu2 <- conv2
I0116 19:34:54.958546 13486 net.cpp:395] relu2 -> conv2 (in-place)
I0116 19:34:54.958585 13486 net.cpp:150] Setting up relu2
I0116 19:34:54.958612 13486 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:34:54.958638 13486 net.cpp:165] Memory required for data: 30721200
I0116 19:34:54.958662 13486 layer_factory.hpp:77] Creating layer pool2
I0116 19:34:54.958694 13486 net.cpp:100] Creating Layer pool2
I0116 19:34:54.958716 13486 net.cpp:434] pool2 <- conv2
I0116 19:34:54.958756 13486 net.cpp:408] pool2 -> pool2
I0116 19:34:54.958796 13486 net.cpp:150] Setting up pool2
I0116 19:34:54.958827 13486 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 19:34:54.958848 13486 net.cpp:165] Memory required for data: 31540400
I0116 19:34:54.958869 13486 layer_factory.hpp:77] Creating layer norm2
I0116 19:34:54.958909 13486 net.cpp:100] Creating Layer norm2
I0116 19:34:54.958932 13486 net.cpp:434] norm2 <- pool2
I0116 19:34:54.958961 13486 net.cpp:408] norm2 -> norm2
I0116 19:34:54.959065 13486 net.cpp:150] Setting up norm2
I0116 19:34:54.959097 13486 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 19:34:54.959118 13486 net.cpp:165] Memory required for data: 32359600
I0116 19:34:54.959142 13486 layer_factory.hpp:77] Creating layer conv3
I0116 19:34:54.959193 13486 net.cpp:100] Creating Layer conv3
I0116 19:34:54.959218 13486 net.cpp:434] conv3 <- norm2
I0116 19:34:54.959270 13486 net.cpp:408] conv3 -> conv3
I0116 19:34:54.970324 13486 net.cpp:150] Setting up conv3
I0116 19:34:54.970369 13486 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 19:34:54.970391 13486 net.cpp:165] Memory required for data: 33998000
I0116 19:34:54.970492 13486 layer_factory.hpp:77] Creating layer relu3
I0116 19:34:54.970525 13486 net.cpp:100] Creating Layer relu3
I0116 19:34:54.970549 13486 net.cpp:434] relu3 <- conv3
I0116 19:34:54.970588 13486 net.cpp:395] relu3 -> conv3 (in-place)
I0116 19:34:54.970624 13486 net.cpp:150] Setting up relu3
I0116 19:34:54.970652 13486 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 19:34:54.970674 13486 net.cpp:165] Memory required for data: 35636400
I0116 19:34:54.970695 13486 layer_factory.hpp:77] Creating layer pool3
I0116 19:34:54.970723 13486 net.cpp:100] Creating Layer pool3
I0116 19:34:54.970746 13486 net.cpp:434] pool3 <- conv3
I0116 19:34:54.970774 13486 net.cpp:408] pool3 -> pool3
I0116 19:34:54.970811 13486 net.cpp:150] Setting up pool3
I0116 19:34:54.970840 13486 net.cpp:157] Top shape: 100 64 4 4 (102400)
I0116 19:34:54.970860 13486 net.cpp:165] Memory required for data: 36046000
I0116 19:34:54.970882 13486 layer_factory.hpp:77] Creating layer ip1
I0116 19:34:54.970926 13486 net.cpp:100] Creating Layer ip1
I0116 19:34:54.970949 13486 net.cpp:434] ip1 <- pool3
I0116 19:34:54.970989 13486 net.cpp:408] ip1 -> ip1
I0116 19:34:54.973170 13486 net.cpp:150] Setting up ip1
I0116 19:34:54.973206 13486 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:34:54.973225 13486 net.cpp:165] Memory required for data: 36050000
I0116 19:34:54.973268 13486 layer_factory.hpp:77] Creating layer ip1_ip1_0_split
I0116 19:34:54.973310 13486 net.cpp:100] Creating Layer ip1_ip1_0_split
I0116 19:34:54.973335 13486 net.cpp:434] ip1_ip1_0_split <- ip1
I0116 19:34:54.973362 13486 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0116 19:34:54.973395 13486 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0116 19:34:54.973431 13486 net.cpp:150] Setting up ip1_ip1_0_split
I0116 19:34:54.973459 13486 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:34:54.973485 13486 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:34:54.973505 13486 net.cpp:165] Memory required for data: 36058000
I0116 19:34:54.973527 13486 layer_factory.hpp:77] Creating layer accuracy
I0116 19:34:54.973577 13486 net.cpp:100] Creating Layer accuracy
I0116 19:34:54.973600 13486 net.cpp:434] accuracy <- ip1_ip1_0_split_0
I0116 19:34:54.973624 13486 net.cpp:434] accuracy <- label_cifar_1_split_0
I0116 19:34:54.973671 13486 net.cpp:408] accuracy -> accuracy
I0116 19:34:54.973719 13486 net.cpp:150] Setting up accuracy
I0116 19:34:54.973747 13486 net.cpp:157] Top shape: (1)
I0116 19:34:54.973768 13486 net.cpp:165] Memory required for data: 36058004
I0116 19:34:54.973790 13486 layer_factory.hpp:77] Creating layer loss
I0116 19:34:54.973825 13486 net.cpp:100] Creating Layer loss
I0116 19:34:54.973848 13486 net.cpp:434] loss <- ip1_ip1_0_split_1
I0116 19:34:54.973873 13486 net.cpp:434] loss <- label_cifar_1_split_1
I0116 19:34:54.973912 13486 net.cpp:408] loss -> loss
I0116 19:34:54.973954 13486 layer_factory.hpp:77] Creating layer loss
I0116 19:34:54.974041 13486 net.cpp:150] Setting up loss
I0116 19:34:54.974072 13486 net.cpp:157] Top shape: (1)
I0116 19:34:54.974093 13486 net.cpp:160]     with loss weight 1
I0116 19:34:54.974134 13486 net.cpp:165] Memory required for data: 36058008
I0116 19:34:54.974156 13486 net.cpp:226] loss needs backward computation.
I0116 19:34:54.974180 13486 net.cpp:228] accuracy does not need backward computation.
I0116 19:34:54.974205 13486 net.cpp:226] ip1_ip1_0_split needs backward computation.
I0116 19:34:54.974226 13486 net.cpp:226] ip1 needs backward computation.
I0116 19:34:54.974259 13486 net.cpp:226] pool3 needs backward computation.
I0116 19:34:54.974284 13486 net.cpp:226] relu3 needs backward computation.
I0116 19:34:54.974305 13486 net.cpp:226] conv3 needs backward computation.
I0116 19:34:54.974328 13486 net.cpp:226] norm2 needs backward computation.
I0116 19:34:54.974349 13486 net.cpp:226] pool2 needs backward computation.
I0116 19:34:54.974370 13486 net.cpp:226] relu2 needs backward computation.
I0116 19:34:54.974391 13486 net.cpp:226] conv2 needs backward computation.
I0116 19:34:54.974412 13486 net.cpp:226] norm1 needs backward computation.
I0116 19:34:54.974480 13486 net.cpp:226] relu1 needs backward computation.
I0116 19:34:54.974503 13486 net.cpp:226] pool1 needs backward computation.
I0116 19:34:54.974524 13486 net.cpp:226] conv1 needs backward computation.
I0116 19:34:54.974547 13486 net.cpp:228] label_cifar_1_split does not need backward computation.
I0116 19:34:54.974571 13486 net.cpp:228] cifar does not need backward computation.
I0116 19:34:54.974591 13486 net.cpp:270] This network produces output accuracy
I0116 19:34:54.974613 13486 net.cpp:270] This network produces output loss
I0116 19:34:54.974689 13486 net.cpp:283] Network initialization done.
I0116 19:34:54.974915 13486 solver.cpp:60] Solver scaffolding done.
I0116 19:34:54.975034 13486 caffe.cpp:251] Starting Optimization
I0116 19:34:54.975064 13486 solver.cpp:279] Solving CIFAR10_full
I0116 19:34:54.975085 13486 solver.cpp:280] Learning Rate Policy: fixed
I0116 19:34:54.975994 13486 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #205: KMP_AFFINITY: cpuid leaf 11 not supported - decoding legacy APIC ids.
OMP: Info #149: KMP_AFFINITY: Affinity capable, using global cpuid info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #156: KMP_AFFINITY: 12 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #159: KMP_AFFINITY: 1 packages x 1 cores/pkg x 12 threads/core (1 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 thread 11 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 0 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 1 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 2 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 3 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 4 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 5 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 6 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 8 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 9 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 7 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 11 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13486 thread 10 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
I0116 19:35:40.216624 13486 solver.cpp:404]     Test net output #0: accuracy = 0.1
I0116 19:35:40.216832 13486 solver.cpp:404]     Test net output #1: loss = 2.30261 (* 1 = 2.30261 loss)
I0116 19:35:41.616937 13486 solver.cpp:228] Iteration 0, loss = 2.30265
I0116 19:35:41.617045 13486 solver.cpp:244]     Train net output #0: loss = 2.30265 (* 1 = 2.30265 loss)
I0116 19:35:41.617079 13486 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0116 19:52:52.575953 13486 solver.cpp:317] Iteration 800, loss = 1.32476
I0116 19:52:52.577482 13486 solver.cpp:322] Optimization Done.
I0116 19:52:52.577498 13486 caffe.cpp:254] Optimization Done.

real	17m57.820s
user	211m7.916s
sys	4m14.778s
