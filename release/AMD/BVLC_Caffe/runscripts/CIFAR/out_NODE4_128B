I0116 19:52:52.668063 13663 caffe.cpp:210] Use CPU.
I0116 19:52:52.668874 13663 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize128.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0116 19:52:52.669049 13663 solver.cpp:91] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 19:52:52.670192 13663 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0116 19:52:52.670230 13663 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 19:52:52.670765 13663 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 19:52:52.670917 13663 layer_factory.hpp:77] Creating layer cifar
I0116 19:52:52.671702 13663 net.cpp:100] Creating Layer cifar
I0116 19:52:52.671735 13663 net.cpp:408] cifar -> data
I0116 19:52:52.671789 13663 net.cpp:408] cifar -> label
I0116 19:52:52.671943 13663 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 19:52:52.672358 13664 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0116 19:52:52.672708 13663 data_layer.cpp:41] output data size: 128,3,32,32
I0116 19:52:52.683202 13663 net.cpp:150] Setting up cifar
I0116 19:52:52.683349 13663 net.cpp:157] Top shape: 128 3 32 32 (393216)
I0116 19:52:52.683385 13663 net.cpp:157] Top shape: 128 (128)
I0116 19:52:52.683396 13663 net.cpp:165] Memory required for data: 1573376
I0116 19:52:52.683424 13663 layer_factory.hpp:77] Creating layer conv1
I0116 19:52:52.683468 13663 net.cpp:100] Creating Layer conv1
I0116 19:52:52.683485 13663 net.cpp:434] conv1 <- data
I0116 19:52:52.683513 13663 net.cpp:408] conv1 -> conv1
I0116 19:52:52.683876 13663 net.cpp:150] Setting up conv1
I0116 19:52:52.684021 13663 net.cpp:157] Top shape: 128 32 32 32 (4194304)
I0116 19:52:52.684046 13663 net.cpp:165] Memory required for data: 18350592
I0116 19:52:52.684097 13663 layer_factory.hpp:77] Creating layer pool1
I0116 19:52:52.684123 13663 net.cpp:100] Creating Layer pool1
I0116 19:52:52.684134 13663 net.cpp:434] pool1 <- conv1
I0116 19:52:52.684147 13663 net.cpp:408] pool1 -> pool1
I0116 19:52:52.684192 13663 net.cpp:150] Setting up pool1
I0116 19:52:52.684206 13663 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:52:52.684216 13663 net.cpp:165] Memory required for data: 22544896
I0116 19:52:52.684224 13663 layer_factory.hpp:77] Creating layer relu1
I0116 19:52:52.684237 13663 net.cpp:100] Creating Layer relu1
I0116 19:52:52.684258 13663 net.cpp:434] relu1 <- pool1
I0116 19:52:52.684274 13663 net.cpp:395] relu1 -> pool1 (in-place)
I0116 19:52:52.684293 13663 net.cpp:150] Setting up relu1
I0116 19:52:52.684321 13663 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:52:52.684331 13663 net.cpp:165] Memory required for data: 26739200
I0116 19:52:52.684340 13663 layer_factory.hpp:77] Creating layer norm1
I0116 19:52:52.684356 13663 net.cpp:100] Creating Layer norm1
I0116 19:52:52.684366 13663 net.cpp:434] norm1 <- pool1
I0116 19:52:52.684378 13663 net.cpp:408] norm1 -> norm1
I0116 19:52:52.684459 13663 net.cpp:150] Setting up norm1
I0116 19:52:52.684473 13663 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:52:52.684483 13663 net.cpp:165] Memory required for data: 30933504
I0116 19:52:52.684492 13663 layer_factory.hpp:77] Creating layer conv2
I0116 19:52:52.684512 13663 net.cpp:100] Creating Layer conv2
I0116 19:52:52.684522 13663 net.cpp:434] conv2 <- norm1
I0116 19:52:52.684543 13663 net.cpp:408] conv2 -> conv2
I0116 19:52:52.686794 13663 net.cpp:150] Setting up conv2
I0116 19:52:52.686853 13663 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:52:52.686874 13663 net.cpp:165] Memory required for data: 35127808
I0116 19:52:52.686893 13663 layer_factory.hpp:77] Creating layer relu2
I0116 19:52:52.686906 13663 net.cpp:100] Creating Layer relu2
I0116 19:52:52.686916 13663 net.cpp:434] relu2 <- conv2
I0116 19:52:52.686933 13663 net.cpp:395] relu2 -> conv2 (in-place)
I0116 19:52:52.686949 13663 net.cpp:150] Setting up relu2
I0116 19:52:52.686962 13663 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:52:52.686971 13663 net.cpp:165] Memory required for data: 39322112
I0116 19:52:52.686980 13663 layer_factory.hpp:77] Creating layer pool2
I0116 19:52:52.686993 13663 net.cpp:100] Creating Layer pool2
I0116 19:52:52.687003 13663 net.cpp:434] pool2 <- conv2
I0116 19:52:52.687019 13663 net.cpp:408] pool2 -> pool2
I0116 19:52:52.687036 13663 net.cpp:150] Setting up pool2
I0116 19:52:52.687049 13663 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 19:52:52.687058 13663 net.cpp:165] Memory required for data: 40370688
I0116 19:52:52.687067 13663 layer_factory.hpp:77] Creating layer norm2
I0116 19:52:52.687084 13663 net.cpp:100] Creating Layer norm2
I0116 19:52:52.687095 13663 net.cpp:434] norm2 <- pool2
I0116 19:52:52.687108 13663 net.cpp:408] norm2 -> norm2
I0116 19:52:52.687150 13663 net.cpp:150] Setting up norm2
I0116 19:52:52.687165 13663 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 19:52:52.687173 13663 net.cpp:165] Memory required for data: 41419264
I0116 19:52:52.687181 13663 layer_factory.hpp:77] Creating layer conv3
I0116 19:52:52.687221 13663 net.cpp:100] Creating Layer conv3
I0116 19:52:52.687266 13663 net.cpp:434] conv3 <- norm2
I0116 19:52:52.687289 13663 net.cpp:408] conv3 -> conv3
I0116 19:52:52.692523 13663 net.cpp:150] Setting up conv3
I0116 19:52:52.692549 13663 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 19:52:52.692559 13663 net.cpp:165] Memory required for data: 43516416
I0116 19:52:52.692582 13663 layer_factory.hpp:77] Creating layer relu3
I0116 19:52:52.692596 13663 net.cpp:100] Creating Layer relu3
I0116 19:52:52.692610 13663 net.cpp:434] relu3 <- conv3
I0116 19:52:52.692625 13663 net.cpp:395] relu3 -> conv3 (in-place)
I0116 19:52:52.692642 13663 net.cpp:150] Setting up relu3
I0116 19:52:52.692654 13663 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 19:52:52.692664 13663 net.cpp:165] Memory required for data: 45613568
I0116 19:52:52.692673 13663 layer_factory.hpp:77] Creating layer pool3
I0116 19:52:52.692687 13663 net.cpp:100] Creating Layer pool3
I0116 19:52:52.692695 13663 net.cpp:434] pool3 <- conv3
I0116 19:52:52.692708 13663 net.cpp:408] pool3 -> pool3
I0116 19:52:52.692723 13663 net.cpp:150] Setting up pool3
I0116 19:52:52.692736 13663 net.cpp:157] Top shape: 128 64 4 4 (131072)
I0116 19:52:52.692745 13663 net.cpp:165] Memory required for data: 46137856
I0116 19:52:52.692754 13663 layer_factory.hpp:77] Creating layer ip1
I0116 19:52:52.692778 13663 net.cpp:100] Creating Layer ip1
I0116 19:52:52.692788 13663 net.cpp:434] ip1 <- pool3
I0116 19:52:52.692806 13663 net.cpp:408] ip1 -> ip1
I0116 19:52:52.693846 13663 net.cpp:150] Setting up ip1
I0116 19:52:52.693861 13663 net.cpp:157] Top shape: 128 10 (1280)
I0116 19:52:52.693871 13663 net.cpp:165] Memory required for data: 46142976
I0116 19:52:52.693886 13663 layer_factory.hpp:77] Creating layer loss
I0116 19:52:52.693907 13663 net.cpp:100] Creating Layer loss
I0116 19:52:52.693917 13663 net.cpp:434] loss <- ip1
I0116 19:52:52.693928 13663 net.cpp:434] loss <- label
I0116 19:52:52.693951 13663 net.cpp:408] loss -> loss
I0116 19:52:52.693980 13663 layer_factory.hpp:77] Creating layer loss
I0116 19:52:52.694021 13663 net.cpp:150] Setting up loss
I0116 19:52:52.694034 13663 net.cpp:157] Top shape: (1)
I0116 19:52:52.694043 13663 net.cpp:160]     with loss weight 1
I0116 19:52:52.694082 13663 net.cpp:165] Memory required for data: 46142980
I0116 19:52:52.694090 13663 net.cpp:226] loss needs backward computation.
I0116 19:52:52.694100 13663 net.cpp:226] ip1 needs backward computation.
I0116 19:52:52.694109 13663 net.cpp:226] pool3 needs backward computation.
I0116 19:52:52.694118 13663 net.cpp:226] relu3 needs backward computation.
I0116 19:52:52.694126 13663 net.cpp:226] conv3 needs backward computation.
I0116 19:52:52.694135 13663 net.cpp:226] norm2 needs backward computation.
I0116 19:52:52.694144 13663 net.cpp:226] pool2 needs backward computation.
I0116 19:52:52.694154 13663 net.cpp:226] relu2 needs backward computation.
I0116 19:52:52.694162 13663 net.cpp:226] conv2 needs backward computation.
I0116 19:52:52.694170 13663 net.cpp:226] norm1 needs backward computation.
I0116 19:52:52.694180 13663 net.cpp:226] relu1 needs backward computation.
I0116 19:52:52.694188 13663 net.cpp:226] pool1 needs backward computation.
I0116 19:52:52.694197 13663 net.cpp:226] conv1 needs backward computation.
I0116 19:52:52.694206 13663 net.cpp:228] cifar does not need backward computation.
I0116 19:52:52.694216 13663 net.cpp:270] This network produces output loss
I0116 19:52:52.694247 13663 net.cpp:283] Network initialization done.
I0116 19:52:52.695344 13663 solver.cpp:181] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 19:52:52.695405 13663 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0116 19:52:52.695950 13663 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 19:52:52.696122 13663 layer_factory.hpp:77] Creating layer cifar
I0116 19:52:52.696765 13663 net.cpp:100] Creating Layer cifar
I0116 19:52:52.696796 13663 net.cpp:408] cifar -> data
I0116 19:52:52.696816 13663 net.cpp:408] cifar -> label
I0116 19:52:52.696835 13663 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 19:52:52.697015 13666 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0116 19:52:52.697163 13663 data_layer.cpp:41] output data size: 100,3,32,32
I0116 19:52:52.705741 13663 net.cpp:150] Setting up cifar
I0116 19:52:52.705790 13663 net.cpp:157] Top shape: 100 3 32 32 (307200)
I0116 19:52:52.705801 13663 net.cpp:157] Top shape: 100 (100)
I0116 19:52:52.705811 13663 net.cpp:165] Memory required for data: 1229200
I0116 19:52:52.705824 13663 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0116 19:52:52.705904 13663 net.cpp:100] Creating Layer label_cifar_1_split
I0116 19:52:52.705945 13663 net.cpp:434] label_cifar_1_split <- label
I0116 19:52:52.705974 13663 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_0
I0116 19:52:52.705996 13663 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_1
I0116 19:52:52.706013 13663 net.cpp:150] Setting up label_cifar_1_split
I0116 19:52:52.706028 13663 net.cpp:157] Top shape: 100 (100)
I0116 19:52:52.706039 13663 net.cpp:157] Top shape: 100 (100)
I0116 19:52:52.706049 13663 net.cpp:165] Memory required for data: 1230000
I0116 19:52:52.706099 13663 layer_factory.hpp:77] Creating layer conv1
I0116 19:52:52.706125 13663 net.cpp:100] Creating Layer conv1
I0116 19:52:52.706135 13663 net.cpp:434] conv1 <- data
I0116 19:52:52.706152 13663 net.cpp:408] conv1 -> conv1
I0116 19:52:52.706429 13663 net.cpp:150] Setting up conv1
I0116 19:52:52.706446 13663 net.cpp:157] Top shape: 100 32 32 32 (3276800)
I0116 19:52:52.706455 13663 net.cpp:165] Memory required for data: 14337200
I0116 19:52:52.706478 13663 layer_factory.hpp:77] Creating layer pool1
I0116 19:52:52.706495 13663 net.cpp:100] Creating Layer pool1
I0116 19:52:52.706504 13663 net.cpp:434] pool1 <- conv1
I0116 19:52:52.706517 13663 net.cpp:408] pool1 -> pool1
I0116 19:52:52.706537 13663 net.cpp:150] Setting up pool1
I0116 19:52:52.706550 13663 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:52:52.706559 13663 net.cpp:165] Memory required for data: 17614000
I0116 19:52:52.706568 13663 layer_factory.hpp:77] Creating layer relu1
I0116 19:52:52.706586 13663 net.cpp:100] Creating Layer relu1
I0116 19:52:52.706596 13663 net.cpp:434] relu1 <- pool1
I0116 19:52:52.706609 13663 net.cpp:395] relu1 -> pool1 (in-place)
I0116 19:52:52.706624 13663 net.cpp:150] Setting up relu1
I0116 19:52:52.706640 13663 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:52:52.706648 13663 net.cpp:165] Memory required for data: 20890800
I0116 19:52:52.706658 13663 layer_factory.hpp:77] Creating layer norm1
I0116 19:52:52.706673 13663 net.cpp:100] Creating Layer norm1
I0116 19:52:52.706683 13663 net.cpp:434] norm1 <- pool1
I0116 19:52:52.706696 13663 net.cpp:408] norm1 -> norm1
I0116 19:52:52.706745 13663 net.cpp:150] Setting up norm1
I0116 19:52:52.706758 13663 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:52:52.706768 13663 net.cpp:165] Memory required for data: 24167600
I0116 19:52:52.706776 13663 layer_factory.hpp:77] Creating layer conv2
I0116 19:52:52.706795 13663 net.cpp:100] Creating Layer conv2
I0116 19:52:52.706805 13663 net.cpp:434] conv2 <- norm1
I0116 19:52:52.706822 13663 net.cpp:408] conv2 -> conv2
I0116 19:52:52.709220 13663 net.cpp:150] Setting up conv2
I0116 19:52:52.709256 13663 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:52:52.709267 13663 net.cpp:165] Memory required for data: 27444400
I0116 19:52:52.709287 13663 layer_factory.hpp:77] Creating layer relu2
I0116 19:52:52.709305 13663 net.cpp:100] Creating Layer relu2
I0116 19:52:52.709314 13663 net.cpp:434] relu2 <- conv2
I0116 19:52:52.709334 13663 net.cpp:395] relu2 -> conv2 (in-place)
I0116 19:52:52.709350 13663 net.cpp:150] Setting up relu2
I0116 19:52:52.709362 13663 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:52:52.709372 13663 net.cpp:165] Memory required for data: 30721200
I0116 19:52:52.709381 13663 layer_factory.hpp:77] Creating layer pool2
I0116 19:52:52.709395 13663 net.cpp:100] Creating Layer pool2
I0116 19:52:52.709405 13663 net.cpp:434] pool2 <- conv2
I0116 19:52:52.709421 13663 net.cpp:408] pool2 -> pool2
I0116 19:52:52.709444 13663 net.cpp:150] Setting up pool2
I0116 19:52:52.709456 13663 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 19:52:52.709466 13663 net.cpp:165] Memory required for data: 31540400
I0116 19:52:52.709475 13663 layer_factory.hpp:77] Creating layer norm2
I0116 19:52:52.709492 13663 net.cpp:100] Creating Layer norm2
I0116 19:52:52.709502 13663 net.cpp:434] norm2 <- pool2
I0116 19:52:52.709516 13663 net.cpp:408] norm2 -> norm2
I0116 19:52:52.709559 13663 net.cpp:150] Setting up norm2
I0116 19:52:52.709573 13663 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 19:52:52.709581 13663 net.cpp:165] Memory required for data: 32359600
I0116 19:52:52.709590 13663 layer_factory.hpp:77] Creating layer conv3
I0116 19:52:52.709610 13663 net.cpp:100] Creating Layer conv3
I0116 19:52:52.709621 13663 net.cpp:434] conv3 <- norm2
I0116 19:52:52.709637 13663 net.cpp:408] conv3 -> conv3
I0116 19:52:52.714139 13663 net.cpp:150] Setting up conv3
I0116 19:52:52.714159 13663 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 19:52:52.714169 13663 net.cpp:165] Memory required for data: 33998000
I0116 19:52:52.714212 13663 layer_factory.hpp:77] Creating layer relu3
I0116 19:52:52.714226 13663 net.cpp:100] Creating Layer relu3
I0116 19:52:52.714236 13663 net.cpp:434] relu3 <- conv3
I0116 19:52:52.714262 13663 net.cpp:395] relu3 -> conv3 (in-place)
I0116 19:52:52.714277 13663 net.cpp:150] Setting up relu3
I0116 19:52:52.714288 13663 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 19:52:52.714296 13663 net.cpp:165] Memory required for data: 35636400
I0116 19:52:52.714305 13663 layer_factory.hpp:77] Creating layer pool3
I0116 19:52:52.714318 13663 net.cpp:100] Creating Layer pool3
I0116 19:52:52.714326 13663 net.cpp:434] pool3 <- conv3
I0116 19:52:52.714339 13663 net.cpp:408] pool3 -> pool3
I0116 19:52:52.714354 13663 net.cpp:150] Setting up pool3
I0116 19:52:52.714370 13663 net.cpp:157] Top shape: 100 64 4 4 (102400)
I0116 19:52:52.714380 13663 net.cpp:165] Memory required for data: 36046000
I0116 19:52:52.714387 13663 layer_factory.hpp:77] Creating layer ip1
I0116 19:52:52.714403 13663 net.cpp:100] Creating Layer ip1
I0116 19:52:52.714412 13663 net.cpp:434] ip1 <- pool3
I0116 19:52:52.714428 13663 net.cpp:408] ip1 -> ip1
I0116 19:52:52.715351 13663 net.cpp:150] Setting up ip1
I0116 19:52:52.715368 13663 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:52:52.715378 13663 net.cpp:165] Memory required for data: 36050000
I0116 19:52:52.715391 13663 layer_factory.hpp:77] Creating layer ip1_ip1_0_split
I0116 19:52:52.715404 13663 net.cpp:100] Creating Layer ip1_ip1_0_split
I0116 19:52:52.715412 13663 net.cpp:434] ip1_ip1_0_split <- ip1
I0116 19:52:52.715423 13663 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0116 19:52:52.715437 13663 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0116 19:52:52.715451 13663 net.cpp:150] Setting up ip1_ip1_0_split
I0116 19:52:52.715463 13663 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:52:52.715474 13663 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:52:52.715482 13663 net.cpp:165] Memory required for data: 36058000
I0116 19:52:52.715492 13663 layer_factory.hpp:77] Creating layer accuracy
I0116 19:52:52.715512 13663 net.cpp:100] Creating Layer accuracy
I0116 19:52:52.715523 13663 net.cpp:434] accuracy <- ip1_ip1_0_split_0
I0116 19:52:52.715533 13663 net.cpp:434] accuracy <- label_cifar_1_split_0
I0116 19:52:52.715549 13663 net.cpp:408] accuracy -> accuracy
I0116 19:52:52.715570 13663 net.cpp:150] Setting up accuracy
I0116 19:52:52.715582 13663 net.cpp:157] Top shape: (1)
I0116 19:52:52.715591 13663 net.cpp:165] Memory required for data: 36058004
I0116 19:52:52.715600 13663 layer_factory.hpp:77] Creating layer loss
I0116 19:52:52.715615 13663 net.cpp:100] Creating Layer loss
I0116 19:52:52.715626 13663 net.cpp:434] loss <- ip1_ip1_0_split_1
I0116 19:52:52.715636 13663 net.cpp:434] loss <- label_cifar_1_split_1
I0116 19:52:52.715651 13663 net.cpp:408] loss -> loss
I0116 19:52:52.715669 13663 layer_factory.hpp:77] Creating layer loss
I0116 19:52:52.715706 13663 net.cpp:150] Setting up loss
I0116 19:52:52.715719 13663 net.cpp:157] Top shape: (1)
I0116 19:52:52.715728 13663 net.cpp:160]     with loss weight 1
I0116 19:52:52.715749 13663 net.cpp:165] Memory required for data: 36058008
I0116 19:52:52.715759 13663 net.cpp:226] loss needs backward computation.
I0116 19:52:52.715770 13663 net.cpp:228] accuracy does not need backward computation.
I0116 19:52:52.715780 13663 net.cpp:226] ip1_ip1_0_split needs backward computation.
I0116 19:52:52.715790 13663 net.cpp:226] ip1 needs backward computation.
I0116 19:52:52.715798 13663 net.cpp:226] pool3 needs backward computation.
I0116 19:52:52.715807 13663 net.cpp:226] relu3 needs backward computation.
I0116 19:52:52.715816 13663 net.cpp:226] conv3 needs backward computation.
I0116 19:52:52.715826 13663 net.cpp:226] norm2 needs backward computation.
I0116 19:52:52.715836 13663 net.cpp:226] pool2 needs backward computation.
I0116 19:52:52.715844 13663 net.cpp:226] relu2 needs backward computation.
I0116 19:52:52.715853 13663 net.cpp:226] conv2 needs backward computation.
I0116 19:52:52.715862 13663 net.cpp:226] norm1 needs backward computation.
I0116 19:52:52.715891 13663 net.cpp:226] relu1 needs backward computation.
I0116 19:52:52.715901 13663 net.cpp:226] pool1 needs backward computation.
I0116 19:52:52.715910 13663 net.cpp:226] conv1 needs backward computation.
I0116 19:52:52.715920 13663 net.cpp:228] label_cifar_1_split does not need backward computation.
I0116 19:52:52.715930 13663 net.cpp:228] cifar does not need backward computation.
I0116 19:52:52.715939 13663 net.cpp:270] This network produces output accuracy
I0116 19:52:52.715948 13663 net.cpp:270] This network produces output loss
I0116 19:52:52.715978 13663 net.cpp:283] Network initialization done.
I0116 19:52:52.716079 13663 solver.cpp:60] Solver scaffolding done.
I0116 19:52:52.716132 13663 caffe.cpp:251] Starting Optimization
I0116 19:52:52.716145 13663 solver.cpp:279] Solving CIFAR10_full
I0116 19:52:52.716156 13663 solver.cpp:280] Learning Rate Policy: fixed
I0116 19:52:52.716554 13663 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #205: KMP_AFFINITY: cpuid leaf 11 not supported - decoding legacy APIC ids.
OMP: Info #149: KMP_AFFINITY: Affinity capable, using global cpuid info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #156: KMP_AFFINITY: 24 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #159: KMP_AFFINITY: 2 packages x 1 cores/pkg x 12 threads/core (2 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 thread 11 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 1 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 1 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 1 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 1 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 1 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 1 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 1 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 1 thread 11 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 0 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 2 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 1 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 4 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 5 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 3 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 7 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 6 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 8 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 10 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 9 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 11 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 13 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 14 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 12 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 16 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 15 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 17 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 19 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 18 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 20 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 22 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 23 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 13663 thread 21 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
I0116 19:53:48.035420 13663 solver.cpp:404]     Test net output #0: accuracy = 0.0994
I0116 19:53:48.035647 13663 solver.cpp:404]     Test net output #1: loss = 2.30255 (* 1 = 2.30255 loss)
I0116 19:53:49.758002 13663 solver.cpp:228] Iteration 0, loss = 2.30262
I0116 19:53:49.758124 13663 solver.cpp:244]     Train net output #0: loss = 2.30262 (* 1 = 2.30262 loss)
I0116 19:53:49.758155 13663 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0116 20:13:46.505751 13663 solver.cpp:317] Iteration 800, loss = 1.35978
I0116 20:13:46.506108 13663 solver.cpp:322] Optimization Done.
I0116 20:13:46.506119 13663 caffe.cpp:254] Optimization Done.

real	20m53.925s
user	488m52.085s
sys	9m29.814s
