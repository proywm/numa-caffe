I0116 19:17:52.311017 12400 caffe.cpp:210] Use CPU.
I0116 19:17:52.312006 12400 solver.cpp:48] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize128.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0116 19:17:52.312216 12400 solver.cpp:91] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 19:17:52.313628 12400 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0116 19:17:52.313675 12400 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 19:17:52.314362 12400 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 19:17:52.314535 12400 layer_factory.hpp:77] Creating layer cifar
I0116 19:17:52.315491 12400 net.cpp:100] Creating Layer cifar
I0116 19:17:52.315529 12400 net.cpp:408] cifar -> data
I0116 19:17:52.315629 12400 net.cpp:408] cifar -> label
I0116 19:17:52.315673 12400 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 19:17:52.315924 12401 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0116 19:17:52.316174 12400 data_layer.cpp:41] output data size: 128,3,32,32
I0116 19:17:52.323784 12400 net.cpp:150] Setting up cifar
I0116 19:17:52.323873 12400 net.cpp:157] Top shape: 128 3 32 32 (393216)
I0116 19:17:52.323889 12400 net.cpp:157] Top shape: 128 (128)
I0116 19:17:52.323899 12400 net.cpp:165] Memory required for data: 1573376
I0116 19:17:52.323923 12400 layer_factory.hpp:77] Creating layer conv1
I0116 19:17:52.323963 12400 net.cpp:100] Creating Layer conv1
I0116 19:17:52.323977 12400 net.cpp:434] conv1 <- data
I0116 19:17:52.324007 12400 net.cpp:408] conv1 -> conv1
I0116 19:17:52.324410 12400 net.cpp:150] Setting up conv1
I0116 19:17:52.324456 12400 net.cpp:157] Top shape: 128 32 32 32 (4194304)
I0116 19:17:52.324466 12400 net.cpp:165] Memory required for data: 18350592
I0116 19:17:52.324508 12400 layer_factory.hpp:77] Creating layer pool1
I0116 19:17:52.324529 12400 net.cpp:100] Creating Layer pool1
I0116 19:17:52.324539 12400 net.cpp:434] pool1 <- conv1
I0116 19:17:52.324553 12400 net.cpp:408] pool1 -> pool1
I0116 19:17:52.324605 12400 net.cpp:150] Setting up pool1
I0116 19:17:52.324620 12400 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:17:52.324628 12400 net.cpp:165] Memory required for data: 22544896
I0116 19:17:52.324638 12400 layer_factory.hpp:77] Creating layer relu1
I0116 19:17:52.324651 12400 net.cpp:100] Creating Layer relu1
I0116 19:17:52.324661 12400 net.cpp:434] relu1 <- pool1
I0116 19:17:52.324676 12400 net.cpp:395] relu1 -> pool1 (in-place)
I0116 19:17:52.324694 12400 net.cpp:150] Setting up relu1
I0116 19:17:52.324707 12400 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:17:52.324717 12400 net.cpp:165] Memory required for data: 26739200
I0116 19:17:52.324725 12400 layer_factory.hpp:77] Creating layer norm1
I0116 19:17:52.324740 12400 net.cpp:100] Creating Layer norm1
I0116 19:17:52.324750 12400 net.cpp:434] norm1 <- pool1
I0116 19:17:52.324762 12400 net.cpp:408] norm1 -> norm1
I0116 19:17:52.324851 12400 net.cpp:150] Setting up norm1
I0116 19:17:52.324865 12400 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:17:52.324877 12400 net.cpp:165] Memory required for data: 30933504
I0116 19:17:52.324885 12400 layer_factory.hpp:77] Creating layer conv2
I0116 19:17:52.324905 12400 net.cpp:100] Creating Layer conv2
I0116 19:17:52.324915 12400 net.cpp:434] conv2 <- norm1
I0116 19:17:52.324935 12400 net.cpp:408] conv2 -> conv2
I0116 19:17:52.327239 12400 net.cpp:150] Setting up conv2
I0116 19:17:52.327292 12400 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:17:52.327302 12400 net.cpp:165] Memory required for data: 35127808
I0116 19:17:52.327322 12400 layer_factory.hpp:77] Creating layer relu2
I0116 19:17:52.327334 12400 net.cpp:100] Creating Layer relu2
I0116 19:17:52.327343 12400 net.cpp:434] relu2 <- conv2
I0116 19:17:52.327360 12400 net.cpp:395] relu2 -> conv2 (in-place)
I0116 19:17:52.327376 12400 net.cpp:150] Setting up relu2
I0116 19:17:52.327389 12400 net.cpp:157] Top shape: 128 32 16 16 (1048576)
I0116 19:17:52.327397 12400 net.cpp:165] Memory required for data: 39322112
I0116 19:17:52.327406 12400 layer_factory.hpp:77] Creating layer pool2
I0116 19:17:52.327419 12400 net.cpp:100] Creating Layer pool2
I0116 19:17:52.327428 12400 net.cpp:434] pool2 <- conv2
I0116 19:17:52.327442 12400 net.cpp:408] pool2 -> pool2
I0116 19:17:52.327458 12400 net.cpp:150] Setting up pool2
I0116 19:17:52.327471 12400 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 19:17:52.327479 12400 net.cpp:165] Memory required for data: 40370688
I0116 19:17:52.327488 12400 layer_factory.hpp:77] Creating layer norm2
I0116 19:17:52.327507 12400 net.cpp:100] Creating Layer norm2
I0116 19:17:52.327517 12400 net.cpp:434] norm2 <- pool2
I0116 19:17:52.327533 12400 net.cpp:408] norm2 -> norm2
I0116 19:17:52.327579 12400 net.cpp:150] Setting up norm2
I0116 19:17:52.327592 12400 net.cpp:157] Top shape: 128 32 8 8 (262144)
I0116 19:17:52.327603 12400 net.cpp:165] Memory required for data: 41419264
I0116 19:17:52.327612 12400 layer_factory.hpp:77] Creating layer conv3
I0116 19:17:52.327646 12400 net.cpp:100] Creating Layer conv3
I0116 19:17:52.327672 12400 net.cpp:434] conv3 <- norm2
I0116 19:17:52.327687 12400 net.cpp:408] conv3 -> conv3
I0116 19:17:52.332727 12400 net.cpp:150] Setting up conv3
I0116 19:17:52.332752 12400 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 19:17:52.332762 12400 net.cpp:165] Memory required for data: 43516416
I0116 19:17:52.332787 12400 layer_factory.hpp:77] Creating layer relu3
I0116 19:17:52.332801 12400 net.cpp:100] Creating Layer relu3
I0116 19:17:52.332811 12400 net.cpp:434] relu3 <- conv3
I0116 19:17:52.332828 12400 net.cpp:395] relu3 -> conv3 (in-place)
I0116 19:17:52.332844 12400 net.cpp:150] Setting up relu3
I0116 19:17:52.332856 12400 net.cpp:157] Top shape: 128 64 8 8 (524288)
I0116 19:17:52.332864 12400 net.cpp:165] Memory required for data: 45613568
I0116 19:17:52.332875 12400 layer_factory.hpp:77] Creating layer pool3
I0116 19:17:52.332886 12400 net.cpp:100] Creating Layer pool3
I0116 19:17:52.332896 12400 net.cpp:434] pool3 <- conv3
I0116 19:17:52.332909 12400 net.cpp:408] pool3 -> pool3
I0116 19:17:52.332926 12400 net.cpp:150] Setting up pool3
I0116 19:17:52.332937 12400 net.cpp:157] Top shape: 128 64 4 4 (131072)
I0116 19:17:52.332947 12400 net.cpp:165] Memory required for data: 46137856
I0116 19:17:52.332955 12400 layer_factory.hpp:77] Creating layer ip1
I0116 19:17:52.332979 12400 net.cpp:100] Creating Layer ip1
I0116 19:17:52.332989 12400 net.cpp:434] ip1 <- pool3
I0116 19:17:52.333003 12400 net.cpp:408] ip1 -> ip1
I0116 19:17:52.333941 12400 net.cpp:150] Setting up ip1
I0116 19:17:52.333957 12400 net.cpp:157] Top shape: 128 10 (1280)
I0116 19:17:52.333966 12400 net.cpp:165] Memory required for data: 46142976
I0116 19:17:52.333981 12400 layer_factory.hpp:77] Creating layer loss
I0116 19:17:52.334002 12400 net.cpp:100] Creating Layer loss
I0116 19:17:52.334012 12400 net.cpp:434] loss <- ip1
I0116 19:17:52.334022 12400 net.cpp:434] loss <- label
I0116 19:17:52.334043 12400 net.cpp:408] loss -> loss
I0116 19:17:52.334074 12400 layer_factory.hpp:77] Creating layer loss
I0116 19:17:52.334116 12400 net.cpp:150] Setting up loss
I0116 19:17:52.334130 12400 net.cpp:157] Top shape: (1)
I0116 19:17:52.334138 12400 net.cpp:160]     with loss weight 1
I0116 19:17:52.334192 12400 net.cpp:165] Memory required for data: 46142980
I0116 19:17:52.334203 12400 net.cpp:226] loss needs backward computation.
I0116 19:17:52.334213 12400 net.cpp:226] ip1 needs backward computation.
I0116 19:17:52.334223 12400 net.cpp:226] pool3 needs backward computation.
I0116 19:17:52.334233 12400 net.cpp:226] relu3 needs backward computation.
I0116 19:17:52.334246 12400 net.cpp:226] conv3 needs backward computation.
I0116 19:17:52.334259 12400 net.cpp:226] norm2 needs backward computation.
I0116 19:17:52.334269 12400 net.cpp:226] pool2 needs backward computation.
I0116 19:17:52.334277 12400 net.cpp:226] relu2 needs backward computation.
I0116 19:17:52.334286 12400 net.cpp:226] conv2 needs backward computation.
I0116 19:17:52.334295 12400 net.cpp:226] norm1 needs backward computation.
I0116 19:17:52.334306 12400 net.cpp:226] relu1 needs backward computation.
I0116 19:17:52.334314 12400 net.cpp:226] pool1 needs backward computation.
I0116 19:17:52.334323 12400 net.cpp:226] conv1 needs backward computation.
I0116 19:17:52.334333 12400 net.cpp:228] cifar does not need backward computation.
I0116 19:17:52.334343 12400 net.cpp:270] This network produces output loss
I0116 19:17:52.334370 12400 net.cpp:283] Network initialization done.
I0116 19:17:52.335539 12400 solver.cpp:181] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 19:17:52.335604 12400 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0116 19:17:52.336189 12400 net.cpp:58] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 19:17:52.336376 12400 layer_factory.hpp:77] Creating layer cifar
I0116 19:17:52.336582 12400 net.cpp:100] Creating Layer cifar
I0116 19:17:52.336599 12400 net.cpp:408] cifar -> data
I0116 19:17:52.336619 12400 net.cpp:408] cifar -> label
I0116 19:17:52.336637 12400 data_transformer.cpp:25] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 19:17:52.336856 12404 db_lmdb.cpp:35] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0116 19:17:52.336994 12400 data_layer.cpp:41] output data size: 100,3,32,32
I0116 19:17:52.341809 12400 net.cpp:150] Setting up cifar
I0116 19:17:52.341847 12400 net.cpp:157] Top shape: 100 3 32 32 (307200)
I0116 19:17:52.341859 12400 net.cpp:157] Top shape: 100 (100)
I0116 19:17:52.341869 12400 net.cpp:165] Memory required for data: 1229200
I0116 19:17:52.341882 12400 layer_factory.hpp:77] Creating layer label_cifar_1_split
I0116 19:17:52.341918 12400 net.cpp:100] Creating Layer label_cifar_1_split
I0116 19:17:52.341931 12400 net.cpp:434] label_cifar_1_split <- label
I0116 19:17:52.341948 12400 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_0
I0116 19:17:52.341966 12400 net.cpp:408] label_cifar_1_split -> label_cifar_1_split_1
I0116 19:17:52.341984 12400 net.cpp:150] Setting up label_cifar_1_split
I0116 19:17:52.341996 12400 net.cpp:157] Top shape: 100 (100)
I0116 19:17:52.342007 12400 net.cpp:157] Top shape: 100 (100)
I0116 19:17:52.342015 12400 net.cpp:165] Memory required for data: 1230000
I0116 19:17:52.342056 12400 layer_factory.hpp:77] Creating layer conv1
I0116 19:17:52.342078 12400 net.cpp:100] Creating Layer conv1
I0116 19:17:52.342088 12400 net.cpp:434] conv1 <- data
I0116 19:17:52.342116 12400 net.cpp:408] conv1 -> conv1
I0116 19:17:52.342388 12400 net.cpp:150] Setting up conv1
I0116 19:17:52.342406 12400 net.cpp:157] Top shape: 100 32 32 32 (3276800)
I0116 19:17:52.342414 12400 net.cpp:165] Memory required for data: 14337200
I0116 19:17:52.342434 12400 layer_factory.hpp:77] Creating layer pool1
I0116 19:17:52.342449 12400 net.cpp:100] Creating Layer pool1
I0116 19:17:52.342458 12400 net.cpp:434] pool1 <- conv1
I0116 19:17:52.342474 12400 net.cpp:408] pool1 -> pool1
I0116 19:17:52.342495 12400 net.cpp:150] Setting up pool1
I0116 19:17:52.342509 12400 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:17:52.342516 12400 net.cpp:165] Memory required for data: 17614000
I0116 19:17:52.342527 12400 layer_factory.hpp:77] Creating layer relu1
I0116 19:17:52.342541 12400 net.cpp:100] Creating Layer relu1
I0116 19:17:52.342550 12400 net.cpp:434] relu1 <- pool1
I0116 19:17:52.342562 12400 net.cpp:395] relu1 -> pool1 (in-place)
I0116 19:17:52.342576 12400 net.cpp:150] Setting up relu1
I0116 19:17:52.342587 12400 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:17:52.342597 12400 net.cpp:165] Memory required for data: 20890800
I0116 19:17:52.342605 12400 layer_factory.hpp:77] Creating layer norm1
I0116 19:17:52.342620 12400 net.cpp:100] Creating Layer norm1
I0116 19:17:52.342629 12400 net.cpp:434] norm1 <- pool1
I0116 19:17:52.342646 12400 net.cpp:408] norm1 -> norm1
I0116 19:17:52.342692 12400 net.cpp:150] Setting up norm1
I0116 19:17:52.342705 12400 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:17:52.342715 12400 net.cpp:165] Memory required for data: 24167600
I0116 19:17:52.342723 12400 layer_factory.hpp:77] Creating layer conv2
I0116 19:17:52.342744 12400 net.cpp:100] Creating Layer conv2
I0116 19:17:52.342756 12400 net.cpp:434] conv2 <- norm1
I0116 19:17:52.342769 12400 net.cpp:408] conv2 -> conv2
I0116 19:17:52.345145 12400 net.cpp:150] Setting up conv2
I0116 19:17:52.345166 12400 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:17:52.345175 12400 net.cpp:165] Memory required for data: 27444400
I0116 19:17:52.345192 12400 layer_factory.hpp:77] Creating layer relu2
I0116 19:17:52.345206 12400 net.cpp:100] Creating Layer relu2
I0116 19:17:52.345214 12400 net.cpp:434] relu2 <- conv2
I0116 19:17:52.345227 12400 net.cpp:395] relu2 -> conv2 (in-place)
I0116 19:17:52.345239 12400 net.cpp:150] Setting up relu2
I0116 19:17:52.345258 12400 net.cpp:157] Top shape: 100 32 16 16 (819200)
I0116 19:17:52.345268 12400 net.cpp:165] Memory required for data: 30721200
I0116 19:17:52.345278 12400 layer_factory.hpp:77] Creating layer pool2
I0116 19:17:52.345294 12400 net.cpp:100] Creating Layer pool2
I0116 19:17:52.345304 12400 net.cpp:434] pool2 <- conv2
I0116 19:17:52.345325 12400 net.cpp:408] pool2 -> pool2
I0116 19:17:52.345343 12400 net.cpp:150] Setting up pool2
I0116 19:17:52.345356 12400 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 19:17:52.345366 12400 net.cpp:165] Memory required for data: 31540400
I0116 19:17:52.345374 12400 layer_factory.hpp:77] Creating layer norm2
I0116 19:17:52.345387 12400 net.cpp:100] Creating Layer norm2
I0116 19:17:52.345396 12400 net.cpp:434] norm2 <- pool2
I0116 19:17:52.345422 12400 net.cpp:408] norm2 -> norm2
I0116 19:17:52.345469 12400 net.cpp:150] Setting up norm2
I0116 19:17:52.345484 12400 net.cpp:157] Top shape: 100 32 8 8 (204800)
I0116 19:17:52.345491 12400 net.cpp:165] Memory required for data: 32359600
I0116 19:17:52.345500 12400 layer_factory.hpp:77] Creating layer conv3
I0116 19:17:52.345522 12400 net.cpp:100] Creating Layer conv3
I0116 19:17:52.345532 12400 net.cpp:434] conv3 <- norm2
I0116 19:17:52.345546 12400 net.cpp:408] conv3 -> conv3
I0116 19:17:52.350431 12400 net.cpp:150] Setting up conv3
I0116 19:17:52.350452 12400 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 19:17:52.350461 12400 net.cpp:165] Memory required for data: 33998000
I0116 19:17:52.350505 12400 layer_factory.hpp:77] Creating layer relu3
I0116 19:17:52.350519 12400 net.cpp:100] Creating Layer relu3
I0116 19:17:52.350529 12400 net.cpp:434] relu3 <- conv3
I0116 19:17:52.350548 12400 net.cpp:395] relu3 -> conv3 (in-place)
I0116 19:17:52.350564 12400 net.cpp:150] Setting up relu3
I0116 19:17:52.350575 12400 net.cpp:157] Top shape: 100 64 8 8 (409600)
I0116 19:17:52.350584 12400 net.cpp:165] Memory required for data: 35636400
I0116 19:17:52.350594 12400 layer_factory.hpp:77] Creating layer pool3
I0116 19:17:52.350605 12400 net.cpp:100] Creating Layer pool3
I0116 19:17:52.350615 12400 net.cpp:434] pool3 <- conv3
I0116 19:17:52.350626 12400 net.cpp:408] pool3 -> pool3
I0116 19:17:52.350642 12400 net.cpp:150] Setting up pool3
I0116 19:17:52.350654 12400 net.cpp:157] Top shape: 100 64 4 4 (102400)
I0116 19:17:52.350662 12400 net.cpp:165] Memory required for data: 36046000
I0116 19:17:52.350672 12400 layer_factory.hpp:77] Creating layer ip1
I0116 19:17:52.350689 12400 net.cpp:100] Creating Layer ip1
I0116 19:17:52.350699 12400 net.cpp:434] ip1 <- pool3
I0116 19:17:52.350715 12400 net.cpp:408] ip1 -> ip1
I0116 19:17:52.351630 12400 net.cpp:150] Setting up ip1
I0116 19:17:52.351645 12400 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:17:52.351655 12400 net.cpp:165] Memory required for data: 36050000
I0116 19:17:52.351667 12400 layer_factory.hpp:77] Creating layer ip1_ip1_0_split
I0116 19:17:52.351683 12400 net.cpp:100] Creating Layer ip1_ip1_0_split
I0116 19:17:52.351693 12400 net.cpp:434] ip1_ip1_0_split <- ip1
I0116 19:17:52.351704 12400 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0116 19:17:52.351718 12400 net.cpp:408] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0116 19:17:52.351733 12400 net.cpp:150] Setting up ip1_ip1_0_split
I0116 19:17:52.351745 12400 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:17:52.351755 12400 net.cpp:157] Top shape: 100 10 (1000)
I0116 19:17:52.351764 12400 net.cpp:165] Memory required for data: 36058000
I0116 19:17:52.351773 12400 layer_factory.hpp:77] Creating layer accuracy
I0116 19:17:52.351794 12400 net.cpp:100] Creating Layer accuracy
I0116 19:17:52.351804 12400 net.cpp:434] accuracy <- ip1_ip1_0_split_0
I0116 19:17:52.351814 12400 net.cpp:434] accuracy <- label_cifar_1_split_0
I0116 19:17:52.351830 12400 net.cpp:408] accuracy -> accuracy
I0116 19:17:52.351850 12400 net.cpp:150] Setting up accuracy
I0116 19:17:52.351862 12400 net.cpp:157] Top shape: (1)
I0116 19:17:52.351871 12400 net.cpp:165] Memory required for data: 36058004
I0116 19:17:52.351879 12400 layer_factory.hpp:77] Creating layer loss
I0116 19:17:52.351896 12400 net.cpp:100] Creating Layer loss
I0116 19:17:52.351904 12400 net.cpp:434] loss <- ip1_ip1_0_split_1
I0116 19:17:52.351914 12400 net.cpp:434] loss <- label_cifar_1_split_1
I0116 19:17:52.351929 12400 net.cpp:408] loss -> loss
I0116 19:17:52.351948 12400 layer_factory.hpp:77] Creating layer loss
I0116 19:17:52.351981 12400 net.cpp:150] Setting up loss
I0116 19:17:52.351994 12400 net.cpp:157] Top shape: (1)
I0116 19:17:52.352002 12400 net.cpp:160]     with loss weight 1
I0116 19:17:52.352030 12400 net.cpp:165] Memory required for data: 36058008
I0116 19:17:52.352039 12400 net.cpp:226] loss needs backward computation.
I0116 19:17:52.352049 12400 net.cpp:228] accuracy does not need backward computation.
I0116 19:17:52.352058 12400 net.cpp:226] ip1_ip1_0_split needs backward computation.
I0116 19:17:52.352067 12400 net.cpp:226] ip1 needs backward computation.
I0116 19:17:52.352077 12400 net.cpp:226] pool3 needs backward computation.
I0116 19:17:52.352084 12400 net.cpp:226] relu3 needs backward computation.
I0116 19:17:52.352093 12400 net.cpp:226] conv3 needs backward computation.
I0116 19:17:52.352102 12400 net.cpp:226] norm2 needs backward computation.
I0116 19:17:52.352111 12400 net.cpp:226] pool2 needs backward computation.
I0116 19:17:52.352120 12400 net.cpp:226] relu2 needs backward computation.
I0116 19:17:52.352128 12400 net.cpp:226] conv2 needs backward computation.
I0116 19:17:52.352138 12400 net.cpp:226] norm1 needs backward computation.
I0116 19:17:52.352165 12400 net.cpp:226] relu1 needs backward computation.
I0116 19:17:52.352174 12400 net.cpp:226] pool1 needs backward computation.
I0116 19:17:52.352183 12400 net.cpp:226] conv1 needs backward computation.
I0116 19:17:52.352193 12400 net.cpp:228] label_cifar_1_split does not need backward computation.
I0116 19:17:52.352203 12400 net.cpp:228] cifar does not need backward computation.
I0116 19:17:52.352211 12400 net.cpp:270] This network produces output accuracy
I0116 19:17:52.352221 12400 net.cpp:270] This network produces output loss
I0116 19:17:52.352254 12400 net.cpp:283] Network initialization done.
I0116 19:17:52.352363 12400 solver.cpp:60] Solver scaffolding done.
I0116 19:17:52.352416 12400 caffe.cpp:251] Starting Optimization
I0116 19:17:52.352430 12400 solver.cpp:279] Solving CIFAR10_full
I0116 19:17:52.352439 12400 solver.cpp:280] Learning Rate Policy: fixed
I0116 19:17:52.352769 12400 solver.cpp:337] Iteration 0, Testing net (#0)
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #205: KMP_AFFINITY: cpuid leaf 11 not supported - decoding legacy APIC ids.
OMP: Info #149: KMP_AFFINITY: Affinity capable, using global cpuid info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5}
OMP: Info #156: KMP_AFFINITY: 6 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #159: KMP_AFFINITY: 1 packages x 1 cores/pkg x 6 threads/core (1 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 thread 5 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 12400 thread 0 bound to OS proc set {0,1,2,3,4,5}
OMP: Info #242: KMP_AFFINITY: pid 12400 thread 2 bound to OS proc set {0,1,2,3,4,5}
OMP: Info #242: KMP_AFFINITY: pid 12400 thread 1 bound to OS proc set {0,1,2,3,4,5}
OMP: Info #242: KMP_AFFINITY: pid 12400 thread 4 bound to OS proc set {0,1,2,3,4,5}
OMP: Info #242: KMP_AFFINITY: pid 12400 thread 5 bound to OS proc set {0,1,2,3,4,5}
OMP: Info #242: KMP_AFFINITY: pid 12400 thread 3 bound to OS proc set {0,1,2,3,4,5}
I0116 19:18:33.153434 12400 solver.cpp:404]     Test net output #0: accuracy = 0.0839
I0116 19:18:33.153808 12400 solver.cpp:404]     Test net output #1: loss = 2.30258 (* 1 = 2.30258 loss)
I0116 19:18:34.435947 12400 solver.cpp:228] Iteration 0, loss = 2.30265
I0116 19:18:34.436064 12400 solver.cpp:244]     Train net output #0: loss = 2.30265 (* 1 = 2.30265 loss)
I0116 19:18:34.436094 12400 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0116 19:34:54.763229 12400 solver.cpp:317] Iteration 800, loss = 1.3765
I0116 19:34:54.763586 12400 solver.cpp:322] Optimization Done.
I0116 19:34:54.763597 12400 caffe.cpp:254] Optimization Done.

real	17m2.538s
user	100m28.925s
sys	1m43.840s
