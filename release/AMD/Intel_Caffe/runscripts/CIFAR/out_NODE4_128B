I0116 23:03:05.689673 29684 caffe.cpp:259] Use CPU.
I0116 23:03:05.690481 29684 solver.cpp:90] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize128.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0116 23:03:05.690618 29684 solver.cpp:135] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 23:03:05.693459 29684 cpu_info.cpp:452] Processor speed [MHz]: 0
I0116 23:03:05.693481 29684 cpu_info.cpp:455] Total number of sockets: 4
I0116 23:03:05.693490 29684 cpu_info.cpp:458] Total number of CPU cores: 48
I0116 23:03:05.693498 29684 cpu_info.cpp:461] Total number of processors: 48
I0116 23:03:05.693506 29684 cpu_info.cpp:464] GPU is used: no
I0116 23:03:05.693512 29684 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0116 23:03:05.693519 29684 cpu_info.cpp:470] OpenMP thread bind allowed: no
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #205: KMP_AFFINITY: cpuid leaf 11 not supported - decoding legacy APIC ids.
OMP: Info #149: KMP_AFFINITY: Affinity capable, using global cpuid info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #156: KMP_AFFINITY: 24 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #159: KMP_AFFINITY: 2 packages x 1 cores/pkg x 12 threads/core (2 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 thread 11 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 1 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 1 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 1 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 1 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 1 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 1 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 1 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 1 thread 11 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 0 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
I0116 23:03:05.698768 29684 cpu_info.cpp:473] Number of OpenMP threads: 24
I0116 23:03:05.698961 29684 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0116 23:03:05.698989 29684 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 23:03:05.699841 29684 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 23:03:05.699923 29684 layer_factory.hpp:114] Creating layer cifar
I0116 23:03:05.700812 29684 net.cpp:160] Creating Layer cifar
I0116 23:03:05.700839 29684 net.cpp:570] cifar -> data
I0116 23:03:05.701030 29684 net.cpp:570] cifar -> label
I0116 23:03:05.701074 29684 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 23:03:05.701167 29685 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0116 23:03:05.718477 29684 data_layer.cpp:80] output data size: 128,3,32,32
I0116 23:03:05.722751 29684 net.cpp:210] Setting up cifar
I0116 23:03:05.722805 29684 net.cpp:217] Top shape: 128 3 32 32 (393216)
I0116 23:03:05.722818 29684 net.cpp:217] Top shape: 128 (128)
I0116 23:03:05.722827 29684 net.cpp:225] Memory required for data: 1573376
I0116 23:03:05.722841 29684 layer_factory.hpp:114] Creating layer conv1
I0116 23:03:05.722885 29684 net.cpp:160] Creating Layer conv1
I0116 23:03:05.722899 29684 net.cpp:596] conv1 <- data
I0116 23:03:05.722918 29684 net.cpp:570] conv1 -> conv1
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 2 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 1 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 3 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 4 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 5 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 6 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 7 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 8 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 9 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 10 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 11 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 13 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 12 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 14 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 15 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 16 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 17 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 18 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 20 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 19 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 21 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 22 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29684 thread 23 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
I0116 23:03:05.744666 29684 net.cpp:210] Setting up conv1
I0116 23:03:05.744738 29684 net.cpp:217] Top shape: 128 32 32 32 (4194304)
I0116 23:03:05.744748 29684 net.cpp:225] Memory required for data: 18350592
I0116 23:03:05.744794 29684 layer_factory.hpp:114] Creating layer pool1
I0116 23:03:05.744904 29684 net.cpp:160] Creating Layer pool1
I0116 23:03:05.744917 29684 net.cpp:596] pool1 <- conv1
I0116 23:03:05.744937 29684 net.cpp:570] pool1 -> pool1
I0116 23:03:05.744977 29684 net.cpp:210] Setting up pool1
I0116 23:03:05.744989 29684 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:03:05.744998 29684 net.cpp:225] Memory required for data: 22544896
I0116 23:03:05.745007 29684 layer_factory.hpp:114] Creating layer relu1
I0116 23:03:05.745019 29684 net.cpp:160] Creating Layer relu1
I0116 23:03:05.745028 29684 net.cpp:596] relu1 <- pool1
I0116 23:03:05.745039 29684 net.cpp:557] relu1 -> pool1 (in-place)
I0116 23:03:05.745055 29684 net.cpp:210] Setting up relu1
I0116 23:03:05.745066 29684 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:03:05.745074 29684 net.cpp:225] Memory required for data: 26739200
I0116 23:03:05.745084 29684 layer_factory.hpp:114] Creating layer norm1
I0116 23:03:05.745102 29684 net.cpp:160] Creating Layer norm1
I0116 23:03:05.745111 29684 net.cpp:596] norm1 <- pool1
I0116 23:03:05.745123 29684 net.cpp:570] norm1 -> norm1
I0116 23:03:05.745208 29684 net.cpp:210] Setting up norm1
I0116 23:03:05.745223 29684 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:03:05.745230 29684 net.cpp:225] Memory required for data: 30933504
I0116 23:03:05.745239 29684 layer_factory.hpp:114] Creating layer conv2
I0116 23:03:05.745283 29684 net.cpp:160] Creating Layer conv2
I0116 23:03:05.745296 29684 net.cpp:596] conv2 <- norm1
I0116 23:03:05.745309 29684 net.cpp:570] conv2 -> conv2
I0116 23:03:05.764367 29684 net.cpp:210] Setting up conv2
I0116 23:03:05.764408 29684 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:03:05.764417 29684 net.cpp:225] Memory required for data: 35127808
I0116 23:03:05.764441 29684 layer_factory.hpp:114] Creating layer relu2
I0116 23:03:05.764479 29684 net.cpp:160] Creating Layer relu2
I0116 23:03:05.764490 29684 net.cpp:596] relu2 <- conv2
I0116 23:03:05.764508 29684 net.cpp:557] relu2 -> conv2 (in-place)
I0116 23:03:05.764524 29684 net.cpp:210] Setting up relu2
I0116 23:03:05.764535 29684 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:03:05.764544 29684 net.cpp:225] Memory required for data: 39322112
I0116 23:03:05.764551 29684 layer_factory.hpp:114] Creating layer pool2
I0116 23:03:05.764596 29684 net.cpp:160] Creating Layer pool2
I0116 23:03:05.764606 29684 net.cpp:596] pool2 <- conv2
I0116 23:03:05.764619 29684 net.cpp:570] pool2 -> pool2
I0116 23:03:05.764636 29684 net.cpp:210] Setting up pool2
I0116 23:03:05.764648 29684 net.cpp:217] Top shape: 128 32 8 8 (262144)
I0116 23:03:05.764674 29684 net.cpp:225] Memory required for data: 40370688
I0116 23:03:05.764683 29684 layer_factory.hpp:114] Creating layer norm2
I0116 23:03:05.764703 29684 net.cpp:160] Creating Layer norm2
I0116 23:03:05.764713 29684 net.cpp:596] norm2 <- pool2
I0116 23:03:05.764724 29684 net.cpp:570] norm2 -> norm2
I0116 23:03:05.764787 29684 net.cpp:210] Setting up norm2
I0116 23:03:05.764801 29684 net.cpp:217] Top shape: 128 32 8 8 (262144)
I0116 23:03:05.764809 29684 net.cpp:225] Memory required for data: 41419264
I0116 23:03:05.764818 29684 layer_factory.hpp:114] Creating layer conv3
I0116 23:03:05.764837 29684 net.cpp:160] Creating Layer conv3
I0116 23:03:05.764847 29684 net.cpp:596] conv3 <- norm2
I0116 23:03:05.764861 29684 net.cpp:570] conv3 -> conv3
I0116 23:03:05.777781 29684 net.cpp:210] Setting up conv3
I0116 23:03:05.777825 29684 net.cpp:217] Top shape: 128 64 8 8 (524288)
I0116 23:03:05.777834 29684 net.cpp:225] Memory required for data: 43516416
I0116 23:03:05.777858 29684 layer_factory.hpp:114] Creating layer relu3
I0116 23:03:05.777875 29684 net.cpp:160] Creating Layer relu3
I0116 23:03:05.777886 29684 net.cpp:596] relu3 <- conv3
I0116 23:03:05.777900 29684 net.cpp:557] relu3 -> conv3 (in-place)
I0116 23:03:05.777916 29684 net.cpp:210] Setting up relu3
I0116 23:03:05.777927 29684 net.cpp:217] Top shape: 128 64 8 8 (524288)
I0116 23:03:05.777936 29684 net.cpp:225] Memory required for data: 45613568
I0116 23:03:05.777945 29684 layer_factory.hpp:114] Creating layer pool3
I0116 23:03:05.777984 29684 net.cpp:160] Creating Layer pool3
I0116 23:03:05.777994 29684 net.cpp:596] pool3 <- conv3
I0116 23:03:05.778007 29684 net.cpp:570] pool3 -> pool3
I0116 23:03:05.778024 29684 net.cpp:210] Setting up pool3
I0116 23:03:05.778036 29684 net.cpp:217] Top shape: 128 64 4 4 (131072)
I0116 23:03:05.778044 29684 net.cpp:225] Memory required for data: 46137856
I0116 23:03:05.778053 29684 layer_factory.hpp:114] Creating layer ip1
I0116 23:03:05.778075 29684 net.cpp:160] Creating Layer ip1
I0116 23:03:05.778085 29684 net.cpp:596] ip1 <- pool3
I0116 23:03:05.778097 29684 net.cpp:570] ip1 -> ip1
I0116 23:03:05.779140 29684 net.cpp:210] Setting up ip1
I0116 23:03:05.779155 29684 net.cpp:217] Top shape: 128 10 (1280)
I0116 23:03:05.779163 29684 net.cpp:225] Memory required for data: 46142976
I0116 23:03:05.779177 29684 layer_factory.hpp:114] Creating layer loss
I0116 23:03:05.779196 29684 net.cpp:160] Creating Layer loss
I0116 23:03:05.779206 29684 net.cpp:596] loss <- ip1
I0116 23:03:05.779216 29684 net.cpp:596] loss <- label
I0116 23:03:05.779227 29684 net.cpp:570] loss -> loss
I0116 23:03:05.779253 29684 layer_factory.hpp:114] Creating layer loss
I0116 23:03:05.779783 29684 net.cpp:210] Setting up loss
I0116 23:03:05.779796 29684 net.cpp:217] Top shape: (1)
I0116 23:03:05.779805 29684 net.cpp:220]     with loss weight 1
I0116 23:03:05.779870 29684 net.cpp:225] Memory required for data: 46142980
I0116 23:03:05.779881 29684 net.cpp:287] loss needs backward computation.
I0116 23:03:05.779889 29684 net.cpp:287] ip1 needs backward computation.
I0116 23:03:05.779898 29684 net.cpp:287] pool3 needs backward computation.
I0116 23:03:05.779906 29684 net.cpp:287] relu3 needs backward computation.
I0116 23:03:05.779916 29684 net.cpp:287] conv3 needs backward computation.
I0116 23:03:05.779924 29684 net.cpp:287] norm2 needs backward computation.
I0116 23:03:05.779947 29684 net.cpp:287] pool2 needs backward computation.
I0116 23:03:05.779955 29684 net.cpp:287] relu2 needs backward computation.
I0116 23:03:05.779964 29684 net.cpp:287] conv2 needs backward computation.
I0116 23:03:05.779973 29684 net.cpp:287] norm1 needs backward computation.
I0116 23:03:05.779983 29684 net.cpp:287] relu1 needs backward computation.
I0116 23:03:05.779991 29684 net.cpp:287] pool1 needs backward computation.
I0116 23:03:05.780000 29684 net.cpp:287] conv1 needs backward computation.
I0116 23:03:05.780010 29684 net.cpp:289] cifar does not need backward computation.
I0116 23:03:05.780019 29684 net.cpp:331] This network produces output loss
I0116 23:03:05.780042 29684 net.cpp:345] Network initialization done.
I0116 23:03:05.781275 29684 solver.cpp:225] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 23:03:05.781299 29684 cpu_info.cpp:452] Processor speed [MHz]: 0
I0116 23:03:05.781308 29684 cpu_info.cpp:455] Total number of sockets: 4
I0116 23:03:05.781317 29684 cpu_info.cpp:458] Total number of CPU cores: 48
I0116 23:03:05.781324 29684 cpu_info.cpp:461] Total number of processors: 48
I0116 23:03:05.781332 29684 cpu_info.cpp:464] GPU is used: no
I0116 23:03:05.781342 29684 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0116 23:03:05.781349 29684 cpu_info.cpp:470] OpenMP thread bind allowed: no
I0116 23:03:05.781358 29684 cpu_info.cpp:473] Number of OpenMP threads: 24
I0116 23:03:05.781414 29684 net.cpp:484] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0116 23:03:05.782238 29684 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "label_cifar_1_split"
  type: "Split"
  bottom: "label"
  top: "label_cifar_1_split_0"
  top: "label_cifar_1_split_1"
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip1_ip1_0_split"
  type: "Split"
  bottom: "ip1"
  top: "ip1_ip1_0_split_0"
  top: "ip1_ip1_0_split_1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1_ip1_0_split_0"
  bottom: "label_cifar_1_split_0"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1_ip1_0_split_1"
  bottom: "label_cifar_1_split_1"
  top: "loss"
}
I0116 23:03:05.782315 29684 layer_factory.hpp:114] Creating layer cifar
I0116 23:03:05.783215 29684 net.cpp:160] Creating Layer cifar
I0116 23:03:05.783429 29684 net.cpp:570] cifar -> data
I0116 23:03:05.783455 29684 net.cpp:570] cifar -> label
I0116 23:03:05.783474 29684 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 23:03:05.783577 29709 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0116 23:03:05.783685 29684 data_layer.cpp:80] output data size: 100,3,32,32
I0116 23:03:05.788882 29684 net.cpp:210] Setting up cifar
I0116 23:03:05.788923 29684 net.cpp:217] Top shape: 100 3 32 32 (307200)
I0116 23:03:05.788936 29684 net.cpp:217] Top shape: 100 (100)
I0116 23:03:05.788944 29684 net.cpp:225] Memory required for data: 1229200
I0116 23:03:05.788956 29684 layer_factory.hpp:114] Creating layer label_cifar_1_split
I0116 23:03:05.788976 29684 net.cpp:160] Creating Layer label_cifar_1_split
I0116 23:03:05.788988 29684 net.cpp:596] label_cifar_1_split <- label
I0116 23:03:05.789002 29684 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_0
I0116 23:03:05.789019 29684 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_1
I0116 23:03:05.789036 29684 net.cpp:210] Setting up label_cifar_1_split
I0116 23:03:05.789048 29684 net.cpp:217] Top shape: 100 (100)
I0116 23:03:05.789059 29684 net.cpp:217] Top shape: 100 (100)
I0116 23:03:05.789067 29684 net.cpp:225] Memory required for data: 1230000
I0116 23:03:05.789077 29684 layer_factory.hpp:114] Creating layer conv1
I0116 23:03:05.789098 29684 net.cpp:160] Creating Layer conv1
I0116 23:03:05.789108 29684 net.cpp:596] conv1 <- data
I0116 23:03:05.789120 29684 net.cpp:570] conv1 -> conv1
I0116 23:03:05.795882 29684 net.cpp:210] Setting up conv1
I0116 23:03:05.795923 29684 net.cpp:217] Top shape: 100 32 32 32 (3276800)
I0116 23:03:05.795933 29684 net.cpp:225] Memory required for data: 14337200
I0116 23:03:05.795960 29684 layer_factory.hpp:114] Creating layer pool1
I0116 23:03:05.796015 29684 net.cpp:160] Creating Layer pool1
I0116 23:03:05.796026 29684 net.cpp:596] pool1 <- conv1
I0116 23:03:05.796043 29684 net.cpp:570] pool1 -> pool1
I0116 23:03:05.796068 29684 net.cpp:210] Setting up pool1
I0116 23:03:05.796080 29684 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:03:05.796088 29684 net.cpp:225] Memory required for data: 17614000
I0116 23:03:05.796097 29684 layer_factory.hpp:114] Creating layer relu1
I0116 23:03:05.796110 29684 net.cpp:160] Creating Layer relu1
I0116 23:03:05.796123 29684 net.cpp:596] relu1 <- pool1
I0116 23:03:05.796133 29684 net.cpp:557] relu1 -> pool1 (in-place)
I0116 23:03:05.796146 29684 net.cpp:210] Setting up relu1
I0116 23:03:05.796157 29684 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:03:05.796165 29684 net.cpp:225] Memory required for data: 20890800
I0116 23:03:05.796174 29684 layer_factory.hpp:114] Creating layer norm1
I0116 23:03:05.796188 29684 net.cpp:160] Creating Layer norm1
I0116 23:03:05.796196 29684 net.cpp:596] norm1 <- pool1
I0116 23:03:05.796211 29684 net.cpp:570] norm1 -> norm1
I0116 23:03:05.796283 29684 net.cpp:210] Setting up norm1
I0116 23:03:05.796298 29684 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:03:05.796309 29684 net.cpp:225] Memory required for data: 24167600
I0116 23:03:05.796339 29684 layer_factory.hpp:114] Creating layer conv2
I0116 23:03:05.796357 29684 net.cpp:160] Creating Layer conv2
I0116 23:03:05.796366 29684 net.cpp:596] conv2 <- norm1
I0116 23:03:05.796382 29684 net.cpp:570] conv2 -> conv2
I0116 23:03:05.818927 29684 net.cpp:210] Setting up conv2
I0116 23:03:05.818972 29684 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:03:05.818981 29684 net.cpp:225] Memory required for data: 27444400
I0116 23:03:05.819005 29684 layer_factory.hpp:114] Creating layer relu2
I0116 23:03:05.819026 29684 net.cpp:160] Creating Layer relu2
I0116 23:03:05.819037 29684 net.cpp:596] relu2 <- conv2
I0116 23:03:05.819051 29684 net.cpp:557] relu2 -> conv2 (in-place)
I0116 23:03:05.819093 29684 net.cpp:210] Setting up relu2
I0116 23:03:05.819105 29684 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:03:05.819113 29684 net.cpp:225] Memory required for data: 30721200
I0116 23:03:05.819121 29684 layer_factory.hpp:114] Creating layer pool2
I0116 23:03:05.819166 29684 net.cpp:160] Creating Layer pool2
I0116 23:03:05.819176 29684 net.cpp:596] pool2 <- conv2
I0116 23:03:05.819188 29684 net.cpp:570] pool2 -> pool2
I0116 23:03:05.819206 29684 net.cpp:210] Setting up pool2
I0116 23:03:05.819218 29684 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0116 23:03:05.819227 29684 net.cpp:225] Memory required for data: 31540400
I0116 23:03:05.819236 29684 layer_factory.hpp:114] Creating layer norm2
I0116 23:03:05.819260 29684 net.cpp:160] Creating Layer norm2
I0116 23:03:05.819272 29684 net.cpp:596] norm2 <- pool2
I0116 23:03:05.819283 29684 net.cpp:570] norm2 -> norm2
I0116 23:03:05.819351 29684 net.cpp:210] Setting up norm2
I0116 23:03:05.819365 29684 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0116 23:03:05.819373 29684 net.cpp:225] Memory required for data: 32359600
I0116 23:03:05.819381 29684 layer_factory.hpp:114] Creating layer conv3
I0116 23:03:05.819403 29684 net.cpp:160] Creating Layer conv3
I0116 23:03:05.819413 29684 net.cpp:596] conv3 <- norm2
I0116 23:03:05.819425 29684 net.cpp:570] conv3 -> conv3
I0116 23:03:05.833104 29684 net.cpp:210] Setting up conv3
I0116 23:03:05.833137 29684 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0116 23:03:05.833147 29684 net.cpp:225] Memory required for data: 33998000
I0116 23:03:05.833166 29684 layer_factory.hpp:114] Creating layer relu3
I0116 23:03:05.833181 29684 net.cpp:160] Creating Layer relu3
I0116 23:03:05.833191 29684 net.cpp:596] relu3 <- conv3
I0116 23:03:05.833206 29684 net.cpp:557] relu3 -> conv3 (in-place)
I0116 23:03:05.833222 29684 net.cpp:210] Setting up relu3
I0116 23:03:05.833233 29684 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0116 23:03:05.833246 29684 net.cpp:225] Memory required for data: 35636400
I0116 23:03:05.833257 29684 layer_factory.hpp:114] Creating layer pool3
I0116 23:03:05.833289 29684 net.cpp:160] Creating Layer pool3
I0116 23:03:05.833299 29684 net.cpp:596] pool3 <- conv3
I0116 23:03:05.833315 29684 net.cpp:570] pool3 -> pool3
I0116 23:03:05.833331 29684 net.cpp:210] Setting up pool3
I0116 23:03:05.833343 29684 net.cpp:217] Top shape: 100 64 4 4 (102400)
I0116 23:03:05.833351 29684 net.cpp:225] Memory required for data: 36046000
I0116 23:03:05.833359 29684 layer_factory.hpp:114] Creating layer ip1
I0116 23:03:05.833379 29684 net.cpp:160] Creating Layer ip1
I0116 23:03:05.833389 29684 net.cpp:596] ip1 <- pool3
I0116 23:03:05.833400 29684 net.cpp:570] ip1 -> ip1
I0116 23:03:05.834401 29684 net.cpp:210] Setting up ip1
I0116 23:03:05.834416 29684 net.cpp:217] Top shape: 100 10 (1000)
I0116 23:03:05.834424 29684 net.cpp:225] Memory required for data: 36050000
I0116 23:03:05.834437 29684 layer_factory.hpp:114] Creating layer ip1_ip1_0_split
I0116 23:03:05.834453 29684 net.cpp:160] Creating Layer ip1_ip1_0_split
I0116 23:03:05.834462 29684 net.cpp:596] ip1_ip1_0_split <- ip1
I0116 23:03:05.834473 29684 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0116 23:03:05.834487 29684 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0116 23:03:05.834501 29684 net.cpp:210] Setting up ip1_ip1_0_split
I0116 23:03:05.834523 29684 net.cpp:217] Top shape: 100 10 (1000)
I0116 23:03:05.834535 29684 net.cpp:217] Top shape: 100 10 (1000)
I0116 23:03:05.834543 29684 net.cpp:225] Memory required for data: 36058000
I0116 23:03:05.834552 29684 layer_factory.hpp:114] Creating layer accuracy
I0116 23:03:05.834574 29684 net.cpp:160] Creating Layer accuracy
I0116 23:03:05.834583 29684 net.cpp:596] accuracy <- ip1_ip1_0_split_0
I0116 23:03:05.834594 29684 net.cpp:596] accuracy <- label_cifar_1_split_0
I0116 23:03:05.834606 29684 net.cpp:570] accuracy -> accuracy
I0116 23:03:05.834625 29684 net.cpp:210] Setting up accuracy
I0116 23:03:05.834636 29684 net.cpp:217] Top shape: (1)
I0116 23:03:05.834645 29684 net.cpp:225] Memory required for data: 36058004
I0116 23:03:05.834666 29684 layer_factory.hpp:114] Creating layer loss
I0116 23:03:05.834683 29684 net.cpp:160] Creating Layer loss
I0116 23:03:05.834692 29684 net.cpp:596] loss <- ip1_ip1_0_split_1
I0116 23:03:05.834702 29684 net.cpp:596] loss <- label_cifar_1_split_1
I0116 23:03:05.834713 29684 net.cpp:570] loss -> loss
I0116 23:03:05.834730 29684 layer_factory.hpp:114] Creating layer loss
I0116 23:03:05.835167 29684 net.cpp:210] Setting up loss
I0116 23:03:05.835180 29684 net.cpp:217] Top shape: (1)
I0116 23:03:05.835189 29684 net.cpp:220]     with loss weight 1
I0116 23:03:05.835218 29684 net.cpp:225] Memory required for data: 36058008
I0116 23:03:05.835227 29684 net.cpp:287] loss needs backward computation.
I0116 23:03:05.835237 29684 net.cpp:289] accuracy does not need backward computation.
I0116 23:03:05.835253 29684 net.cpp:287] ip1_ip1_0_split needs backward computation.
I0116 23:03:05.835263 29684 net.cpp:287] ip1 needs backward computation.
I0116 23:03:05.835271 29684 net.cpp:287] pool3 needs backward computation.
I0116 23:03:05.835279 29684 net.cpp:287] relu3 needs backward computation.
I0116 23:03:05.835289 29684 net.cpp:287] conv3 needs backward computation.
I0116 23:03:05.835297 29684 net.cpp:287] norm2 needs backward computation.
I0116 23:03:05.835309 29684 net.cpp:287] pool2 needs backward computation.
I0116 23:03:05.835319 29684 net.cpp:287] relu2 needs backward computation.
I0116 23:03:05.835327 29684 net.cpp:287] conv2 needs backward computation.
I0116 23:03:05.835336 29684 net.cpp:287] norm1 needs backward computation.
I0116 23:03:05.835345 29684 net.cpp:287] relu1 needs backward computation.
I0116 23:03:05.835355 29684 net.cpp:287] pool1 needs backward computation.
I0116 23:03:05.835362 29684 net.cpp:287] conv1 needs backward computation.
I0116 23:03:05.835372 29684 net.cpp:289] label_cifar_1_split does not need backward computation.
I0116 23:03:05.835382 29684 net.cpp:289] cifar does not need backward computation.
I0116 23:03:05.835391 29684 net.cpp:331] This network produces output accuracy
I0116 23:03:05.835399 29684 net.cpp:331] This network produces output loss
I0116 23:03:05.835429 29684 net.cpp:345] Network initialization done.
I0116 23:03:05.835592 29684 solver.cpp:104] Solver scaffolding done.
I0116 23:03:05.835635 29684 caffe.cpp:310] Starting Optimization
I0116 23:03:05.835649 29684 solver.cpp:340] Solving CIFAR10_full
I0116 23:03:05.835656 29684 solver.cpp:341] Learning Rate Policy: fixed
I0116 23:03:05.835667 29684 solver.cpp:406] Iteration 0, Testing net (#0)
I0116 23:03:11.870112 29684 solver.cpp:473]     Test net output #0: accuracy = 0.1106
I0116 23:03:11.870270 29684 solver.cpp:473]     Test net output #1: loss = 2.30259 (* 1 = 2.30259 loss)
I0116 23:03:12.227280 29684 solver.cpp:286] Iteration 0, loss = 2.3026
I0116 23:03:12.227408 29684 solver.cpp:303]     Train net output #0: loss = 2.3026 (* 1 = 2.3026 loss)
I0116 23:03:12.227432 29684 sgd_solver.cpp:143] Iteration 0, lr = 0.001
I0116 23:05:55.729912 29684 solver.cpp:382] Iteration 800, loss = 1.34603
I0116 23:05:55.730106 29684 solver.cpp:391] Optimization Done.
I0116 23:05:55.730118 29684 caffe.cpp:313] Optimization Done.

 Performance counter stats for './build/tools/caffe.bin train --solver=examples/cifar10/cifar10_full_solver_200_0T_bsize128.prototxt':

      243275288646      node-loads                                                   [33.44%]
      154742964187      node-load-misses                                             [33.43%]

     170.135641077 seconds time elapsed


real	2m50.149s
user	66m36.174s
sys	1m0.712s
