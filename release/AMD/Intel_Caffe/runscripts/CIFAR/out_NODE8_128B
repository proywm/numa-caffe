I0116 23:11:02.200214 29970 caffe.cpp:259] Use CPU.
I0116 23:11:02.201511 29970 solver.cpp:90] Initializing solver from parameters: 
test_iter: 100
test_interval: 1000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize128.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0116 23:11:02.201748 29970 solver.cpp:135] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 23:11:02.206226 29970 cpu_info.cpp:452] Processor speed [MHz]: 0
I0116 23:11:02.206267 29970 cpu_info.cpp:455] Total number of sockets: 4
I0116 23:11:02.206280 29970 cpu_info.cpp:458] Total number of CPU cores: 48
I0116 23:11:02.206291 29970 cpu_info.cpp:461] Total number of processors: 48
I0116 23:11:02.206303 29970 cpu_info.cpp:464] GPU is used: no
I0116 23:11:02.206315 29970 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0116 23:11:02.206326 29970 cpu_info.cpp:470] OpenMP thread bind allowed: no
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #205: KMP_AFFINITY: cpuid leaf 11 not supported - decoding legacy APIC ids.
OMP: Info #149: KMP_AFFINITY: Affinity capable, using global cpuid info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #156: KMP_AFFINITY: 48 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #159: KMP_AFFINITY: 4 packages x 1 cores/pkg x 12 threads/core (4 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 thread 11 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 1 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 1 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 1 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 1 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 1 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 1 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 22 maps to package 1 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 23 maps to package 1 thread 11 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 2 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 2 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 2 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 2 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 2 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 2 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 2 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 2 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 2 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 2 thread 11 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 3 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 3 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 3 thread 4 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 3 thread 5 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 3 thread 6 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 3 thread 7 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 3 thread 8 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 3 thread 9 
OMP: Info #171: KMP_AFFINITY: OS proc 46 maps to package 3 thread 10 
OMP: Info #171: KMP_AFFINITY: OS proc 47 maps to package 3 thread 11 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 0 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
I0116 23:11:02.215322 29970 cpu_info.cpp:473] Number of OpenMP threads: 48
I0116 23:11:02.215625 29970 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0116 23:11:02.215687 29970 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0116 23:11:02.217389 29970 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0116 23:11:02.217521 29970 layer_factory.hpp:114] Creating layer cifar
I0116 23:11:02.219457 29970 net.cpp:160] Creating Layer cifar
I0116 23:11:02.219516 29970 net.cpp:570] cifar -> data
I0116 23:11:02.219903 29970 net.cpp:570] cifar -> label
I0116 23:11:02.219985 29970 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 23:11:02.220211 29971 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0116 23:11:02.254822 29970 data_layer.cpp:80] output data size: 128,3,32,32
I0116 23:11:02.263731 29970 net.cpp:210] Setting up cifar
I0116 23:11:02.263811 29970 net.cpp:217] Top shape: 128 3 32 32 (393216)
I0116 23:11:02.263837 29970 net.cpp:217] Top shape: 128 (128)
I0116 23:11:02.263855 29970 net.cpp:225] Memory required for data: 1573376
I0116 23:11:02.263880 29970 layer_factory.hpp:114] Creating layer conv1
I0116 23:11:02.263943 29970 net.cpp:160] Creating Layer conv1
I0116 23:11:02.263968 29970 net.cpp:596] conv1 <- data
I0116 23:11:02.263999 29970 net.cpp:570] conv1 -> conv1
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 1 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 2 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 3 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 4 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 5 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 6 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 7 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 8 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 10 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 9 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 11 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 12 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 13 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 14 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 16 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 17 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 15 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 18 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 19 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 20 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 21 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 22 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 24 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 25 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 26 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 28 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 27 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 29 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 30 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 31 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 23 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 32 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 33 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 34 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 35 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 36 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 37 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 39 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 38 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 41 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 40 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 42 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 43 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 44 bound to OS proc set {0,1,2,3,4,5,6,7,8,9,10,11}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 45 bound to OS proc set {12,13,14,15,16,17,18,19,20,21,22,23}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 46 bound to OS proc set {24,25,26,27,28,29,30,31,32,33,34,35}
OMP: Info #242: KMP_AFFINITY: pid 29970 thread 47 bound to OS proc set {36,37,38,39,40,41,42,43,44,45,46,47}
I0116 23:11:02.310513 29970 net.cpp:210] Setting up conv1
I0116 23:11:02.310636 29970 net.cpp:217] Top shape: 128 32 32 32 (4194304)
I0116 23:11:02.310660 29970 net.cpp:225] Memory required for data: 18350592
I0116 23:11:02.310745 29970 layer_factory.hpp:114] Creating layer pool1
I0116 23:11:02.310933 29970 net.cpp:160] Creating Layer pool1
I0116 23:11:02.310963 29970 net.cpp:596] pool1 <- conv1
I0116 23:11:02.310998 29970 net.cpp:570] pool1 -> pool1
I0116 23:11:02.311069 29970 net.cpp:210] Setting up pool1
I0116 23:11:02.311100 29970 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:11:02.311120 29970 net.cpp:225] Memory required for data: 22544896
I0116 23:11:02.311141 29970 layer_factory.hpp:114] Creating layer relu1
I0116 23:11:02.311174 29970 net.cpp:160] Creating Layer relu1
I0116 23:11:02.311197 29970 net.cpp:596] relu1 <- pool1
I0116 23:11:02.311224 29970 net.cpp:557] relu1 -> pool1 (in-place)
I0116 23:11:02.311275 29970 net.cpp:210] Setting up relu1
I0116 23:11:02.311306 29970 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:11:02.311326 29970 net.cpp:225] Memory required for data: 26739200
I0116 23:11:02.311347 29970 layer_factory.hpp:114] Creating layer norm1
I0116 23:11:02.311405 29970 net.cpp:160] Creating Layer norm1
I0116 23:11:02.311427 29970 net.cpp:596] norm1 <- pool1
I0116 23:11:02.311455 29970 net.cpp:570] norm1 -> norm1
I0116 23:11:02.311620 29970 net.cpp:210] Setting up norm1
I0116 23:11:02.311661 29970 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:11:02.311682 29970 net.cpp:225] Memory required for data: 30933504
I0116 23:11:02.311702 29970 layer_factory.hpp:114] Creating layer conv2
I0116 23:11:02.311748 29970 net.cpp:160] Creating Layer conv2
I0116 23:11:02.311770 29970 net.cpp:596] conv2 <- norm1
I0116 23:11:02.311805 29970 net.cpp:570] conv2 -> conv2
I0116 23:11:02.370949 29970 net.cpp:210] Setting up conv2
I0116 23:11:02.371052 29970 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:11:02.371071 29970 net.cpp:225] Memory required for data: 35127808
I0116 23:11:02.371115 29970 layer_factory.hpp:114] Creating layer relu2
I0116 23:11:02.371147 29970 net.cpp:160] Creating Layer relu2
I0116 23:11:02.371166 29970 net.cpp:596] relu2 <- conv2
I0116 23:11:02.371198 29970 net.cpp:557] relu2 -> conv2 (in-place)
I0116 23:11:02.371230 29970 net.cpp:210] Setting up relu2
I0116 23:11:02.371263 29970 net.cpp:217] Top shape: 128 32 16 16 (1048576)
I0116 23:11:02.371281 29970 net.cpp:225] Memory required for data: 39322112
I0116 23:11:02.371297 29970 layer_factory.hpp:114] Creating layer pool2
I0116 23:11:02.371379 29970 net.cpp:160] Creating Layer pool2
I0116 23:11:02.371399 29970 net.cpp:596] pool2 <- conv2
I0116 23:11:02.371423 29970 net.cpp:570] pool2 -> pool2
I0116 23:11:02.371457 29970 net.cpp:210] Setting up pool2
I0116 23:11:02.371480 29970 net.cpp:217] Top shape: 128 32 8 8 (262144)
I0116 23:11:02.371529 29970 net.cpp:225] Memory required for data: 40370688
I0116 23:11:02.371546 29970 layer_factory.hpp:114] Creating layer norm2
I0116 23:11:02.371582 29970 net.cpp:160] Creating Layer norm2
I0116 23:11:02.371600 29970 net.cpp:596] norm2 <- pool2
I0116 23:11:02.371630 29970 net.cpp:570] norm2 -> norm2
I0116 23:11:02.371742 29970 net.cpp:210] Setting up norm2
I0116 23:11:02.371768 29970 net.cpp:217] Top shape: 128 32 8 8 (262144)
I0116 23:11:02.371784 29970 net.cpp:225] Memory required for data: 41419264
I0116 23:11:02.371800 29970 layer_factory.hpp:114] Creating layer conv3
I0116 23:11:02.371839 29970 net.cpp:160] Creating Layer conv3
I0116 23:11:02.371856 29970 net.cpp:596] conv3 <- norm2
I0116 23:11:02.371884 29970 net.cpp:570] conv3 -> conv3
I0116 23:11:02.403527 29970 net.cpp:210] Setting up conv3
I0116 23:11:02.403592 29970 net.cpp:217] Top shape: 128 64 8 8 (524288)
I0116 23:11:02.403606 29970 net.cpp:225] Memory required for data: 43516416
I0116 23:11:02.403642 29970 layer_factory.hpp:114] Creating layer relu3
I0116 23:11:02.403669 29970 net.cpp:160] Creating Layer relu3
I0116 23:11:02.403684 29970 net.cpp:596] relu3 <- conv3
I0116 23:11:02.403705 29970 net.cpp:557] relu3 -> conv3 (in-place)
I0116 23:11:02.403729 29970 net.cpp:210] Setting up relu3
I0116 23:11:02.403746 29970 net.cpp:217] Top shape: 128 64 8 8 (524288)
I0116 23:11:02.403759 29970 net.cpp:225] Memory required for data: 45613568
I0116 23:11:02.403770 29970 layer_factory.hpp:114] Creating layer pool3
I0116 23:11:02.403830 29970 net.cpp:160] Creating Layer pool3
I0116 23:11:02.403846 29970 net.cpp:596] pool3 <- conv3
I0116 23:11:02.403863 29970 net.cpp:570] pool3 -> pool3
I0116 23:11:02.403892 29970 net.cpp:210] Setting up pool3
I0116 23:11:02.403908 29970 net.cpp:217] Top shape: 128 64 4 4 (131072)
I0116 23:11:02.403921 29970 net.cpp:225] Memory required for data: 46137856
I0116 23:11:02.403934 29970 layer_factory.hpp:114] Creating layer ip1
I0116 23:11:02.403961 29970 net.cpp:160] Creating Layer ip1
I0116 23:11:02.403975 29970 net.cpp:596] ip1 <- pool3
I0116 23:11:02.403995 29970 net.cpp:570] ip1 -> ip1
I0116 23:11:02.405498 29970 net.cpp:210] Setting up ip1
I0116 23:11:02.405519 29970 net.cpp:217] Top shape: 128 10 (1280)
I0116 23:11:02.405532 29970 net.cpp:225] Memory required for data: 46142976
I0116 23:11:02.405552 29970 layer_factory.hpp:114] Creating layer loss
I0116 23:11:02.405578 29970 net.cpp:160] Creating Layer loss
I0116 23:11:02.405592 29970 net.cpp:596] loss <- ip1
I0116 23:11:02.405607 29970 net.cpp:596] loss <- label
I0116 23:11:02.405625 29970 net.cpp:570] loss -> loss
I0116 23:11:02.405653 29970 layer_factory.hpp:114] Creating layer loss
I0116 23:11:02.406361 29970 net.cpp:210] Setting up loss
I0116 23:11:02.406381 29970 net.cpp:217] Top shape: (1)
I0116 23:11:02.406394 29970 net.cpp:220]     with loss weight 1
I0116 23:11:02.406473 29970 net.cpp:225] Memory required for data: 46142980
I0116 23:11:02.406487 29970 net.cpp:287] loss needs backward computation.
I0116 23:11:02.406500 29970 net.cpp:287] ip1 needs backward computation.
I0116 23:11:02.406533 29970 net.cpp:287] pool3 needs backward computation.
I0116 23:11:02.406546 29970 net.cpp:287] relu3 needs backward computation.
I0116 23:11:02.406559 29970 net.cpp:287] conv3 needs backward computation.
I0116 23:11:02.406572 29970 net.cpp:287] norm2 needs backward computation.
I0116 23:11:02.406585 29970 net.cpp:287] pool2 needs backward computation.
I0116 23:11:02.406599 29970 net.cpp:287] relu2 needs backward computation.
I0116 23:11:02.406612 29970 net.cpp:287] conv2 needs backward computation.
I0116 23:11:02.406625 29970 net.cpp:287] norm1 needs backward computation.
I0116 23:11:02.406638 29970 net.cpp:287] relu1 needs backward computation.
I0116 23:11:02.406651 29970 net.cpp:287] pool1 needs backward computation.
I0116 23:11:02.406664 29970 net.cpp:287] conv1 needs backward computation.
I0116 23:11:02.406678 29970 net.cpp:289] cifar does not need backward computation.
I0116 23:11:02.406692 29970 net.cpp:331] This network produces output loss
I0116 23:11:02.406728 29970 net.cpp:345] Network initialization done.
I0116 23:11:02.408454 29970 solver.cpp:225] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize128.prototxt
I0116 23:11:02.408484 29970 cpu_info.cpp:452] Processor speed [MHz]: 0
I0116 23:11:02.408498 29970 cpu_info.cpp:455] Total number of sockets: 4
I0116 23:11:02.408509 29970 cpu_info.cpp:458] Total number of CPU cores: 48
I0116 23:11:02.408521 29970 cpu_info.cpp:461] Total number of processors: 48
I0116 23:11:02.408534 29970 cpu_info.cpp:464] GPU is used: no
I0116 23:11:02.408545 29970 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0116 23:11:02.408556 29970 cpu_info.cpp:470] OpenMP thread bind allowed: no
I0116 23:11:02.408568 29970 cpu_info.cpp:473] Number of OpenMP threads: 48
I0116 23:11:02.408646 29970 net.cpp:484] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0116 23:11:02.409842 29970 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "label_cifar_1_split"
  type: "Split"
  bottom: "label"
  top: "label_cifar_1_split_0"
  top: "label_cifar_1_split_1"
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip1_ip1_0_split"
  type: "Split"
  bottom: "ip1"
  top: "ip1_ip1_0_split_0"
  top: "ip1_ip1_0_split_1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1_ip1_0_split_0"
  bottom: "label_cifar_1_split_0"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1_ip1_0_split_1"
  bottom: "label_cifar_1_split_1"
  top: "loss"
}
I0116 23:11:02.409930 29970 layer_factory.hpp:114] Creating layer cifar
I0116 23:11:02.410271 29970 net.cpp:160] Creating Layer cifar
I0116 23:11:02.410296 29970 net.cpp:570] cifar -> data
I0116 23:11:02.410323 29970 net.cpp:570] cifar -> label
I0116 23:11:02.410347 29970 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0116 23:11:02.410591 30020 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0116 23:11:02.410749 29970 data_layer.cpp:80] output data size: 100,3,32,32
I0116 23:11:02.419531 29970 net.cpp:210] Setting up cifar
I0116 23:11:02.419586 29970 net.cpp:217] Top shape: 100 3 32 32 (307200)
I0116 23:11:02.419605 29970 net.cpp:217] Top shape: 100 (100)
I0116 23:11:02.419617 29970 net.cpp:225] Memory required for data: 1229200
I0116 23:11:02.419636 29970 layer_factory.hpp:114] Creating layer label_cifar_1_split
I0116 23:11:02.419664 29970 net.cpp:160] Creating Layer label_cifar_1_split
I0116 23:11:02.419682 29970 net.cpp:596] label_cifar_1_split <- label
I0116 23:11:02.419701 29970 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_0
I0116 23:11:02.419728 29970 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_1
I0116 23:11:02.419754 29970 net.cpp:210] Setting up label_cifar_1_split
I0116 23:11:02.419771 29970 net.cpp:217] Top shape: 100 (100)
I0116 23:11:02.419790 29970 net.cpp:217] Top shape: 100 (100)
I0116 23:11:02.419802 29970 net.cpp:225] Memory required for data: 1230000
I0116 23:11:02.419816 29970 layer_factory.hpp:114] Creating layer conv1
I0116 23:11:02.419852 29970 net.cpp:160] Creating Layer conv1
I0116 23:11:02.419867 29970 net.cpp:596] conv1 <- data
I0116 23:11:02.419886 29970 net.cpp:570] conv1 -> conv1
I0116 23:11:02.437232 29970 net.cpp:210] Setting up conv1
I0116 23:11:02.437301 29970 net.cpp:217] Top shape: 100 32 32 32 (3276800)
I0116 23:11:02.437315 29970 net.cpp:225] Memory required for data: 14337200
I0116 23:11:02.437352 29970 layer_factory.hpp:114] Creating layer pool1
I0116 23:11:02.437427 29970 net.cpp:160] Creating Layer pool1
I0116 23:11:02.437443 29970 net.cpp:596] pool1 <- conv1
I0116 23:11:02.437464 29970 net.cpp:570] pool1 -> pool1
I0116 23:11:02.437500 29970 net.cpp:210] Setting up pool1
I0116 23:11:02.437517 29970 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:11:02.437530 29970 net.cpp:225] Memory required for data: 17614000
I0116 23:11:02.437542 29970 layer_factory.hpp:114] Creating layer relu1
I0116 23:11:02.437561 29970 net.cpp:160] Creating Layer relu1
I0116 23:11:02.437574 29970 net.cpp:596] relu1 <- pool1
I0116 23:11:02.437595 29970 net.cpp:557] relu1 -> pool1 (in-place)
I0116 23:11:02.437613 29970 net.cpp:210] Setting up relu1
I0116 23:11:02.437629 29970 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:11:02.437641 29970 net.cpp:225] Memory required for data: 20890800
I0116 23:11:02.437654 29970 layer_factory.hpp:114] Creating layer norm1
I0116 23:11:02.437674 29970 net.cpp:160] Creating Layer norm1
I0116 23:11:02.437686 29970 net.cpp:596] norm1 <- pool1
I0116 23:11:02.437723 29970 net.cpp:570] norm1 -> norm1
I0116 23:11:02.437806 29970 net.cpp:210] Setting up norm1
I0116 23:11:02.437826 29970 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:11:02.437839 29970 net.cpp:225] Memory required for data: 24167600
I0116 23:11:02.437851 29970 layer_factory.hpp:114] Creating layer conv2
I0116 23:11:02.437881 29970 net.cpp:160] Creating Layer conv2
I0116 23:11:02.437896 29970 net.cpp:596] conv2 <- norm1
I0116 23:11:02.437913 29970 net.cpp:570] conv2 -> conv2
I0116 23:11:02.488643 29970 net.cpp:210] Setting up conv2
I0116 23:11:02.488703 29970 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:11:02.488715 29970 net.cpp:225] Memory required for data: 27444400
I0116 23:11:02.488747 29970 layer_factory.hpp:114] Creating layer relu2
I0116 23:11:02.488775 29970 net.cpp:160] Creating Layer relu2
I0116 23:11:02.488790 29970 net.cpp:596] relu2 <- conv2
I0116 23:11:02.488807 29970 net.cpp:557] relu2 -> conv2 (in-place)
I0116 23:11:02.488859 29970 net.cpp:210] Setting up relu2
I0116 23:11:02.488874 29970 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0116 23:11:02.488885 29970 net.cpp:225] Memory required for data: 30721200
I0116 23:11:02.488895 29970 layer_factory.hpp:114] Creating layer pool2
I0116 23:11:02.488951 29970 net.cpp:160] Creating Layer pool2
I0116 23:11:02.488965 29970 net.cpp:596] pool2 <- conv2
I0116 23:11:02.488984 29970 net.cpp:570] pool2 -> pool2
I0116 23:11:02.489011 29970 net.cpp:210] Setting up pool2
I0116 23:11:02.489027 29970 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0116 23:11:02.489037 29970 net.cpp:225] Memory required for data: 31540400
I0116 23:11:02.489048 29970 layer_factory.hpp:114] Creating layer norm2
I0116 23:11:02.489065 29970 net.cpp:160] Creating Layer norm2
I0116 23:11:02.489076 29970 net.cpp:596] norm2 <- pool2
I0116 23:11:02.489094 29970 net.cpp:570] norm2 -> norm2
I0116 23:11:02.489171 29970 net.cpp:210] Setting up norm2
I0116 23:11:02.489188 29970 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0116 23:11:02.489199 29970 net.cpp:225] Memory required for data: 32359600
I0116 23:11:02.489209 29970 layer_factory.hpp:114] Creating layer conv3
I0116 23:11:02.489236 29970 net.cpp:160] Creating Layer conv3
I0116 23:11:02.489260 29970 net.cpp:596] conv3 <- norm2
I0116 23:11:02.489279 29970 net.cpp:570] conv3 -> conv3
I0116 23:11:02.515382 29970 net.cpp:210] Setting up conv3
I0116 23:11:02.515439 29970 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0116 23:11:02.515451 29970 net.cpp:225] Memory required for data: 33998000
I0116 23:11:02.515483 29970 layer_factory.hpp:114] Creating layer relu3
I0116 23:11:02.515507 29970 net.cpp:160] Creating Layer relu3
I0116 23:11:02.515521 29970 net.cpp:596] relu3 <- conv3
I0116 23:11:02.515537 29970 net.cpp:557] relu3 -> conv3 (in-place)
I0116 23:11:02.515560 29970 net.cpp:210] Setting up relu3
I0116 23:11:02.515574 29970 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0116 23:11:02.515584 29970 net.cpp:225] Memory required for data: 35636400
I0116 23:11:02.515595 29970 layer_factory.hpp:114] Creating layer pool3
I0116 23:11:02.515642 29970 net.cpp:160] Creating Layer pool3
I0116 23:11:02.515655 29970 net.cpp:596] pool3 <- conv3
I0116 23:11:02.515671 29970 net.cpp:570] pool3 -> pool3
I0116 23:11:02.515694 29970 net.cpp:210] Setting up pool3
I0116 23:11:02.515709 29970 net.cpp:217] Top shape: 100 64 4 4 (102400)
I0116 23:11:02.515720 29970 net.cpp:225] Memory required for data: 36046000
I0116 23:11:02.515732 29970 layer_factory.hpp:114] Creating layer ip1
I0116 23:11:02.515760 29970 net.cpp:160] Creating Layer ip1
I0116 23:11:02.515772 29970 net.cpp:596] ip1 <- pool3
I0116 23:11:02.515789 29970 net.cpp:570] ip1 -> ip1
I0116 23:11:02.517004 29970 net.cpp:210] Setting up ip1
I0116 23:11:02.517022 29970 net.cpp:217] Top shape: 100 10 (1000)
I0116 23:11:02.517033 29970 net.cpp:225] Memory required for data: 36050000
I0116 23:11:02.517050 29970 layer_factory.hpp:114] Creating layer ip1_ip1_0_split
I0116 23:11:02.517071 29970 net.cpp:160] Creating Layer ip1_ip1_0_split
I0116 23:11:02.517082 29970 net.cpp:596] ip1_ip1_0_split <- ip1
I0116 23:11:02.517112 29970 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0116 23:11:02.517132 29970 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0116 23:11:02.517149 29970 net.cpp:210] Setting up ip1_ip1_0_split
I0116 23:11:02.517168 29970 net.cpp:217] Top shape: 100 10 (1000)
I0116 23:11:02.517181 29970 net.cpp:217] Top shape: 100 10 (1000)
I0116 23:11:02.517191 29970 net.cpp:225] Memory required for data: 36058000
I0116 23:11:02.517202 29970 layer_factory.hpp:114] Creating layer accuracy
I0116 23:11:02.517227 29970 net.cpp:160] Creating Layer accuracy
I0116 23:11:02.517238 29970 net.cpp:596] accuracy <- ip1_ip1_0_split_0
I0116 23:11:02.517266 29970 net.cpp:596] accuracy <- label_cifar_1_split_0
I0116 23:11:02.517280 29970 net.cpp:570] accuracy -> accuracy
I0116 23:11:02.517303 29970 net.cpp:210] Setting up accuracy
I0116 23:11:02.517318 29970 net.cpp:217] Top shape: (1)
I0116 23:11:02.517328 29970 net.cpp:225] Memory required for data: 36058004
I0116 23:11:02.517356 29970 layer_factory.hpp:114] Creating layer loss
I0116 23:11:02.517379 29970 net.cpp:160] Creating Layer loss
I0116 23:11:02.517390 29970 net.cpp:596] loss <- ip1_ip1_0_split_1
I0116 23:11:02.517408 29970 net.cpp:596] loss <- label_cifar_1_split_1
I0116 23:11:02.517423 29970 net.cpp:570] loss -> loss
I0116 23:11:02.517449 29970 layer_factory.hpp:114] Creating layer loss
I0116 23:11:02.517755 29970 net.cpp:210] Setting up loss
I0116 23:11:02.517771 29970 net.cpp:217] Top shape: (1)
I0116 23:11:02.517782 29970 net.cpp:220]     with loss weight 1
I0116 23:11:02.517817 29970 net.cpp:225] Memory required for data: 36058008
I0116 23:11:02.517828 29970 net.cpp:287] loss needs backward computation.
I0116 23:11:02.517840 29970 net.cpp:289] accuracy does not need backward computation.
I0116 23:11:02.517853 29970 net.cpp:287] ip1_ip1_0_split needs backward computation.
I0116 23:11:02.517864 29970 net.cpp:287] ip1 needs backward computation.
I0116 23:11:02.517876 29970 net.cpp:287] pool3 needs backward computation.
I0116 23:11:02.517887 29970 net.cpp:287] relu3 needs backward computation.
I0116 23:11:02.517899 29970 net.cpp:287] conv3 needs backward computation.
I0116 23:11:02.517910 29970 net.cpp:287] norm2 needs backward computation.
I0116 23:11:02.517920 29970 net.cpp:287] pool2 needs backward computation.
I0116 23:11:02.517932 29970 net.cpp:287] relu2 needs backward computation.
I0116 23:11:02.517942 29970 net.cpp:287] conv2 needs backward computation.
I0116 23:11:02.517953 29970 net.cpp:287] norm1 needs backward computation.
I0116 23:11:02.517966 29970 net.cpp:287] relu1 needs backward computation.
I0116 23:11:02.517976 29970 net.cpp:287] pool1 needs backward computation.
I0116 23:11:02.517987 29970 net.cpp:287] conv1 needs backward computation.
I0116 23:11:02.518000 29970 net.cpp:289] label_cifar_1_split does not need backward computation.
I0116 23:11:02.518013 29970 net.cpp:289] cifar does not need backward computation.
I0116 23:11:02.518023 29970 net.cpp:331] This network produces output accuracy
I0116 23:11:02.518034 29970 net.cpp:331] This network produces output loss
I0116 23:11:02.518067 29970 net.cpp:345] Network initialization done.
I0116 23:11:02.518280 29970 solver.cpp:104] Solver scaffolding done.
I0116 23:11:02.518334 29970 caffe.cpp:310] Starting Optimization
I0116 23:11:02.518349 29970 solver.cpp:340] Solving CIFAR10_full
I0116 23:11:02.518360 29970 solver.cpp:341] Learning Rate Policy: fixed
I0116 23:11:02.518374 29970 solver.cpp:406] Iteration 0, Testing net (#0)
I0116 23:11:08.348496 29970 solver.cpp:473]     Test net output #0: accuracy = 0.1235
I0116 23:11:08.348644 29970 solver.cpp:473]     Test net output #1: loss = 2.3026 (* 1 = 2.3026 loss)
I0116 23:11:08.632231 29970 solver.cpp:286] Iteration 0, loss = 2.30257
I0116 23:11:08.632355 29970 solver.cpp:303]     Train net output #0: loss = 2.30257 (* 1 = 2.30257 loss)
I0116 23:11:08.632385 29970 sgd_solver.cpp:143] Iteration 0, lr = 0.001
I0116 23:13:08.487890 29970 solver.cpp:382] Iteration 800, loss = 1.37212
I0116 23:13:08.488082 29970 solver.cpp:391] Optimization Done.
I0116 23:13:08.488112 29970 caffe.cpp:313] Optimization Done.

 Performance counter stats for './build/tools/caffe.bin train --solver=examples/cifar10/cifar10_full_solver_200_0T_bsize128.prototxt':

      398011605391      node-loads                                                   [33.44%]
      333519295399      node-load-misses                                             [33.43%]

     126.431028467 seconds time elapsed


real	2m6.456s
user	97m19.831s
sys	3m4.983s
