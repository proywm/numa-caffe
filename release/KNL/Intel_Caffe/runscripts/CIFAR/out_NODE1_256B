I0331 15:07:09.165132 10294 caffe.cpp:259] Use CPU.
I0331 15:07:09.167116 10294 solver.cpp:90] Initializing solver from parameters: 
test_iter: 0
test_interval: 2000
base_lr: 0.001
display: 800
max_iter: 800
lr_policy: "fixed"
momentum: 0.9
weight_decay: 0.004
snapshot: 10000
snapshot_prefix: "examples/cifar10/cifar10_full"
solver_mode: CPU
net: "examples/cifar10/cifar10_full_train_test_bsize256.prototxt"
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: false
snapshot_format: HDF5
I0331 15:07:09.172610 10294 solver.cpp:135] Creating training net from net file: examples/cifar10/cifar10_full_train_test_bsize256.prototxt
I0331 15:07:09.202657 10294 cpu_info.cpp:452] Processor speed [MHz]: 1300
I0331 15:07:09.202745 10294 cpu_info.cpp:455] Total number of sockets: 1
I0331 15:07:09.202800 10294 cpu_info.cpp:458] Total number of CPU cores: 64
I0331 15:07:09.202831 10294 cpu_info.cpp:461] Total number of processors: 256
I0331 15:07:09.202860 10294 cpu_info.cpp:464] GPU is used: no
I0331 15:07:09.202889 10294 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0331 15:07:09.202917 10294 cpu_info.cpp:470] OpenMP thread bind allowed: no
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207}
OMP: Info #156: KMP_AFFINITY: 64 available OS procs
OMP: Info #157: KMP_AFFINITY: Uniform topology
OMP: Info #179: KMP_AFFINITY: 1 packages x 16 cores/pkg x 4 threads/core (16 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 64 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 128 maps to package 0 core 0 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 192 maps to package 0 core 0 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 65 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 129 maps to package 0 core 1 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 193 maps to package 0 core 1 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 24 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 66 maps to package 0 core 24 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 130 maps to package 0 core 24 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 194 maps to package 0 core 24 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 25 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 67 maps to package 0 core 25 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 131 maps to package 0 core 25 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 195 maps to package 0 core 25 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 32 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 68 maps to package 0 core 32 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 132 maps to package 0 core 32 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 196 maps to package 0 core 32 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 core 33 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 69 maps to package 0 core 33 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 133 maps to package 0 core 33 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 197 maps to package 0 core 33 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 core 40 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 70 maps to package 0 core 40 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 134 maps to package 0 core 40 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 198 maps to package 0 core 40 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 core 41 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 71 maps to package 0 core 41 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 135 maps to package 0 core 41 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 199 maps to package 0 core 41 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 core 48 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 72 maps to package 0 core 48 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 136 maps to package 0 core 48 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 200 maps to package 0 core 48 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 core 49 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 73 maps to package 0 core 49 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 137 maps to package 0 core 49 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 201 maps to package 0 core 49 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 core 56 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 74 maps to package 0 core 56 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 138 maps to package 0 core 56 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 202 maps to package 0 core 56 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 core 57 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 75 maps to package 0 core 57 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 139 maps to package 0 core 57 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 203 maps to package 0 core 57 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 0 core 64 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 76 maps to package 0 core 64 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 140 maps to package 0 core 64 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 204 maps to package 0 core 64 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 0 core 65 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 77 maps to package 0 core 65 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 141 maps to package 0 core 65 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 205 maps to package 0 core 65 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 0 core 72 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 78 maps to package 0 core 72 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 142 maps to package 0 core 72 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 206 maps to package 0 core 72 thread 3 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 0 core 73 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 79 maps to package 0 core 73 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 143 maps to package 0 core 73 thread 2 
OMP: Info #171: KMP_AFFINITY: OS proc 207 maps to package 0 core 73 thread 3 
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 0 bound to OS proc set {0}
I0331 15:07:09.229025 10294 cpu_info.cpp:473] Number of OpenMP threads: 16
I0331 15:07:09.229308 10294 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer cifar
I0331 15:07:09.229379 10294 net.cpp:484] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0331 15:07:09.231423 10294 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: 256
    backend: LMDB
    shuffle: true
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0331 15:07:09.231645 10294 layer_factory.hpp:114] Creating layer cifar
I0331 15:07:09.234182 10294 net.cpp:160] Creating Layer cifar
I0331 15:07:09.234275 10294 net.cpp:570] cifar -> data
I0331 15:07:09.234354 10294 net.cpp:570] cifar -> label
I0331 15:07:09.234419 10294 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0331 15:07:09.265895 10295 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_train_lmdb
I0331 15:07:09.298481 10295 data_reader.cpp:177] Shuffling data
I0331 15:07:09.381939 10294 data_layer.cpp:80] output data size: 256,3,32,32
I0331 15:07:09.385984 10294 net.cpp:210] Setting up cifar
I0331 15:07:09.386134 10294 net.cpp:217] Top shape: 256 3 32 32 (786432)
I0331 15:07:09.386204 10294 net.cpp:217] Top shape: 256 (256)
I0331 15:07:09.386245 10294 net.cpp:225] Memory required for data: 3146752
I0331 15:07:09.386294 10294 layer_factory.hpp:114] Creating layer conv1
I0331 15:07:09.386396 10294 net.cpp:160] Creating Layer conv1
I0331 15:07:09.386451 10294 net.cpp:596] conv1 <- data
I0331 15:07:09.386514 10294 net.cpp:570] conv1 -> conv1
I0331 15:07:09.389606 10294 net.cpp:210] Setting up conv1
I0331 15:07:09.389735 10294 net.cpp:217] Top shape: 256 32 32 32 (8388608)
I0331 15:07:09.389842 10294 net.cpp:225] Memory required for data: 36701184
I0331 15:07:09.389966 10294 layer_factory.hpp:114] Creating layer pool1
I0331 15:07:09.390192 10294 net.cpp:160] Creating Layer pool1
I0331 15:07:09.390269 10294 net.cpp:596] pool1 <- conv1
I0331 15:07:09.390328 10294 net.cpp:570] pool1 -> pool1
I0331 15:07:09.390422 10294 net.cpp:210] Setting up pool1
I0331 15:07:09.390481 10294 net.cpp:217] Top shape: 256 32 16 16 (2097152)
I0331 15:07:09.390516 10294 net.cpp:225] Memory required for data: 45089792
I0331 15:07:09.390554 10294 layer_factory.hpp:114] Creating layer relu1
I0331 15:07:09.390610 10294 net.cpp:160] Creating Layer relu1
I0331 15:07:09.390648 10294 net.cpp:596] relu1 <- pool1
I0331 15:07:09.390693 10294 net.cpp:557] relu1 -> pool1 (in-place)
I0331 15:07:09.390749 10294 net.cpp:210] Setting up relu1
I0331 15:07:09.390842 10294 net.cpp:217] Top shape: 256 32 16 16 (2097152)
I0331 15:07:09.390878 10294 net.cpp:225] Memory required for data: 53478400
I0331 15:07:09.390913 10294 layer_factory.hpp:114] Creating layer norm1
I0331 15:07:09.391008 10294 net.cpp:160] Creating Layer norm1
I0331 15:07:09.391057 10294 net.cpp:596] norm1 <- pool1
I0331 15:07:09.391103 10294 net.cpp:570] norm1 -> norm1
I0331 15:07:09.391371 10294 net.cpp:210] Setting up norm1
I0331 15:07:09.391451 10294 net.cpp:217] Top shape: 256 32 16 16 (2097152)
I0331 15:07:09.391484 10294 net.cpp:225] Memory required for data: 61867008
I0331 15:07:09.391521 10294 layer_factory.hpp:114] Creating layer conv2
I0331 15:07:09.391602 10294 net.cpp:160] Creating Layer conv2
I0331 15:07:09.391641 10294 net.cpp:596] conv2 <- norm1
I0331 15:07:09.391695 10294 net.cpp:570] conv2 -> conv2
I0331 15:07:09.402282 10294 net.cpp:210] Setting up conv2
I0331 15:07:09.402415 10294 net.cpp:217] Top shape: 256 32 16 16 (2097152)
I0331 15:07:09.402469 10294 net.cpp:225] Memory required for data: 70255616
I0331 15:07:09.402560 10294 layer_factory.hpp:114] Creating layer relu2
I0331 15:07:09.402660 10294 net.cpp:160] Creating Layer relu2
I0331 15:07:09.402720 10294 net.cpp:596] relu2 <- conv2
I0331 15:07:09.402822 10294 net.cpp:557] relu2 -> conv2 (in-place)
I0331 15:07:09.402905 10294 net.cpp:210] Setting up relu2
I0331 15:07:09.402961 10294 net.cpp:217] Top shape: 256 32 16 16 (2097152)
I0331 15:07:09.402997 10294 net.cpp:225] Memory required for data: 78644224
I0331 15:07:09.403033 10294 layer_factory.hpp:114] Creating layer pool2
I0331 15:07:09.403187 10294 net.cpp:160] Creating Layer pool2
I0331 15:07:09.403245 10294 net.cpp:596] pool2 <- conv2
I0331 15:07:09.403318 10294 net.cpp:570] pool2 -> pool2
I0331 15:07:09.403394 10294 net.cpp:210] Setting up pool2
I0331 15:07:09.403573 10294 net.cpp:217] Top shape: 256 32 8 8 (524288)
I0331 15:07:09.403620 10294 net.cpp:225] Memory required for data: 80741376
I0331 15:07:09.403662 10294 layer_factory.hpp:114] Creating layer norm2
I0331 15:07:09.403724 10294 net.cpp:160] Creating Layer norm2
I0331 15:07:09.403802 10294 net.cpp:596] norm2 <- pool2
I0331 15:07:09.403895 10294 net.cpp:570] norm2 -> norm2
I0331 15:07:09.404146 10294 net.cpp:210] Setting up norm2
I0331 15:07:09.404223 10294 net.cpp:217] Top shape: 256 32 8 8 (524288)
I0331 15:07:09.404255 10294 net.cpp:225] Memory required for data: 82838528
I0331 15:07:09.404294 10294 layer_factory.hpp:114] Creating layer conv3
I0331 15:07:09.404372 10294 net.cpp:160] Creating Layer conv3
I0331 15:07:09.404413 10294 net.cpp:596] conv3 <- norm2
I0331 15:07:09.404464 10294 net.cpp:570] conv3 -> conv3
I0331 15:07:09.413951 10294 net.cpp:210] Setting up conv3
I0331 15:07:09.414088 10294 net.cpp:217] Top shape: 256 64 8 8 (1048576)
I0331 15:07:09.414136 10294 net.cpp:225] Memory required for data: 87032832
I0331 15:07:09.414227 10294 layer_factory.hpp:114] Creating layer relu3
I0331 15:07:09.414325 10294 net.cpp:160] Creating Layer relu3
I0331 15:07:09.414377 10294 net.cpp:596] relu3 <- conv3
I0331 15:07:09.414430 10294 net.cpp:557] relu3 -> conv3 (in-place)
I0331 15:07:09.414495 10294 net.cpp:210] Setting up relu3
I0331 15:07:09.414546 10294 net.cpp:217] Top shape: 256 64 8 8 (1048576)
I0331 15:07:09.414580 10294 net.cpp:225] Memory required for data: 91227136
I0331 15:07:09.414618 10294 layer_factory.hpp:114] Creating layer pool3
I0331 15:07:09.414803 10294 net.cpp:160] Creating Layer pool3
I0331 15:07:09.414875 10294 net.cpp:596] pool3 <- conv3
I0331 15:07:09.414937 10294 net.cpp:570] pool3 -> pool3
I0331 15:07:09.415009 10294 net.cpp:210] Setting up pool3
I0331 15:07:09.415060 10294 net.cpp:217] Top shape: 256 64 4 4 (262144)
I0331 15:07:09.415092 10294 net.cpp:225] Memory required for data: 92275712
I0331 15:07:09.415130 10294 layer_factory.hpp:114] Creating layer ip1
I0331 15:07:09.415189 10294 net.cpp:160] Creating Layer ip1
I0331 15:07:09.415223 10294 net.cpp:596] ip1 <- pool3
I0331 15:07:09.415292 10294 net.cpp:570] ip1 -> ip1
I0331 15:07:09.416162 10294 net.cpp:210] Setting up ip1
I0331 15:07:09.416256 10294 net.cpp:217] Top shape: 256 10 (2560)
I0331 15:07:09.416290 10294 net.cpp:225] Memory required for data: 92285952
I0331 15:07:09.416349 10294 layer_factory.hpp:114] Creating layer loss
I0331 15:07:09.416452 10294 net.cpp:160] Creating Layer loss
I0331 15:07:09.416496 10294 net.cpp:596] loss <- ip1
I0331 15:07:09.416539 10294 net.cpp:596] loss <- label
I0331 15:07:09.416585 10294 net.cpp:570] loss -> loss
I0331 15:07:09.416666 10294 layer_factory.hpp:114] Creating layer loss
I0331 15:07:09.416857 10294 net.cpp:210] Setting up loss
I0331 15:07:09.416934 10294 net.cpp:217] Top shape: (1)
I0331 15:07:09.416965 10294 net.cpp:220]     with loss weight 1
I0331 15:07:09.417088 10294 net.cpp:225] Memory required for data: 92285956
I0331 15:07:09.417129 10294 net.cpp:287] loss needs backward computation.
I0331 15:07:09.417170 10294 net.cpp:287] ip1 needs backward computation.
I0331 15:07:09.417203 10294 net.cpp:287] pool3 needs backward computation.
I0331 15:07:09.417237 10294 net.cpp:287] relu3 needs backward computation.
I0331 15:07:09.417269 10294 net.cpp:287] conv3 needs backward computation.
I0331 15:07:09.417302 10294 net.cpp:287] norm2 needs backward computation.
I0331 15:07:09.417335 10294 net.cpp:287] pool2 needs backward computation.
I0331 15:07:09.417369 10294 net.cpp:287] relu2 needs backward computation.
I0331 15:07:09.417402 10294 net.cpp:287] conv2 needs backward computation.
I0331 15:07:09.417434 10294 net.cpp:287] norm1 needs backward computation.
I0331 15:07:09.417469 10294 net.cpp:287] relu1 needs backward computation.
I0331 15:07:09.417500 10294 net.cpp:287] pool1 needs backward computation.
I0331 15:07:09.417532 10294 net.cpp:287] conv1 needs backward computation.
I0331 15:07:09.417567 10294 net.cpp:289] cifar does not need backward computation.
I0331 15:07:09.417723 10294 net.cpp:331] This network produces output loss
I0331 15:07:09.417855 10294 net.cpp:345] Network initialization done.
I0331 15:07:09.422514 10294 solver.cpp:225] Creating test net (#0) specified by net file: examples/cifar10/cifar10_full_train_test_bsize256.prototxt
I0331 15:07:09.422619 10294 cpu_info.cpp:452] Processor speed [MHz]: 1300
I0331 15:07:09.422657 10294 cpu_info.cpp:455] Total number of sockets: 1
I0331 15:07:09.422688 10294 cpu_info.cpp:458] Total number of CPU cores: 64
I0331 15:07:09.422718 10294 cpu_info.cpp:461] Total number of processors: 256
I0331 15:07:09.422746 10294 cpu_info.cpp:464] GPU is used: no
I0331 15:07:09.422819 10294 cpu_info.cpp:467] OpenMP environmental variables are specified: yes
I0331 15:07:09.422852 10294 cpu_info.cpp:470] OpenMP thread bind allowed: no
I0331 15:07:09.422888 10294 cpu_info.cpp:473] Number of OpenMP threads: 16
I0331 15:07:09.423061 10294 net.cpp:484] The NetState phase (1) differed from the phase (0) specified by a rule in layer cifar
I0331 15:07:09.425624 10294 net.cpp:120] Initializing net from parameters: 
name: "CIFAR10_full"
state {
  phase: TEST
}
layer {
  name: "cifar"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "label_cifar_1_split"
  type: "Split"
  bottom: "label"
  top: "label_cifar_1_split_0"
  top: "label_cifar_1_split_1"
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 250
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip1_ip1_0_split"
  type: "Split"
  bottom: "ip1"
  top: "ip1_ip1_0_split_0"
  top: "ip1_ip1_0_split_1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1_ip1_0_split_0"
  bottom: "label_cifar_1_split_0"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1_ip1_0_split_1"
  bottom: "label_cifar_1_split_1"
  top: "loss"
}
I0331 15:07:09.425937 10294 layer_factory.hpp:114] Creating layer cifar
I0331 15:07:09.426511 10294 net.cpp:160] Creating Layer cifar
I0331 15:07:09.426620 10294 net.cpp:570] cifar -> data
I0331 15:07:09.426697 10294 net.cpp:570] cifar -> label
I0331 15:07:09.426797 10294 data_transformer.cpp:62] Loading mean file from: examples/cifar10/mean.binaryproto
I0331 15:07:09.435065 10296 db_lmdb.cpp:72] Opened lmdb examples/cifar10/cifar10_test_lmdb
I0331 15:07:09.436959 10294 data_layer.cpp:80] output data size: 100,3,32,32
I0331 15:07:09.438685 10294 net.cpp:210] Setting up cifar
I0331 15:07:09.438855 10294 net.cpp:217] Top shape: 100 3 32 32 (307200)
I0331 15:07:09.438902 10294 net.cpp:217] Top shape: 100 (100)
I0331 15:07:09.438935 10294 net.cpp:225] Memory required for data: 1229200
I0331 15:07:09.438980 10294 layer_factory.hpp:114] Creating layer label_cifar_1_split
I0331 15:07:09.439043 10294 net.cpp:160] Creating Layer label_cifar_1_split
I0331 15:07:09.439079 10294 net.cpp:596] label_cifar_1_split <- label
I0331 15:07:09.439126 10294 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_0
I0331 15:07:09.439182 10294 net.cpp:570] label_cifar_1_split -> label_cifar_1_split_1
I0331 15:07:09.439237 10294 net.cpp:210] Setting up label_cifar_1_split
I0331 15:07:09.439278 10294 net.cpp:217] Top shape: 100 (100)
I0331 15:07:09.439316 10294 net.cpp:217] Top shape: 100 (100)
I0331 15:07:09.439347 10294 net.cpp:225] Memory required for data: 1230000
I0331 15:07:09.439379 10294 layer_factory.hpp:114] Creating layer conv1
I0331 15:07:09.439437 10294 net.cpp:160] Creating Layer conv1
I0331 15:07:09.439471 10294 net.cpp:596] conv1 <- data
I0331 15:07:09.439514 10294 net.cpp:570] conv1 -> conv1
I0331 15:07:09.442453 10294 net.cpp:210] Setting up conv1
I0331 15:07:09.442572 10294 net.cpp:217] Top shape: 100 32 32 32 (3276800)
I0331 15:07:09.442606 10294 net.cpp:225] Memory required for data: 14337200
I0331 15:07:09.442685 10294 layer_factory.hpp:114] Creating layer pool1
I0331 15:07:09.442847 10294 net.cpp:160] Creating Layer pool1
I0331 15:07:09.442890 10294 net.cpp:596] pool1 <- conv1
I0331 15:07:09.442955 10294 net.cpp:570] pool1 -> pool1
I0331 15:07:09.443032 10294 net.cpp:210] Setting up pool1
I0331 15:07:09.443084 10294 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 15:07:09.443140 10294 net.cpp:225] Memory required for data: 17614000
I0331 15:07:09.443181 10294 layer_factory.hpp:114] Creating layer relu1
I0331 15:07:09.443245 10294 net.cpp:160] Creating Layer relu1
I0331 15:07:09.443285 10294 net.cpp:596] relu1 <- pool1
I0331 15:07:09.443328 10294 net.cpp:557] relu1 -> pool1 (in-place)
I0331 15:07:09.443377 10294 net.cpp:210] Setting up relu1
I0331 15:07:09.443418 10294 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 15:07:09.443449 10294 net.cpp:225] Memory required for data: 20890800
I0331 15:07:09.443482 10294 layer_factory.hpp:114] Creating layer norm1
I0331 15:07:09.443537 10294 net.cpp:160] Creating Layer norm1
I0331 15:07:09.443572 10294 net.cpp:596] norm1 <- pool1
I0331 15:07:09.443612 10294 net.cpp:570] norm1 -> norm1
I0331 15:07:09.443835 10294 net.cpp:210] Setting up norm1
I0331 15:07:09.443891 10294 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 15:07:09.443925 10294 net.cpp:225] Memory required for data: 24167600
I0331 15:07:09.443964 10294 layer_factory.hpp:114] Creating layer conv2
I0331 15:07:09.444041 10294 net.cpp:160] Creating Layer conv2
I0331 15:07:09.444082 10294 net.cpp:596] conv2 <- norm1
I0331 15:07:09.444152 10294 net.cpp:570] conv2 -> conv2
I0331 15:07:09.467806 10294 net.cpp:210] Setting up conv2
I0331 15:07:09.467929 10294 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 15:07:09.467970 10294 net.cpp:225] Memory required for data: 27444400
I0331 15:07:09.468052 10294 layer_factory.hpp:114] Creating layer relu2
I0331 15:07:09.468117 10294 net.cpp:160] Creating Layer relu2
I0331 15:07:09.468158 10294 net.cpp:596] relu2 <- conv2
I0331 15:07:09.468336 10294 net.cpp:557] relu2 -> conv2 (in-place)
I0331 15:07:09.468411 10294 net.cpp:210] Setting up relu2
I0331 15:07:09.468459 10294 net.cpp:217] Top shape: 100 32 16 16 (819200)
I0331 15:07:09.468492 10294 net.cpp:225] Memory required for data: 30721200
I0331 15:07:09.468528 10294 layer_factory.hpp:114] Creating layer pool2
I0331 15:07:09.468670 10294 net.cpp:160] Creating Layer pool2
I0331 15:07:09.468721 10294 net.cpp:596] pool2 <- conv2
I0331 15:07:09.468814 10294 net.cpp:570] pool2 -> pool2
I0331 15:07:09.468890 10294 net.cpp:210] Setting up pool2
I0331 15:07:09.468941 10294 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0331 15:07:09.468973 10294 net.cpp:225] Memory required for data: 31540400
I0331 15:07:09.469008 10294 layer_factory.hpp:114] Creating layer norm2
I0331 15:07:09.469069 10294 net.cpp:160] Creating Layer norm2
I0331 15:07:09.469105 10294 net.cpp:596] norm2 <- pool2
I0331 15:07:09.469148 10294 net.cpp:570] norm2 -> norm2
I0331 15:07:09.469348 10294 net.cpp:210] Setting up norm2
I0331 15:07:09.469406 10294 net.cpp:217] Top shape: 100 32 8 8 (204800)
I0331 15:07:09.469439 10294 net.cpp:225] Memory required for data: 32359600
I0331 15:07:09.469475 10294 layer_factory.hpp:114] Creating layer conv3
I0331 15:07:09.469544 10294 net.cpp:160] Creating Layer conv3
I0331 15:07:09.469581 10294 net.cpp:596] conv3 <- norm2
I0331 15:07:09.469651 10294 net.cpp:570] conv3 -> conv3
I0331 15:07:09.478734 10294 net.cpp:210] Setting up conv3
I0331 15:07:09.478905 10294 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0331 15:07:09.478950 10294 net.cpp:225] Memory required for data: 33998000
I0331 15:07:09.479043 10294 layer_factory.hpp:114] Creating layer relu3
I0331 15:07:09.479113 10294 net.cpp:160] Creating Layer relu3
I0331 15:07:09.479154 10294 net.cpp:596] relu3 <- conv3
I0331 15:07:09.479202 10294 net.cpp:557] relu3 -> conv3 (in-place)
I0331 15:07:09.479262 10294 net.cpp:210] Setting up relu3
I0331 15:07:09.479308 10294 net.cpp:217] Top shape: 100 64 8 8 (409600)
I0331 15:07:09.479341 10294 net.cpp:225] Memory required for data: 35636400
I0331 15:07:09.479377 10294 layer_factory.hpp:114] Creating layer pool3
I0331 15:07:09.479516 10294 net.cpp:160] Creating Layer pool3
I0331 15:07:09.479569 10294 net.cpp:596] pool3 <- conv3
I0331 15:07:09.479624 10294 net.cpp:570] pool3 -> pool3
I0331 15:07:09.479692 10294 net.cpp:210] Setting up pool3
I0331 15:07:09.479738 10294 net.cpp:217] Top shape: 100 64 4 4 (102400)
I0331 15:07:09.479848 10294 net.cpp:225] Memory required for data: 36046000
I0331 15:07:09.479895 10294 layer_factory.hpp:114] Creating layer ip1
I0331 15:07:09.479979 10294 net.cpp:160] Creating Layer ip1
I0331 15:07:09.480017 10294 net.cpp:596] ip1 <- pool3
I0331 15:07:09.480069 10294 net.cpp:570] ip1 -> ip1
I0331 15:07:09.480911 10294 net.cpp:210] Setting up ip1
I0331 15:07:09.480996 10294 net.cpp:217] Top shape: 100 10 (1000)
I0331 15:07:09.481030 10294 net.cpp:225] Memory required for data: 36050000
I0331 15:07:09.481088 10294 layer_factory.hpp:114] Creating layer ip1_ip1_0_split
I0331 15:07:09.481139 10294 net.cpp:160] Creating Layer ip1_ip1_0_split
I0331 15:07:09.481174 10294 net.cpp:596] ip1_ip1_0_split <- ip1
I0331 15:07:09.481220 10294 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_0
I0331 15:07:09.481276 10294 net.cpp:570] ip1_ip1_0_split -> ip1_ip1_0_split_1
I0331 15:07:09.481330 10294 net.cpp:210] Setting up ip1_ip1_0_split
I0331 15:07:09.481372 10294 net.cpp:217] Top shape: 100 10 (1000)
I0331 15:07:09.481410 10294 net.cpp:217] Top shape: 100 10 (1000)
I0331 15:07:09.481441 10294 net.cpp:225] Memory required for data: 36058000
I0331 15:07:09.481474 10294 layer_factory.hpp:114] Creating layer accuracy
I0331 15:07:09.481554 10294 net.cpp:160] Creating Layer accuracy
I0331 15:07:09.481593 10294 net.cpp:596] accuracy <- ip1_ip1_0_split_0
I0331 15:07:09.481633 10294 net.cpp:596] accuracy <- label_cifar_1_split_0
I0331 15:07:09.481679 10294 net.cpp:570] accuracy -> accuracy
I0331 15:07:09.481745 10294 net.cpp:210] Setting up accuracy
I0331 15:07:09.481830 10294 net.cpp:217] Top shape: (1)
I0331 15:07:09.481979 10294 net.cpp:225] Memory required for data: 36058004
I0331 15:07:09.482023 10294 layer_factory.hpp:114] Creating layer loss
I0331 15:07:09.482085 10294 net.cpp:160] Creating Layer loss
I0331 15:07:09.482121 10294 net.cpp:596] loss <- ip1_ip1_0_split_1
I0331 15:07:09.482161 10294 net.cpp:596] loss <- label_cifar_1_split_1
I0331 15:07:09.482205 10294 net.cpp:570] loss -> loss
I0331 15:07:09.482270 10294 layer_factory.hpp:114] Creating layer loss
I0331 15:07:09.482429 10294 net.cpp:210] Setting up loss
I0331 15:07:09.482504 10294 net.cpp:217] Top shape: (1)
I0331 15:07:09.482538 10294 net.cpp:220]     with loss weight 1
I0331 15:07:09.482597 10294 net.cpp:225] Memory required for data: 36058008
I0331 15:07:09.482635 10294 net.cpp:287] loss needs backward computation.
I0331 15:07:09.482671 10294 net.cpp:289] accuracy does not need backward computation.
I0331 15:07:09.482707 10294 net.cpp:287] ip1_ip1_0_split needs backward computation.
I0331 15:07:09.482741 10294 net.cpp:287] ip1 needs backward computation.
I0331 15:07:09.482816 10294 net.cpp:287] pool3 needs backward computation.
I0331 15:07:09.482852 10294 net.cpp:287] relu3 needs backward computation.
I0331 15:07:09.482883 10294 net.cpp:287] conv3 needs backward computation.
I0331 15:07:09.482916 10294 net.cpp:287] norm2 needs backward computation.
I0331 15:07:09.482949 10294 net.cpp:287] pool2 needs backward computation.
I0331 15:07:09.482982 10294 net.cpp:287] relu2 needs backward computation.
I0331 15:07:09.483013 10294 net.cpp:287] conv2 needs backward computation.
I0331 15:07:09.483045 10294 net.cpp:287] norm1 needs backward computation.
I0331 15:07:09.483078 10294 net.cpp:287] relu1 needs backward computation.
I0331 15:07:09.483110 10294 net.cpp:287] pool1 needs backward computation.
I0331 15:07:09.483144 10294 net.cpp:287] conv1 needs backward computation.
I0331 15:07:09.483177 10294 net.cpp:289] label_cifar_1_split does not need backward computation.
I0331 15:07:09.483212 10294 net.cpp:289] cifar does not need backward computation.
I0331 15:07:09.483242 10294 net.cpp:331] This network produces output accuracy
I0331 15:07:09.483278 10294 net.cpp:331] This network produces output loss
I0331 15:07:09.483340 10294 net.cpp:345] Network initialization done.
I0331 15:07:09.483623 10294 solver.cpp:104] Solver scaffolding done.
I0331 15:07:09.483793 10294 caffe.cpp:310] Starting Optimization
I0331 15:07:09.483845 10294 solver.cpp:340] Solving CIFAR10_full
I0331 15:07:09.483921 10294 solver.cpp:341] Learning Rate Policy: fixed
I0331 15:07:09.483956 10294 solver.cpp:406] Iteration 0, Testing net (#0)
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 1 bound to OS proc set {1}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 2 bound to OS proc set {2}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 4 bound to OS proc set {4}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 7 bound to OS proc set {7}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 5 bound to OS proc set {5}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 6 bound to OS proc set {6}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 3 bound to OS proc set {3}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 8 bound to OS proc set {8}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 9 bound to OS proc set {9}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 11 bound to OS proc set {11}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 10 bound to OS proc set {10}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 12 bound to OS proc set {12}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 13 bound to OS proc set {13}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 14 bound to OS proc set {14}
OMP: Info #242: KMP_AFFINITY: pid 10294 thread 15 bound to OS proc set {15}
I0331 15:07:09.940665 10294 solver.cpp:286] Iteration 0, loss = 2.30258
I0331 15:07:09.940879 10294 solver.cpp:303]     Train net output #0: loss = 2.30258 (* 1 = 2.30258 loss)
I0331 15:07:09.940961 10294 sgd_solver.cpp:143] Iteration 0, lr = 0.001
I0331 15:10:56.134579 10294 solver.cpp:382] Iteration 800, loss = 1.33217
I0331 15:10:56.134917 10294 solver.cpp:391] Optimization Done.
I0331 15:10:56.134954 10294 caffe.cpp:313] Optimization Done.

real	3m47.234s
user	59m19.726s
sys	1m2.365s
